akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  extensions = ["lerna.akka.entityreplication.ClusterReplication"]
  actor {
    provider = cluster
    serialize-messages = off
  }
}
akka.remote.artery.canonical.port = 0
akka.cluster {
  jmx.enabled = off
}

lerna.akka.entityreplication.raft {
  heartbeat-interval = 300ms
  election-timeout = 2000ms
  number-of-shards = 5
  raft-actor-auto-start {
    frequency = 200ms
    number-of-actors = 2
    retry-interval = 500ms
  }
  persistence {
    journal.plugin = "akka.persistence.cassandra.journal"
    snapshot-store.plugin = "akka.persistence.cassandra.snapshot"
    query.plugin = "akka.persistence.cassandra.query"
  }
  eventsourced {
    committed-log-entries-check-interval = 300ms
    persistence {
      journal.plugin = "akka.persistence.cassandra.journal"
      snapshot-store.plugin = "akka.persistence.cassandra.snapshot"
    }
  }
}

// Needed for initializing the default journal plugin with event adapters by PersistenceInitializationAwaiter
akka.persistence.cassandra.journal = ${akka.persistence.cassandra.journal} ${lerna.akka.entityreplication.raft.persistence.journal-plugin-additional}
