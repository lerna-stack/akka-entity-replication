Index.PACKAGES = {"akka.pattern" : [], "lerna.akka.entityreplication.raft.snapshot" : [{"name" : "lerna.akka.entityreplication.raft.snapshot.ShardSnapshotStore", "shortDescription" : "", "object" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore$.html", "members_class" : [{"label" : "snapshotStoreName", "tail" : "(typeName: TypeName, entityId: NormalizedEntityId): String", "member" : "lerna.akka.entityreplication.raft.snapshot.ShardSnapshotStore.snapshotStoreName", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html#snapshotStoreName(typeName:lerna.akka.entityreplication.model.TypeName,entityId:lerna.akka.entityreplication.model.NormalizedEntityId):String", "kind" : "def"}, {"label" : "snapshotStore", "tail" : "(entityId: NormalizedEntityId): ActorRef", "member" : "lerna.akka.entityreplication.raft.snapshot.ShardSnapshotStore.snapshotStore", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html#snapshotStore(entityId:lerna.akka.entityreplication.model.NormalizedEntityId):akka.actor.ActorRef", "kind" : "def"}, {"label" : "receive", "tail" : "(): Receive", "member" : "lerna.akka.entityreplication.raft.snapshot.ShardSnapshotStore.receive", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html#receive:ShardSnapshotStore.this.Receive", "kind" : "def"}, {"member" : "lerna.akka.entityreplication.raft.snapshot.ShardSnapshotStore#<init>", "error" : "unsupported entity"}, {"label" : "log", "tail" : "(): LoggingAdapter", "member" : "akka.actor.ActorLogging.log", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html#log:akka.event.LoggingAdapter", "kind" : "def"}, {"label" : "unhandled", "tail" : "(message: Any): Unit", "member" : "akka.actor.Actor.unhandled", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html#unhandled(message:Any):Unit", "kind" : "def"}, {"label" : "postRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.postRestart", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html#postRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "preRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.Actor.preRestart", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html#preRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "postStop", "tail" : "(): Unit", "member" : "akka.actor.Actor.postStop", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html#postStop():Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.preStart", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html#preStart():Unit", "kind" : "def"}, {"label" : "supervisorStrategy", "tail" : "(): SupervisorStrategy", "member" : "akka.actor.Actor.supervisorStrategy", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html#supervisorStrategy:akka.actor.SupervisorStrategy", "kind" : "def"}, {"label" : "aroundPostRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.aroundPostRestart", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html#aroundPostRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "aroundPreRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.Actor.aroundPreRestart", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html#aroundPreRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "aroundPostStop", "tail" : "(): Unit", "member" : "akka.actor.Actor.aroundPostStop", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html#aroundPostStop():Unit", "kind" : "def"}, {"label" : "aroundPreStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.aroundPreStart", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html#aroundPreStart():Unit", "kind" : "def"}, {"label" : "aroundReceive", "tail" : "(receive: akka.actor.Actor.Receive, msg: Any): Unit", "member" : "akka.actor.Actor.aroundReceive", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html#aroundReceive(receive:akka.actor.Actor.Receive,msg:Any):Unit", "kind" : "def"}, {"label" : "sender", "tail" : "(): ActorRef", "member" : "akka.actor.Actor.sender", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html#sender():akka.actor.ActorRef", "kind" : "final def"}, {"label" : "self", "tail" : ": ActorRef", "member" : "akka.actor.Actor.self", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html#self:akka.actor.ActorRef", "kind" : "implicit final val"}, {"label" : "context", "tail" : ": ActorContext", "member" : "akka.actor.Actor.context", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html#context:akka.actor.ActorContext", "kind" : "implicit val"}, {"label" : "Receive", "tail" : "", "member" : "akka.actor.Actor.Receive", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html#Receive=akka.actor.Actor.Receive", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "props", "tail" : "(typeName: TypeName, settings: RaftSettings, selfMemberIndex: MemberIndex): Props", "member" : "lerna.akka.entityreplication.raft.snapshot.ShardSnapshotStore.props", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore$.html#props(typeName:lerna.akka.entityreplication.model.TypeName,settings:lerna.akka.entityreplication.raft.RaftSettings,selfMemberIndex:lerna.akka.entityreplication.raft.routing.MemberIndex):akka.actor.Props", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lerna\/akka\/entityreplication\/raft\/snapshot\/ShardSnapshotStore.html", "kind" : "object"}, {"name" : "lerna.akka.entityreplication.raft.snapshot.SnapshotProtocol", "shortDescription" : "", "object" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotProtocol$.html", "members_object" : [{"label" : "EntitySnapshot", "tail" : "", "member" : "lerna.akka.entityreplication.raft.snapshot.SnapshotProtocol.EntitySnapshot", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotProtocol$.html#EntitySnapshotextendsClusterReplicationSerializablewithProductwithSerializable", "kind" : "final case class"}, {"label" : "EntitySnapshotMetadata", "tail" : "", "member" : "lerna.akka.entityreplication.raft.snapshot.SnapshotProtocol.EntitySnapshotMetadata", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotProtocol$.html#EntitySnapshotMetadataextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "EntityState", "tail" : "", "member" : "lerna.akka.entityreplication.raft.snapshot.SnapshotProtocol.EntityState", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotProtocol$.html#EntityStateextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "SnapshotNotFound", "tail" : "", "member" : "lerna.akka.entityreplication.raft.snapshot.SnapshotProtocol.SnapshotNotFound", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotProtocol$.html#SnapshotNotFoundextendsSnapshotProtocol.FetchSnapshotResponsewithProductwithSerializable", "kind" : "final case class"}, {"label" : "SnapshotFound", "tail" : "", "member" : "lerna.akka.entityreplication.raft.snapshot.SnapshotProtocol.SnapshotFound", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotProtocol$.html#SnapshotFoundextendsSnapshotProtocol.FetchSnapshotResponsewithProductwithSerializable", "kind" : "final case class"}, {"label" : "FetchSnapshotResponse", "tail" : "", "member" : "lerna.akka.entityreplication.raft.snapshot.SnapshotProtocol.FetchSnapshotResponse", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotProtocol$.html#FetchSnapshotResponseextendsAnyRef", "kind" : "sealed trait"}, {"label" : "SaveSnapshotFailure", "tail" : "", "member" : "lerna.akka.entityreplication.raft.snapshot.SnapshotProtocol.SaveSnapshotFailure", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotProtocol$.html#SaveSnapshotFailureextendsSnapshotProtocol.SaveSnapshotResponsewithProductwithSerializable", "kind" : "final case class"}, {"label" : "SaveSnapshotSuccess", "tail" : "", "member" : "lerna.akka.entityreplication.raft.snapshot.SnapshotProtocol.SaveSnapshotSuccess", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotProtocol$.html#SaveSnapshotSuccessextendsSnapshotProtocol.SaveSnapshotResponsewithProductwithSerializable", "kind" : "final case class"}, {"label" : "SaveSnapshotResponse", "tail" : "", "member" : "lerna.akka.entityreplication.raft.snapshot.SnapshotProtocol.SaveSnapshotResponse", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotProtocol$.html#SaveSnapshotResponseextendsSnapshotProtocol.Response", "kind" : "sealed trait"}, {"label" : "Response", "tail" : "", "member" : "lerna.akka.entityreplication.raft.snapshot.SnapshotProtocol.Response", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotProtocol$.html#ResponseextendsAnyRef", "kind" : "sealed trait"}, {"label" : "FetchSnapshot", "tail" : "", "member" : "lerna.akka.entityreplication.raft.snapshot.SnapshotProtocol.FetchSnapshot", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotProtocol$.html#FetchSnapshotextendsSnapshotProtocol.CommandwithProductwithSerializable", "kind" : "final case class"}, {"label" : "SaveSnapshot", "tail" : "", "member" : "lerna.akka.entityreplication.raft.snapshot.SnapshotProtocol.SaveSnapshot", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotProtocol$.html#SaveSnapshotextendsSnapshotProtocol.CommandwithProductwithSerializable", "kind" : "final case class"}, {"label" : "Command", "tail" : "", "member" : "lerna.akka.entityreplication.raft.snapshot.SnapshotProtocol.Command", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotProtocol$.html#CommandextendsAnyRef", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotProtocol$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotProtocol$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotProtocol$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotProtocol$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotProtocol$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotProtocol$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotProtocol$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotProtocol$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotProtocol$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotProtocol$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotProtocol$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotProtocol$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotProtocol$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotProtocol$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotProtocol$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotProtocol$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotProtocol$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotProtocol$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotProtocol$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lerna.akka.entityreplication.raft.snapshot.SnapshotStore", "shortDescription" : "", "object" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore$.html", "members_class" : [{"label" : "unhandled", "tail" : "(message: Any): Unit", "member" : "lerna.akka.entityreplication.raft.snapshot.SnapshotStore.unhandled", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#unhandled(message:Any):Unit", "kind" : "def"}, {"label" : "savingSnapshot", "tail" : "(replyTo: ActorRef, snapshot: EntitySnapshot, prevSnapshot: Option[EntitySnapshot]): Receive", "member" : "lerna.akka.entityreplication.raft.snapshot.SnapshotStore.savingSnapshot", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#savingSnapshot(replyTo:akka.actor.ActorRef,snapshot:lerna.akka.entityreplication.raft.snapshot.SnapshotProtocol.EntitySnapshot,prevSnapshot:Option[lerna.akka.entityreplication.raft.snapshot.SnapshotProtocol.EntitySnapshot]):SnapshotStore.this.Receive", "kind" : "def"}, {"label" : "handleSaveSnapshot", "tail" : "(command: SaveSnapshot, prevSnapshot: Option[EntitySnapshot]): Unit", "member" : "lerna.akka.entityreplication.raft.snapshot.SnapshotStore.handleSaveSnapshot", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#handleSaveSnapshot(command:lerna.akka.entityreplication.raft.snapshot.SnapshotProtocol.SaveSnapshot,prevSnapshot:Option[lerna.akka.entityreplication.raft.snapshot.SnapshotProtocol.EntitySnapshot]):Unit", "kind" : "def"}, {"label" : "hasSnapshot", "tail" : "(snapshot: EntitySnapshot): Receive", "member" : "lerna.akka.entityreplication.raft.snapshot.SnapshotStore.hasSnapshot", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#hasSnapshot(snapshot:lerna.akka.entityreplication.raft.snapshot.SnapshotProtocol.EntitySnapshot):SnapshotStore.this.Receive", "kind" : "def"}, {"label" : "hasNoSnapshot", "tail" : "(): Receive", "member" : "lerna.akka.entityreplication.raft.snapshot.SnapshotStore.hasNoSnapshot", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#hasNoSnapshot:SnapshotStore.this.Receive", "kind" : "def"}, {"label" : "receiveCommand", "tail" : "(): Receive", "member" : "lerna.akka.entityreplication.raft.snapshot.SnapshotStore.receiveCommand", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#receiveCommand:SnapshotStore.this.Receive", "kind" : "def"}, {"label" : "receiveRecover", "tail" : "(): Receive", "member" : "lerna.akka.entityreplication.raft.snapshot.SnapshotStore.receiveRecover", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#receiveRecover:SnapshotStore.this.Receive", "kind" : "def"}, {"label" : "recovery", "tail" : "(): Recovery", "member" : "lerna.akka.entityreplication.raft.snapshot.SnapshotStore.recovery", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#recovery:akka.persistence.Recovery", "kind" : "def"}, {"label" : "snapshotPluginId", "tail" : "(): String", "member" : "lerna.akka.entityreplication.raft.snapshot.SnapshotStore.snapshotPluginId", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#snapshotPluginId:String", "kind" : "def"}, {"label" : "journalPluginId", "tail" : "(): String", "member" : "lerna.akka.entityreplication.raft.snapshot.SnapshotStore.journalPluginId", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#journalPluginId:String", "kind" : "def"}, {"label" : "persistenceId", "tail" : "(): String", "member" : "lerna.akka.entityreplication.raft.snapshot.SnapshotStore.persistenceId", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#persistenceId:String", "kind" : "def"}, {"member" : "lerna.akka.entityreplication.raft.snapshot.SnapshotStore#<init>", "error" : "unsupported entity"}, {"label" : "log", "tail" : "(): LoggingAdapter", "member" : "akka.actor.ActorLogging.log", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#log:akka.event.LoggingAdapter", "kind" : "def"}, {"label" : "defer", "tail" : "(event: A)(handler: (A) => Unit): Unit", "member" : "akka.persistence.PersistentActor.defer", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#defer[A](event:A)(handler:A=>Unit):Unit", "kind" : "def"}, {"label" : "deferAsync", "tail" : "(event: A)(handler: (A) => Unit): Unit", "member" : "akka.persistence.PersistentActor.deferAsync", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#deferAsync[A](event:A)(handler:A=>Unit):Unit", "kind" : "def"}, {"label" : "persistAllAsync", "tail" : "(events: Seq[A])(handler: (A) => Unit): Unit", "member" : "akka.persistence.PersistentActor.persistAllAsync", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#persistAllAsync[A](events:Seq[A])(handler:A=>Unit):Unit", "kind" : "def"}, {"label" : "persistAsync", "tail" : "(event: A)(handler: (A) => Unit): Unit", "member" : "akka.persistence.PersistentActor.persistAsync", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#persistAsync[A](event:A)(handler:A=>Unit):Unit", "kind" : "def"}, {"label" : "persistAll", "tail" : "(events: Seq[A])(handler: (A) => Unit): Unit", "member" : "akka.persistence.PersistentActor.persistAll", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#persistAll[A](events:Seq[A])(handler:A=>Unit):Unit", "kind" : "def"}, {"label" : "persist", "tail" : "(event: A)(handler: (A) => Unit): Unit", "member" : "akka.persistence.PersistentActor.persist", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#persist[A](event:A)(handler:A=>Unit):Unit", "kind" : "def"}, {"label" : "receive", "tail" : "(): Receive", "member" : "akka.persistence.PersistentActor.receive", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#receive:PersistentActor.this.Receive", "kind" : "def"}, {"label" : "unstashAll", "tail" : "(): Unit", "member" : "akka.persistence.Eventsourced.unstashAll", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#unstashAll():Unit", "kind" : "def"}, {"label" : "stash", "tail" : "(): Unit", "member" : "akka.persistence.Eventsourced.stash", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#stash():Unit", "kind" : "def"}, {"label" : "recoveryFinished", "tail" : "(): Boolean", "member" : "akka.persistence.Eventsourced.recoveryFinished", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#recoveryFinished:Boolean", "kind" : "def"}, {"label" : "recoveryRunning", "tail" : "(): Boolean", "member" : "akka.persistence.Eventsourced.recoveryRunning", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#recoveryRunning:Boolean", "kind" : "def"}, {"label" : "deleteMessages", "tail" : "(toSequenceNr: Long): Unit", "member" : "akka.persistence.Eventsourced.deleteMessages", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#deleteMessages(toSequenceNr:Long):Unit", "kind" : "def"}, {"label" : "aroundPostStop", "tail" : "(): Unit", "member" : "akka.persistence.Eventsourced.aroundPostStop", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#aroundPostStop():Unit", "kind" : "def"}, {"label" : "aroundPostRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.persistence.Eventsourced.aroundPostRestart", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#aroundPostRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "aroundPreRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.persistence.Eventsourced.aroundPreRestart", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#aroundPreRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "aroundPreStart", "tail" : "(): Unit", "member" : "akka.persistence.Eventsourced.aroundPreStart", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#aroundPreStart():Unit", "kind" : "def"}, {"label" : "aroundReceive", "tail" : "(receive: Receive, message: Any): Unit", "member" : "akka.persistence.Eventsourced.aroundReceive", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#aroundReceive(receive:Eventsourced.this.Receive,message:Any):Unit", "kind" : "def"}, {"label" : "onPersistRejected", "tail" : "(cause: Throwable, event: Any, seqNr: Long): Unit", "member" : "akka.persistence.Eventsourced.onPersistRejected", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#onPersistRejected(cause:Throwable,event:Any,seqNr:Long):Unit", "kind" : "def"}, {"label" : "onPersistFailure", "tail" : "(cause: Throwable, event: Any, seqNr: Long): Unit", "member" : "akka.persistence.Eventsourced.onPersistFailure", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#onPersistFailure(cause:Throwable,event:Any,seqNr:Long):Unit", "kind" : "def"}, {"label" : "onRecoveryFailure", "tail" : "(cause: Throwable, event: Option[Any]): Unit", "member" : "akka.persistence.Eventsourced.onRecoveryFailure", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#onRecoveryFailure(cause:Throwable,event:Option[Any]):Unit", "kind" : "def"}, {"label" : "snapshotSequenceNr", "tail" : "(): Long", "member" : "akka.persistence.Eventsourced.snapshotSequenceNr", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#snapshotSequenceNr:Long", "kind" : "def"}, {"label" : "lastSequenceNr", "tail" : "(): Long", "member" : "akka.persistence.Eventsourced.lastSequenceNr", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#lastSequenceNr:Long", "kind" : "def"}, {"label" : "snapshotterId", "tail" : "(): String", "member" : "akka.persistence.Eventsourced.snapshotterId", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#snapshotterId:String", "kind" : "def"}, {"label" : "internalStashOverflowStrategy", "tail" : "(): StashOverflowStrategy", "member" : "akka.persistence.PersistenceStash.internalStashOverflowStrategy", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#internalStashOverflowStrategy:akka.persistence.StashOverflowStrategy", "kind" : "def"}, {"label" : "postStop", "tail" : "(): Unit", "member" : "akka.actor.UnrestrictedStash.postStop", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#postStop():Unit", "kind" : "def"}, {"label" : "preRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.UnrestrictedStash.preRestart", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#preRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "deleteSnapshots", "tail" : "(criteria: SnapshotSelectionCriteria): Unit", "member" : "akka.persistence.Snapshotter.deleteSnapshots", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#deleteSnapshots(criteria:akka.persistence.SnapshotSelectionCriteria):Unit", "kind" : "def"}, {"label" : "deleteSnapshot", "tail" : "(sequenceNr: Long): Unit", "member" : "akka.persistence.Snapshotter.deleteSnapshot", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#deleteSnapshot(sequenceNr:Long):Unit", "kind" : "def"}, {"label" : "saveSnapshot", "tail" : "(snapshot: Any): Unit", "member" : "akka.persistence.Snapshotter.saveSnapshot", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#saveSnapshot(snapshot:Any):Unit", "kind" : "def"}, {"label" : "loadSnapshot", "tail" : "(persistenceId: String, criteria: SnapshotSelectionCriteria, toSequenceNr: Long): Unit", "member" : "akka.persistence.Snapshotter.loadSnapshot", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#loadSnapshot(persistenceId:String,criteria:akka.persistence.SnapshotSelectionCriteria,toSequenceNr:Long):Unit", "kind" : "def"}, {"label" : "postRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.postRestart", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#postRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.preStart", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#preStart():Unit", "kind" : "def"}, {"label" : "supervisorStrategy", "tail" : "(): SupervisorStrategy", "member" : "akka.actor.Actor.supervisorStrategy", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#supervisorStrategy:akka.actor.SupervisorStrategy", "kind" : "def"}, {"label" : "sender", "tail" : "(): ActorRef", "member" : "akka.actor.Actor.sender", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#sender():akka.actor.ActorRef", "kind" : "final def"}, {"label" : "self", "tail" : ": ActorRef", "member" : "akka.actor.Actor.self", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#self:akka.actor.ActorRef", "kind" : "implicit final val"}, {"label" : "context", "tail" : ": ActorContext", "member" : "akka.actor.Actor.context", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#context:akka.actor.ActorContext", "kind" : "implicit val"}, {"label" : "Receive", "tail" : "", "member" : "akka.actor.Actor.Receive", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#Receive=akka.actor.Actor.Receive", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "props", "tail" : "(typeName: TypeName, entityId: NormalizedEntityId, settings: RaftSettings, selfMemberIndex: MemberIndex): Props", "member" : "lerna.akka.entityreplication.raft.snapshot.SnapshotStore.props", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore$.html#props(typeName:lerna.akka.entityreplication.model.TypeName,entityId:lerna.akka.entityreplication.model.NormalizedEntityId,settings:lerna.akka.entityreplication.raft.RaftSettings,selfMemberIndex:lerna.akka.entityreplication.raft.routing.MemberIndex):akka.actor.Props", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lerna\/akka\/entityreplication\/raft\/snapshot\/SnapshotStore.html", "kind" : "object"}], "lerna.akka.entityreplication.raft.protocol" : [{"name" : "lerna.akka.entityreplication.raft.protocol.RaftCommands", "shortDescription" : "", "object" : "lerna\/akka\/entityreplication\/raft\/protocol\/RaftCommands$.html", "members_object" : [{"label" : "InstallSnapshotSucceeded", "tail" : "", "member" : "lerna.akka.entityreplication.raft.protocol.RaftCommands.InstallSnapshotSucceeded", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/RaftCommands$.html#InstallSnapshotSucceededextendsRaftCommands.InstallSnapshotResponsewithClusterReplicationSerializablewithProductwithSerializable", "kind" : "final case class"}, {"label" : "InstallSnapshotResponse", "tail" : "", "member" : "lerna.akka.entityreplication.raft.protocol.RaftCommands.InstallSnapshotResponse", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/RaftCommands$.html#InstallSnapshotResponseextendsShardRequest", "kind" : "sealed trait"}, {"label" : "InstallSnapshot", "tail" : "", "member" : "lerna.akka.entityreplication.raft.protocol.RaftCommands.InstallSnapshot", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/RaftCommands$.html#InstallSnapshotextendsRaftCommands.RaftRequestwithClusterReplicationSerializablewithProductwithSerializable", "kind" : "final case class"}, {"label" : "AppendEntriesFailed", "tail" : "", "member" : "lerna.akka.entityreplication.raft.protocol.RaftCommands.AppendEntriesFailed", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/RaftCommands$.html#AppendEntriesFailedextendsRaftCommands.AppendEntriesResponsewithClusterReplicationSerializablewithProductwithSerializable", "kind" : "case class"}, {"label" : "AppendEntriesSucceeded", "tail" : "", "member" : "lerna.akka.entityreplication.raft.protocol.RaftCommands.AppendEntriesSucceeded", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/RaftCommands$.html#AppendEntriesSucceededextendsRaftCommands.AppendEntriesResponsewithClusterReplicationSerializablewithProductwithSerializable", "kind" : "case class"}, {"label" : "AppendEntriesResponse", "tail" : "", "member" : "lerna.akka.entityreplication.raft.protocol.RaftCommands.AppendEntriesResponse", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/RaftCommands$.html#AppendEntriesResponseextendsRaftCommands.RaftResponse", "kind" : "sealed trait"}, {"label" : "AppendEntries", "tail" : "", "member" : "lerna.akka.entityreplication.raft.protocol.RaftCommands.AppendEntries", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/RaftCommands$.html#AppendEntriesextendsRaftCommands.RaftRequestwithClusterReplicationSerializablewithProductwithSerializable", "kind" : "case class"}, {"label" : "RequestVoteDenied", "tail" : "", "member" : "lerna.akka.entityreplication.raft.protocol.RaftCommands.RequestVoteDenied", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/RaftCommands$.html#RequestVoteDeniedextendsRaftCommands.RequestVoteResponsewithClusterReplicationSerializablewithProductwithSerializable", "kind" : "case class"}, {"label" : "RequestVoteAccepted", "tail" : "", "member" : "lerna.akka.entityreplication.raft.protocol.RaftCommands.RequestVoteAccepted", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/RaftCommands$.html#RequestVoteAcceptedextendsRaftCommands.RequestVoteResponsewithClusterReplicationSerializablewithProductwithSerializable", "kind" : "case class"}, {"label" : "RequestVoteResponse", "tail" : "", "member" : "lerna.akka.entityreplication.raft.protocol.RaftCommands.RequestVoteResponse", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/RaftCommands$.html#RequestVoteResponseextendsRaftCommands.RaftResponse", "kind" : "sealed trait"}, {"label" : "RequestVote", "tail" : "", "member" : "lerna.akka.entityreplication.raft.protocol.RaftCommands.RequestVote", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/RaftCommands$.html#RequestVoteextendsRaftCommands.RaftRequestwithClusterReplicationSerializablewithProductwithSerializable", "kind" : "case class"}, {"label" : "RaftResponse", "tail" : "", "member" : "lerna.akka.entityreplication.raft.protocol.RaftCommands.RaftResponse", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/RaftCommands$.html#RaftResponseextendsAnyRef", "kind" : "sealed trait"}, {"label" : "RaftRequest", "tail" : "", "member" : "lerna.akka.entityreplication.raft.protocol.RaftCommands.RaftRequest", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/RaftCommands$.html#RaftRequestextendsShardRequest", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/RaftCommands$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/RaftCommands$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/RaftCommands$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/RaftCommands$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/RaftCommands$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/RaftCommands$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/RaftCommands$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/RaftCommands$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/RaftCommands$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/RaftCommands$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/RaftCommands$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/RaftCommands$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/RaftCommands$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/RaftCommands$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/RaftCommands$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/RaftCommands$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/RaftCommands$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/RaftCommands$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/RaftCommands$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lerna.akka.entityreplication.raft.protocol.ShardRequest", "trait" : "lerna\/akka\/entityreplication\/raft\/protocol\/ShardRequest.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/ShardRequest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/ShardRequest.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/ShardRequest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/ShardRequest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/ShardRequest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/ShardRequest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/ShardRequest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/ShardRequest.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/ShardRequest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/ShardRequest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/ShardRequest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/ShardRequest.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/ShardRequest.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/ShardRequest.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/ShardRequest.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/ShardRequest.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/ShardRequest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/ShardRequest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/ShardRequest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "shardId", "tail" : "(): NormalizedShardId", "member" : "lerna.akka.entityreplication.raft.protocol.ShardRequest.shardId", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/ShardRequest.html#shardId:lerna.akka.entityreplication.model.NormalizedShardId", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "lerna.akka.entityreplication.raft.protocol.SnapshotOffer", "shortDescription" : "", "members_case class" : [{"member" : "lerna.akka.entityreplication.raft.protocol.SnapshotOffer#<init>", "error" : "unsupported entity"}, {"label" : "snapshot", "tail" : ": Any", "member" : "lerna.akka.entityreplication.raft.protocol.SnapshotOffer.snapshot", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SnapshotOffer.html#snapshot:Any", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SnapshotOffer.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SnapshotOffer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SnapshotOffer.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SnapshotOffer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SnapshotOffer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SnapshotOffer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SnapshotOffer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SnapshotOffer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SnapshotOffer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SnapshotOffer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SnapshotOffer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SnapshotOffer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SnapshotOffer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SnapshotOffer.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SnapshotOffer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SnapshotOffer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SnapshotOffer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lerna\/akka\/entityreplication\/raft\/protocol\/SnapshotOffer.html", "kind" : "case class"}, {"name" : "lerna.akka.entityreplication.raft.protocol.SuspendEntity", "shortDescription" : "", "members_case class" : [{"member" : "lerna.akka.entityreplication.raft.protocol.SuspendEntity#<init>", "error" : "unsupported entity"}, {"label" : "stopMessage", "tail" : ": Any", "member" : "lerna.akka.entityreplication.raft.protocol.SuspendEntity.stopMessage", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SuspendEntity.html#stopMessage:Any", "kind" : "val"}, {"label" : "entityId", "tail" : ": NormalizedEntityId", "member" : "lerna.akka.entityreplication.raft.protocol.SuspendEntity.entityId", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SuspendEntity.html#entityId:lerna.akka.entityreplication.model.NormalizedEntityId", "kind" : "val"}, {"label" : "shardId", "tail" : ": NormalizedShardId", "member" : "lerna.akka.entityreplication.raft.protocol.SuspendEntity.shardId", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SuspendEntity.html#shardId:lerna.akka.entityreplication.model.NormalizedShardId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SuspendEntity.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SuspendEntity.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SuspendEntity.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SuspendEntity.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SuspendEntity.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SuspendEntity.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SuspendEntity.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SuspendEntity.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SuspendEntity.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SuspendEntity.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SuspendEntity.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SuspendEntity.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SuspendEntity.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SuspendEntity.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SuspendEntity.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SuspendEntity.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/SuspendEntity.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lerna\/akka\/entityreplication\/raft\/protocol\/SuspendEntity.html", "kind" : "case class"}, {"name" : "lerna.akka.entityreplication.raft.protocol.TryCreateEntity", "shortDescription" : "", "members_case class" : [{"member" : "lerna.akka.entityreplication.raft.protocol.TryCreateEntity#<init>", "error" : "unsupported entity"}, {"label" : "entityId", "tail" : ": NormalizedEntityId", "member" : "lerna.akka.entityreplication.raft.protocol.TryCreateEntity.entityId", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/TryCreateEntity.html#entityId:lerna.akka.entityreplication.model.NormalizedEntityId", "kind" : "val"}, {"label" : "shardId", "tail" : ": NormalizedShardId", "member" : "lerna.akka.entityreplication.raft.protocol.TryCreateEntity.shardId", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/TryCreateEntity.html#shardId:lerna.akka.entityreplication.model.NormalizedShardId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/TryCreateEntity.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/TryCreateEntity.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/TryCreateEntity.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/TryCreateEntity.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/TryCreateEntity.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/TryCreateEntity.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/TryCreateEntity.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/TryCreateEntity.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/TryCreateEntity.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/TryCreateEntity.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/TryCreateEntity.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/TryCreateEntity.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/TryCreateEntity.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/TryCreateEntity.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/TryCreateEntity.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/TryCreateEntity.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/protocol\/TryCreateEntity.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lerna\/akka\/entityreplication\/raft\/protocol\/TryCreateEntity.html", "kind" : "case class"}], "lerna.akka.entityreplication.raft.routing" : [{"name" : "lerna.akka.entityreplication.raft.routing.MemberIndex", "shortDescription" : "", "object" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex$.html", "members_object" : [{"label" : "apply", "tail" : "(role: String): MemberIndex", "member" : "lerna.akka.entityreplication.raft.routing.MemberIndex.apply", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex$.html#apply(role:String):lerna.akka.entityreplication.raft.routing.MemberIndex", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "lerna.akka.entityreplication.raft.routing.MemberIndex.toString", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex.html#toString():String", "kind" : "def"}, {"label" : "role", "tail" : ": String", "member" : "lerna.akka.entityreplication.raft.routing.MemberIndex.role", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex.html#role:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lerna\/akka\/entityreplication\/raft\/routing\/MemberIndex.html", "kind" : "object"}], "akka" : [], "lerna.akka.entityreplication.raft.eventhandler" : [{"name" : "lerna.akka.entityreplication.raft.eventhandler.CommitLogStore", "object" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore$.html", "members_object" : [{"label" : "ReplicationId", "tail" : "", "member" : "lerna.akka.entityreplication.raft.eventhandler.CommitLogStore.ReplicationId", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore$.html#ReplicationId=String", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore.html", "kind" : "object", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStore.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "lerna.akka.entityreplication.raft.eventhandler.CommitLogStoreActor", "shortDescription" : "", "object" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor$.html", "members_class" : [{"label" : "persistenceId", "tail" : "(): String", "member" : "lerna.akka.entityreplication.raft.eventhandler.CommitLogStoreActor.persistenceId", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#persistenceId:String", "kind" : "def"}, {"label" : "receiveCommand", "tail" : "(): Receive", "member" : "lerna.akka.entityreplication.raft.eventhandler.CommitLogStoreActor.receiveCommand", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#receiveCommand:CommitLogStoreActor.this.Receive", "kind" : "def"}, {"label" : "receiveRecover", "tail" : "(): Receive", "member" : "lerna.akka.entityreplication.raft.eventhandler.CommitLogStoreActor.receiveRecover", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#receiveRecover:CommitLogStoreActor.this.Receive", "kind" : "def"}, {"label" : "snapshotPluginId", "tail" : "(): String", "member" : "lerna.akka.entityreplication.raft.eventhandler.CommitLogStoreActor.snapshotPluginId", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#snapshotPluginId:String", "kind" : "def"}, {"label" : "journalPluginId", "tail" : "(): String", "member" : "lerna.akka.entityreplication.raft.eventhandler.CommitLogStoreActor.journalPluginId", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#journalPluginId:String", "kind" : "def"}, {"member" : "lerna.akka.entityreplication.raft.eventhandler.CommitLogStoreActor#<init>", "error" : "unsupported entity"}, {"label" : "defer", "tail" : "(event: A)(handler: (A) => Unit): Unit", "member" : "akka.persistence.PersistentActor.defer", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#defer[A](event:A)(handler:A=>Unit):Unit", "kind" : "def"}, {"label" : "deferAsync", "tail" : "(event: A)(handler: (A) => Unit): Unit", "member" : "akka.persistence.PersistentActor.deferAsync", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#deferAsync[A](event:A)(handler:A=>Unit):Unit", "kind" : "def"}, {"label" : "persistAllAsync", "tail" : "(events: Seq[A])(handler: (A) => Unit): Unit", "member" : "akka.persistence.PersistentActor.persistAllAsync", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#persistAllAsync[A](events:Seq[A])(handler:A=>Unit):Unit", "kind" : "def"}, {"label" : "persistAsync", "tail" : "(event: A)(handler: (A) => Unit): Unit", "member" : "akka.persistence.PersistentActor.persistAsync", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#persistAsync[A](event:A)(handler:A=>Unit):Unit", "kind" : "def"}, {"label" : "persistAll", "tail" : "(events: Seq[A])(handler: (A) => Unit): Unit", "member" : "akka.persistence.PersistentActor.persistAll", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#persistAll[A](events:Seq[A])(handler:A=>Unit):Unit", "kind" : "def"}, {"label" : "persist", "tail" : "(event: A)(handler: (A) => Unit): Unit", "member" : "akka.persistence.PersistentActor.persist", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#persist[A](event:A)(handler:A=>Unit):Unit", "kind" : "def"}, {"label" : "receive", "tail" : "(): Receive", "member" : "akka.persistence.PersistentActor.receive", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#receive:PersistentActor.this.Receive", "kind" : "def"}, {"label" : "unstashAll", "tail" : "(): Unit", "member" : "akka.persistence.Eventsourced.unstashAll", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#unstashAll():Unit", "kind" : "def"}, {"label" : "stash", "tail" : "(): Unit", "member" : "akka.persistence.Eventsourced.stash", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#stash():Unit", "kind" : "def"}, {"label" : "recoveryFinished", "tail" : "(): Boolean", "member" : "akka.persistence.Eventsourced.recoveryFinished", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#recoveryFinished:Boolean", "kind" : "def"}, {"label" : "recoveryRunning", "tail" : "(): Boolean", "member" : "akka.persistence.Eventsourced.recoveryRunning", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#recoveryRunning:Boolean", "kind" : "def"}, {"label" : "deleteMessages", "tail" : "(toSequenceNr: Long): Unit", "member" : "akka.persistence.Eventsourced.deleteMessages", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#deleteMessages(toSequenceNr:Long):Unit", "kind" : "def"}, {"label" : "unhandled", "tail" : "(message: Any): Unit", "member" : "akka.persistence.Eventsourced.unhandled", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#unhandled(message:Any):Unit", "kind" : "def"}, {"label" : "aroundPostStop", "tail" : "(): Unit", "member" : "akka.persistence.Eventsourced.aroundPostStop", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#aroundPostStop():Unit", "kind" : "def"}, {"label" : "aroundPostRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.persistence.Eventsourced.aroundPostRestart", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#aroundPostRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "aroundPreRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.persistence.Eventsourced.aroundPreRestart", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#aroundPreRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "aroundPreStart", "tail" : "(): Unit", "member" : "akka.persistence.Eventsourced.aroundPreStart", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#aroundPreStart():Unit", "kind" : "def"}, {"label" : "aroundReceive", "tail" : "(receive: Receive, message: Any): Unit", "member" : "akka.persistence.Eventsourced.aroundReceive", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#aroundReceive(receive:Eventsourced.this.Receive,message:Any):Unit", "kind" : "def"}, {"label" : "onPersistRejected", "tail" : "(cause: Throwable, event: Any, seqNr: Long): Unit", "member" : "akka.persistence.Eventsourced.onPersistRejected", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#onPersistRejected(cause:Throwable,event:Any,seqNr:Long):Unit", "kind" : "def"}, {"label" : "onPersistFailure", "tail" : "(cause: Throwable, event: Any, seqNr: Long): Unit", "member" : "akka.persistence.Eventsourced.onPersistFailure", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#onPersistFailure(cause:Throwable,event:Any,seqNr:Long):Unit", "kind" : "def"}, {"label" : "onRecoveryFailure", "tail" : "(cause: Throwable, event: Option[Any]): Unit", "member" : "akka.persistence.Eventsourced.onRecoveryFailure", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#onRecoveryFailure(cause:Throwable,event:Option[Any]):Unit", "kind" : "def"}, {"label" : "snapshotSequenceNr", "tail" : "(): Long", "member" : "akka.persistence.Eventsourced.snapshotSequenceNr", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#snapshotSequenceNr:Long", "kind" : "def"}, {"label" : "lastSequenceNr", "tail" : "(): Long", "member" : "akka.persistence.Eventsourced.lastSequenceNr", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#lastSequenceNr:Long", "kind" : "def"}, {"label" : "snapshotterId", "tail" : "(): String", "member" : "akka.persistence.Eventsourced.snapshotterId", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#snapshotterId:String", "kind" : "def"}, {"label" : "recovery", "tail" : "(): Recovery", "member" : "akka.persistence.PersistenceRecovery.recovery", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#recovery:akka.persistence.Recovery", "kind" : "def"}, {"label" : "internalStashOverflowStrategy", "tail" : "(): StashOverflowStrategy", "member" : "akka.persistence.PersistenceStash.internalStashOverflowStrategy", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#internalStashOverflowStrategy:akka.persistence.StashOverflowStrategy", "kind" : "def"}, {"label" : "postStop", "tail" : "(): Unit", "member" : "akka.actor.UnrestrictedStash.postStop", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#postStop():Unit", "kind" : "def"}, {"label" : "preRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.UnrestrictedStash.preRestart", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#preRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "deleteSnapshots", "tail" : "(criteria: SnapshotSelectionCriteria): Unit", "member" : "akka.persistence.Snapshotter.deleteSnapshots", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#deleteSnapshots(criteria:akka.persistence.SnapshotSelectionCriteria):Unit", "kind" : "def"}, {"label" : "deleteSnapshot", "tail" : "(sequenceNr: Long): Unit", "member" : "akka.persistence.Snapshotter.deleteSnapshot", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#deleteSnapshot(sequenceNr:Long):Unit", "kind" : "def"}, {"label" : "saveSnapshot", "tail" : "(snapshot: Any): Unit", "member" : "akka.persistence.Snapshotter.saveSnapshot", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#saveSnapshot(snapshot:Any):Unit", "kind" : "def"}, {"label" : "loadSnapshot", "tail" : "(persistenceId: String, criteria: SnapshotSelectionCriteria, toSequenceNr: Long): Unit", "member" : "akka.persistence.Snapshotter.loadSnapshot", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#loadSnapshot(persistenceId:String,criteria:akka.persistence.SnapshotSelectionCriteria,toSequenceNr:Long):Unit", "kind" : "def"}, {"label" : "postRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.postRestart", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#postRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.preStart", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#preStart():Unit", "kind" : "def"}, {"label" : "supervisorStrategy", "tail" : "(): SupervisorStrategy", "member" : "akka.actor.Actor.supervisorStrategy", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#supervisorStrategy:akka.actor.SupervisorStrategy", "kind" : "def"}, {"label" : "sender", "tail" : "(): ActorRef", "member" : "akka.actor.Actor.sender", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#sender():akka.actor.ActorRef", "kind" : "final def"}, {"label" : "self", "tail" : ": ActorRef", "member" : "akka.actor.Actor.self", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#self:akka.actor.ActorRef", "kind" : "implicit final val"}, {"label" : "context", "tail" : ": ActorContext", "member" : "akka.actor.Actor.context", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#context:akka.actor.ActorContext", "kind" : "implicit val"}, {"label" : "Receive", "tail" : "", "member" : "akka.actor.Actor.Receive", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#Receive=akka.actor.Actor.Receive", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "startClusterSharding", "tail" : "(typeName: String, system: ActorSystem): ActorRef", "member" : "lerna.akka.entityreplication.raft.eventhandler.CommitLogStoreActor.startClusterSharding", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor$.html#startClusterSharding(typeName:String,system:akka.actor.ActorSystem):akka.actor.ActorRef", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/CommitLogStoreActor.html", "kind" : "object"}, {"name" : "lerna.akka.entityreplication.raft.eventhandler.EntityReplicationEventSource", "shortDescription" : "", "object" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/EntityReplicationEventSource$.html", "members_object" : [{"label" : "sourceProvider", "tail" : "(system: ActorSystem[_]): SourceProvider[Offset, EventEnvelope[E]]", "member" : "lerna.akka.entityreplication.raft.eventhandler.EntityReplicationEventSource.sourceProvider", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/EntityReplicationEventSource$.html#sourceProvider[E](implicitsystem:akka.actor.typed.ActorSystem[_]):akka.projection.scaladsl.SourceProvider[akka.persistence.query.Offset,akka.projection.eventsourced.EventEnvelope[E]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/EntityReplicationEventSource$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/EntityReplicationEventSource$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/EntityReplicationEventSource$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/EntityReplicationEventSource$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/EntityReplicationEventSource$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/EntityReplicationEventSource$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/EntityReplicationEventSource$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/EntityReplicationEventSource$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/EntityReplicationEventSource$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/EntityReplicationEventSource$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/EntityReplicationEventSource$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/EntityReplicationEventSource$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/EntityReplicationEventSource$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/EntityReplicationEventSource$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/EntityReplicationEventSource$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/EntityReplicationEventSource$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/EntityReplicationEventSource$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/EntityReplicationEventSource$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/EntityReplicationEventSource$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lerna.akka.entityreplication.raft.eventhandler.InternalEvent", "case object" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/InternalEvent$.html", "shortDescription" : "index を揃えるために InternalEvent も永続化必要", "members_case object" : [{"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/InternalEvent$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/InternalEvent$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/InternalEvent$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/InternalEvent$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/InternalEvent$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/InternalEvent$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/InternalEvent$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/InternalEvent$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/InternalEvent$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/InternalEvent$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/InternalEvent$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/InternalEvent$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/InternalEvent$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/InternalEvent$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/InternalEvent$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/InternalEvent$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/InternalEvent$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/InternalEvent$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/InternalEvent$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "lerna.akka.entityreplication.raft.eventhandler.ShardedCommitLogStore", "shortDescription" : "", "members_class" : [{"member" : "lerna.akka.entityreplication.raft.eventhandler.ShardedCommitLogStore#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/ShardedCommitLogStore.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/ShardedCommitLogStore.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/ShardedCommitLogStore.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/ShardedCommitLogStore.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/ShardedCommitLogStore.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/ShardedCommitLogStore.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/ShardedCommitLogStore.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/ShardedCommitLogStore.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/ShardedCommitLogStore.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/ShardedCommitLogStore.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/ShardedCommitLogStore.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/ShardedCommitLogStore.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/ShardedCommitLogStore.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/ShardedCommitLogStore.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/ShardedCommitLogStore.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/ShardedCommitLogStore.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/ShardedCommitLogStore.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/ShardedCommitLogStore.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/ShardedCommitLogStore.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/ShardedCommitLogStore.html", "kind" : "class"}, {"name" : "lerna.akka.entityreplication.raft.eventhandler.TaggingEventAdapter", "shortDescription" : "", "members_class" : [{"label" : "toJournal", "tail" : "(event: Any): Any", "member" : "lerna.akka.entityreplication.raft.eventhandler.TaggingEventAdapter.toJournal", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/TaggingEventAdapter.html#toJournal(event:Any):Any", "kind" : "def"}, {"label" : "manifest", "tail" : "(event: Any): String", "member" : "lerna.akka.entityreplication.raft.eventhandler.TaggingEventAdapter.manifest", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/TaggingEventAdapter.html#manifest(event:Any):String", "kind" : "def"}, {"member" : "lerna.akka.entityreplication.raft.eventhandler.TaggingEventAdapter#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/TaggingEventAdapter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/TaggingEventAdapter.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/TaggingEventAdapter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/TaggingEventAdapter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/TaggingEventAdapter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/TaggingEventAdapter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/TaggingEventAdapter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/TaggingEventAdapter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/TaggingEventAdapter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/TaggingEventAdapter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/TaggingEventAdapter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/TaggingEventAdapter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/TaggingEventAdapter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/TaggingEventAdapter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/TaggingEventAdapter.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/TaggingEventAdapter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/TaggingEventAdapter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/TaggingEventAdapter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/TaggingEventAdapter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lerna\/akka\/entityreplication\/raft\/eventhandler\/TaggingEventAdapter.html", "kind" : "class"}], "lerna.akka" : [], "akka.lerna" : [{"name" : "akka.lerna.StashFactory", "trait" : "akka\/lerna\/StashFactory.html", "kind" : "trait", "members_trait" : [{"label" : "createStash", "tail" : "()(ctx: ActorContext, ref: ActorRef): StashSupport", "member" : "akka.lerna.StashFactory.createStash", "link" : "akka\/lerna\/StashFactory.html#createStash()(implicitctx:akka.actor.ActorContext,implicitref:akka.actor.ActorRef):akka.actor.StashSupport", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "akka\/lerna\/StashFactory.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "akka\/lerna\/StashFactory.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "akka\/lerna\/StashFactory.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "akka\/lerna\/StashFactory.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "akka\/lerna\/StashFactory.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "akka\/lerna\/StashFactory.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "akka\/lerna\/StashFactory.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/lerna\/StashFactory.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/lerna\/StashFactory.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "akka\/lerna\/StashFactory.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "akka\/lerna\/StashFactory.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "akka\/lerna\/StashFactory.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "akka\/lerna\/StashFactory.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "akka\/lerna\/StashFactory.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "akka\/lerna\/StashFactory.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "akka\/lerna\/StashFactory.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "akka\/lerna\/StashFactory.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "akka\/lerna\/StashFactory.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "akka\/lerna\/StashFactory.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Proxy for using def createStash from lerna package"}], "lerna.akka.entityreplication.model" : [{"name" : "lerna.akka.entityreplication.model.EntityInstanceId", "shortDescription" : "", "members_case class" : [{"member" : "lerna.akka.entityreplication.model.EntityInstanceId#<init>", "error" : "unsupported entity"}, {"label" : "underlying", "tail" : ": Int", "member" : "lerna.akka.entityreplication.model.EntityInstanceId.underlying", "link" : "lerna\/akka\/entityreplication\/model\/EntityInstanceId.html#underlying:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lerna\/akka\/entityreplication\/model\/EntityInstanceId.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "lerna\/akka\/entityreplication\/model\/EntityInstanceId.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "lerna\/akka\/entityreplication\/model\/EntityInstanceId.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/model\/EntityInstanceId.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/model\/EntityInstanceId.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "lerna\/akka\/entityreplication\/model\/EntityInstanceId.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "lerna\/akka\/entityreplication\/model\/EntityInstanceId.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "lerna\/akka\/entityreplication\/model\/EntityInstanceId.html", "kind" : "case class"}, {"name" : "lerna.akka.entityreplication.model.NormalizedEntityId", "shortDescription" : "", "object" : "lerna\/akka\/entityreplication\/model\/NormalizedEntityId$.html", "members_object" : [{"label" : "of", "tail" : "(entityPath: ActorPath): NormalizedEntityId", "member" : "lerna.akka.entityreplication.model.NormalizedEntityId.of", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedEntityId$.html#of(entityPath:akka.actor.ActorPath):lerna.akka.entityreplication.model.NormalizedEntityId", "kind" : "def"}, {"label" : "from", "tail" : "(entityId: EntityId): NormalizedEntityId", "member" : "lerna.akka.entityreplication.model.NormalizedEntityId.from", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedEntityId$.html#from(entityId:lerna.akka.entityreplication.ReplicationRegion.EntityId):lerna.akka.entityreplication.model.NormalizedEntityId", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedEntityId$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedEntityId$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedEntityId$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedEntityId$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedEntityId$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedEntityId$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedEntityId$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedEntityId$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedEntityId$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedEntityId$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedEntityId$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedEntityId$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedEntityId$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedEntityId$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedEntityId$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedEntityId$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedEntityId$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedEntityId$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedEntityId$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "underlying", "tail" : ": String", "member" : "lerna.akka.entityreplication.model.NormalizedEntityId.underlying", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedEntityId.html#underlying:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedEntityId.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedEntityId.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedEntityId.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedEntityId.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedEntityId.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedEntityId.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedEntityId.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "lerna\/akka\/entityreplication\/model\/NormalizedEntityId.html", "kind" : "object"}, {"name" : "lerna.akka.entityreplication.model.NormalizedShardId", "shortDescription" : "", "object" : "lerna\/akka\/entityreplication\/model\/NormalizedShardId$.html", "members_object" : [{"label" : "from", "tail" : "(shardId: String): NormalizedShardId", "member" : "lerna.akka.entityreplication.model.NormalizedShardId.from", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedShardId$.html#from(shardId:String):lerna.akka.entityreplication.model.NormalizedShardId", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedShardId$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedShardId$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedShardId$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedShardId$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedShardId$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedShardId$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedShardId$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedShardId$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedShardId$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedShardId$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedShardId$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedShardId$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedShardId$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedShardId$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedShardId$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedShardId$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedShardId$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedShardId$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedShardId$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "raw", "tail" : "(): String", "member" : "lerna.akka.entityreplication.model.NormalizedShardId.raw", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedShardId.html#raw:String", "kind" : "def"}, {"label" : "underlying", "tail" : ": String", "member" : "lerna.akka.entityreplication.model.NormalizedShardId.underlying", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedShardId.html#underlying:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedShardId.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedShardId.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedShardId.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedShardId.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedShardId.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedShardId.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "lerna\/akka\/entityreplication\/model\/NormalizedShardId.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "lerna\/akka\/entityreplication\/model\/NormalizedShardId.html", "kind" : "object"}, {"name" : "lerna.akka.entityreplication.model.TypeName", "shortDescription" : "", "object" : "lerna\/akka\/entityreplication\/model\/TypeName$.html", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "lerna.akka.entityreplication.model.TypeName.toString", "link" : "lerna\/akka\/entityreplication\/model\/TypeName.html#toString():String", "kind" : "def"}, {"label" : "underlying", "tail" : ": String", "member" : "lerna.akka.entityreplication.model.TypeName.underlying", "link" : "lerna\/akka\/entityreplication\/model\/TypeName.html#underlying:String", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "lerna\/akka\/entityreplication\/model\/TypeName.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "lerna\/akka\/entityreplication\/model\/TypeName.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/model\/TypeName.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/model\/TypeName.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "lerna\/akka\/entityreplication\/model\/TypeName.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "lerna\/akka\/entityreplication\/model\/TypeName.html#==(x$1:Any):Boolean", "kind" : "final def"}], "members_object" : [{"label" : "from", "tail" : "(typeName: String): TypeName", "member" : "lerna.akka.entityreplication.model.TypeName.from", "link" : "lerna\/akka\/entityreplication\/model\/TypeName$.html#from(typeName:String):lerna.akka.entityreplication.model.TypeName", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/model\/TypeName$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/model\/TypeName$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/model\/TypeName$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/model\/TypeName$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/model\/TypeName$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/model\/TypeName$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/model\/TypeName$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/model\/TypeName$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/model\/TypeName$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/model\/TypeName$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/model\/TypeName$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/model\/TypeName$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/model\/TypeName$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/model\/TypeName$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/model\/TypeName$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/model\/TypeName$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/model\/TypeName$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/model\/TypeName$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/model\/TypeName$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lerna\/akka\/entityreplication\/model\/TypeName.html", "kind" : "object"}], "lerna.akka.entityreplication.raft.persistence" : [{"name" : "lerna.akka.entityreplication.raft.persistence.CompactionCompletedTag", "shortDescription" : "", "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "lerna.akka.entityreplication.raft.persistence.CompactionCompletedTag.toString", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/CompactionCompletedTag.html#toString():String", "kind" : "def"}, {"member" : "lerna.akka.entityreplication.raft.persistence.CompactionCompletedTag#<init>", "error" : "unsupported entity"}, {"label" : "shardId", "tail" : ": NormalizedShardId", "member" : "lerna.akka.entityreplication.raft.persistence.CompactionCompletedTag.shardId", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/CompactionCompletedTag.html#shardId:lerna.akka.entityreplication.model.NormalizedShardId", "kind" : "val"}, {"label" : "memberIndex", "tail" : ": MemberIndex", "member" : "lerna.akka.entityreplication.raft.persistence.CompactionCompletedTag.memberIndex", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/CompactionCompletedTag.html#memberIndex:lerna.akka.entityreplication.raft.routing.MemberIndex", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/CompactionCompletedTag.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/CompactionCompletedTag.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/CompactionCompletedTag.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/CompactionCompletedTag.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/CompactionCompletedTag.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/CompactionCompletedTag.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/CompactionCompletedTag.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/CompactionCompletedTag.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/CompactionCompletedTag.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/CompactionCompletedTag.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/CompactionCompletedTag.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/CompactionCompletedTag.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/CompactionCompletedTag.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/CompactionCompletedTag.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/CompactionCompletedTag.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/CompactionCompletedTag.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/CompactionCompletedTag.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lerna\/akka\/entityreplication\/raft\/persistence\/CompactionCompletedTag.html", "kind" : "case class"}, {"name" : "lerna.akka.entityreplication.raft.persistence.RaftEventAdapter", "shortDescription" : "", "members_class" : [{"label" : "toJournal", "tail" : "(event: Any): Any", "member" : "lerna.akka.entityreplication.raft.persistence.RaftEventAdapter.toJournal", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/RaftEventAdapter.html#toJournal(event:Any):Any", "kind" : "def"}, {"label" : "fromJournal", "tail" : "(event: Any, manifest: String): EventSeq", "member" : "lerna.akka.entityreplication.raft.persistence.RaftEventAdapter.fromJournal", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/RaftEventAdapter.html#fromJournal(event:Any,manifest:String):akka.persistence.journal.EventSeq", "kind" : "def"}, {"label" : "manifest", "tail" : "(event: Any): String", "member" : "lerna.akka.entityreplication.raft.persistence.RaftEventAdapter.manifest", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/RaftEventAdapter.html#manifest(event:Any):String", "kind" : "def"}, {"member" : "lerna.akka.entityreplication.raft.persistence.RaftEventAdapter#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/RaftEventAdapter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/RaftEventAdapter.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/RaftEventAdapter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/RaftEventAdapter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/RaftEventAdapter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/RaftEventAdapter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/RaftEventAdapter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/RaftEventAdapter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/RaftEventAdapter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/RaftEventAdapter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/RaftEventAdapter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/RaftEventAdapter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/RaftEventAdapter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/RaftEventAdapter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/RaftEventAdapter.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/RaftEventAdapter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/RaftEventAdapter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/RaftEventAdapter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/persistence\/RaftEventAdapter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lerna\/akka\/entityreplication\/raft\/persistence\/RaftEventAdapter.html", "kind" : "class"}], "lerna" : [], "lerna.akka.entityreplication.serialization" : [{"name" : "lerna.akka.entityreplication.serialization.ClusterReplicationSerializer", "shortDescription" : "", "members_class" : [{"label" : "configKey", "tail" : "(): String", "member" : "lerna.akka.entityreplication.serialization.ClusterReplicationSerializer.configKey", "link" : "lerna\/akka\/entityreplication\/serialization\/ClusterReplicationSerializer.html#configKey:String", "kind" : "def"}, {"label" : "identifier", "tail" : "(): Int", "member" : "lerna.akka.entityreplication.serialization.ClusterReplicationSerializer.identifier", "link" : "lerna\/akka\/entityreplication\/serialization\/ClusterReplicationSerializer.html#identifier:Int", "kind" : "def"}, {"member" : "lerna.akka.entityreplication.serialization.ClusterReplicationSerializer#<init>", "error" : "unsupported entity"}, {"label" : "fromBinary", "tail" : "(bytes: Array[Byte], clazz: Option[Class[_]]): AnyRef", "member" : "io.altoo.akka.serialization.kryo.KryoSerializer.fromBinary", "link" : "lerna\/akka\/entityreplication\/serialization\/ClusterReplicationSerializer.html#fromBinary(bytes:Array[Byte],clazz:Option[Class[_]]):AnyRef", "kind" : "def"}, {"label" : "toBinary", "tail" : "(obj: AnyRef): Array[Byte]", "member" : "io.altoo.akka.serialization.kryo.KryoSerializer.toBinary", "link" : "lerna\/akka\/entityreplication\/serialization\/ClusterReplicationSerializer.html#toBinary(obj:AnyRef):Array[Byte]", "kind" : "def"}, {"label" : "includeManifest", "tail" : "(): Boolean", "member" : "io.altoo.akka.serialization.kryo.KryoSerializer.includeManifest", "link" : "lerna\/akka\/entityreplication\/serialization\/ClusterReplicationSerializer.html#includeManifest:Boolean", "kind" : "def"}, {"label" : "transform", "tail" : ": (String) => Transformer", "member" : "io.altoo.akka.serialization.kryo.KryoSerializer.transform", "link" : "lerna\/akka\/entityreplication\/serialization\/ClusterReplicationSerializer.html#transform:String=>io.altoo.akka.serialization.kryo.Transformer", "kind" : "val"}, {"label" : "system", "tail" : ": ExtendedActorSystem", "member" : "io.altoo.akka.serialization.kryo.KryoSerializer.system", "link" : "lerna\/akka\/entityreplication\/serialization\/ClusterReplicationSerializer.html#system:akka.actor.ExtendedActorSystem", "kind" : "val"}, {"label" : "fromBinary", "tail" : "(bytes: Array[Byte], clazz: Class[_]): AnyRef", "member" : "akka.serialization.Serializer.fromBinary", "link" : "lerna\/akka\/entityreplication\/serialization\/ClusterReplicationSerializer.html#fromBinary(bytes:Array[Byte],clazz:Class[_]):AnyRef", "kind" : "final def"}, {"label" : "fromBinary", "tail" : "(bytes: Array[Byte]): AnyRef", "member" : "akka.serialization.Serializer.fromBinary", "link" : "lerna\/akka\/entityreplication\/serialization\/ClusterReplicationSerializer.html#fromBinary(bytes:Array[Byte]):AnyRef", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/serialization\/ClusterReplicationSerializer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/serialization\/ClusterReplicationSerializer.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/serialization\/ClusterReplicationSerializer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/serialization\/ClusterReplicationSerializer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/serialization\/ClusterReplicationSerializer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/serialization\/ClusterReplicationSerializer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/serialization\/ClusterReplicationSerializer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/serialization\/ClusterReplicationSerializer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/serialization\/ClusterReplicationSerializer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/serialization\/ClusterReplicationSerializer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/serialization\/ClusterReplicationSerializer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/serialization\/ClusterReplicationSerializer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/serialization\/ClusterReplicationSerializer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/serialization\/ClusterReplicationSerializer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/serialization\/ClusterReplicationSerializer.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/serialization\/ClusterReplicationSerializer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/serialization\/ClusterReplicationSerializer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/serialization\/ClusterReplicationSerializer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/serialization\/ClusterReplicationSerializer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lerna\/akka\/entityreplication\/serialization\/ClusterReplicationSerializer.html", "kind" : "class"}], "lerna.akka.entityreplication.util" : [{"name" : "lerna.akka.entityreplication.util.ActorIds", "shortDescription" : "", "object" : "lerna\/akka\/entityreplication\/util\/ActorIds$.html", "members_object" : [{"label" : "persistenceId", "tail" : "(urlEncodedElements: String*): String", "member" : "lerna.akka.entityreplication.util.ActorIds.persistenceId", "link" : "lerna\/akka\/entityreplication\/util\/ActorIds$.html#persistenceId(urlEncodedElements:String*):String", "kind" : "def"}, {"label" : "actorName", "tail" : "(urlEncodedElements: String*): String", "member" : "lerna.akka.entityreplication.util.ActorIds.actorName", "link" : "lerna\/akka\/entityreplication\/util\/ActorIds$.html#actorName(urlEncodedElements:String*):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/util\/ActorIds$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/util\/ActorIds$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/util\/ActorIds$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/util\/ActorIds$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/util\/ActorIds$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/util\/ActorIds$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/util\/ActorIds$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/util\/ActorIds$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/util\/ActorIds$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/util\/ActorIds$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/util\/ActorIds$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/util\/ActorIds$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/util\/ActorIds$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/util\/ActorIds$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/util\/ActorIds$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/util\/ActorIds$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/util\/ActorIds$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/util\/ActorIds$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/util\/ActorIds$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lerna.akka.entityreplication.util.AtLeastOnceComplete", "shortDescription" : "", "object" : "lerna\/akka\/entityreplication\/util\/AtLeastOnceComplete$.html", "members_object" : [{"label" : "askTo", "tail" : "(destination: ActorRef, message: Any, retryInterval: FiniteDuration)(system: ActorSystem, timeout: Timeout): Future[Any]", "member" : "lerna.akka.entityreplication.util.AtLeastOnceComplete.askTo", "link" : "lerna\/akka\/entityreplication\/util\/AtLeastOnceComplete$.html#askTo(destination:akka.actor.ActorRef,message:Any,retryInterval:scala.concurrent.duration.FiniteDuration)(implicitsystem:akka.actor.ActorSystem,implicittimeout:akka.util.Timeout):scala.concurrent.Future[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/util\/AtLeastOnceComplete$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/util\/AtLeastOnceComplete$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/util\/AtLeastOnceComplete$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/util\/AtLeastOnceComplete$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/util\/AtLeastOnceComplete$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/util\/AtLeastOnceComplete$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/util\/AtLeastOnceComplete$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/util\/AtLeastOnceComplete$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/util\/AtLeastOnceComplete$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/util\/AtLeastOnceComplete$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/util\/AtLeastOnceComplete$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/util\/AtLeastOnceComplete$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/util\/AtLeastOnceComplete$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/util\/AtLeastOnceComplete$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/util\/AtLeastOnceComplete$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/util\/AtLeastOnceComplete$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/util\/AtLeastOnceComplete$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/util\/AtLeastOnceComplete$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/util\/AtLeastOnceComplete$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "lerna.akka.entityreplication.raft.snapshot.sync" : [{"name" : "lerna.akka.entityreplication.raft.snapshot.sync.SnapshotSyncManager", "shortDescription" : "", "object" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html", "members_class" : [{"label" : "synchronizeSnapshots", "tail" : "(srcLatestSnapshotLastLogIndex: LogEntryIndex, dstLatestSnapshotLastLogTerm: Term, dstLatestSnapshotLastLogIndex: LogEntryIndex, offset: Offset): (UniqueKillSwitch, Future[SyncStatus])", "member" : "lerna.akka.entityreplication.raft.snapshot.sync.SnapshotSyncManager.synchronizeSnapshots", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#synchronizeSnapshots(srcLatestSnapshotLastLogIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex,dstLatestSnapshotLastLogTerm:lerna.akka.entityreplication.raft.model.Term,dstLatestSnapshotLastLogIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex,offset:akka.persistence.query.Offset):(akka.stream.UniqueKillSwitch,scala.concurrent.Future[lerna.akka.entityreplication.raft.snapshot.sync.SnapshotSyncManager.SyncStatus])", "kind" : "def"}, {"label" : "postStop", "tail" : "(): Unit", "member" : "lerna.akka.entityreplication.raft.snapshot.sync.SnapshotSyncManager.postStop", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#postStop():Unit", "kind" : "def"}, {"label" : "updateState", "tail" : "(event: Event): Unit", "member" : "lerna.akka.entityreplication.raft.snapshot.sync.SnapshotSyncManager.updateState", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#updateState(event:lerna.akka.entityreplication.raft.snapshot.sync.SnapshotSyncManager.Event):Unit", "kind" : "def"}, {"label" : "synchronizing", "tail" : "(replyTo: ActorRef, dstLatestSnapshotLastLogTerm: Term, dstLatestSnapshotLastLogIndex: LogEntryIndex): Receive", "member" : "lerna.akka.entityreplication.raft.snapshot.sync.SnapshotSyncManager.synchronizing", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#synchronizing(replyTo:akka.actor.ActorRef,dstLatestSnapshotLastLogTerm:lerna.akka.entityreplication.raft.model.Term,dstLatestSnapshotLastLogIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex):SnapshotSyncManager.this.Receive", "kind" : "def"}, {"label" : "ready", "tail" : "(): Receive", "member" : "lerna.akka.entityreplication.raft.snapshot.sync.SnapshotSyncManager.ready", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#ready:SnapshotSyncManager.this.Receive", "kind" : "def"}, {"label" : "receiveCommand", "tail" : "(): Receive", "member" : "lerna.akka.entityreplication.raft.snapshot.sync.SnapshotSyncManager.receiveCommand", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#receiveCommand:SnapshotSyncManager.this.Receive", "kind" : "def"}, {"label" : "receiveRecover", "tail" : "(): Receive", "member" : "lerna.akka.entityreplication.raft.snapshot.sync.SnapshotSyncManager.receiveRecover", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#receiveRecover:SnapshotSyncManager.this.Receive", "kind" : "def"}, {"label" : "persistenceId", "tail" : "(): String", "member" : "lerna.akka.entityreplication.raft.snapshot.sync.SnapshotSyncManager.persistenceId", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#persistenceId:String", "kind" : "def"}, {"label" : "snapshotPluginId", "tail" : "(): String", "member" : "lerna.akka.entityreplication.raft.snapshot.sync.SnapshotSyncManager.snapshotPluginId", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#snapshotPluginId:String", "kind" : "def"}, {"label" : "journalPluginId", "tail" : "(): String", "member" : "lerna.akka.entityreplication.raft.snapshot.sync.SnapshotSyncManager.journalPluginId", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#journalPluginId:String", "kind" : "def"}, {"member" : "lerna.akka.entityreplication.raft.snapshot.sync.SnapshotSyncManager#<init>", "error" : "unsupported entity"}, {"label" : "log", "tail" : "(): LoggingAdapter", "member" : "akka.actor.ActorLogging.log", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#log:akka.event.LoggingAdapter", "kind" : "def"}, {"label" : "defer", "tail" : "(event: A)(handler: (A) => Unit): Unit", "member" : "akka.persistence.PersistentActor.defer", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#defer[A](event:A)(handler:A=>Unit):Unit", "kind" : "def"}, {"label" : "deferAsync", "tail" : "(event: A)(handler: (A) => Unit): Unit", "member" : "akka.persistence.PersistentActor.deferAsync", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#deferAsync[A](event:A)(handler:A=>Unit):Unit", "kind" : "def"}, {"label" : "persistAllAsync", "tail" : "(events: Seq[A])(handler: (A) => Unit): Unit", "member" : "akka.persistence.PersistentActor.persistAllAsync", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#persistAllAsync[A](events:Seq[A])(handler:A=>Unit):Unit", "kind" : "def"}, {"label" : "persistAsync", "tail" : "(event: A)(handler: (A) => Unit): Unit", "member" : "akka.persistence.PersistentActor.persistAsync", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#persistAsync[A](event:A)(handler:A=>Unit):Unit", "kind" : "def"}, {"label" : "persistAll", "tail" : "(events: Seq[A])(handler: (A) => Unit): Unit", "member" : "akka.persistence.PersistentActor.persistAll", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#persistAll[A](events:Seq[A])(handler:A=>Unit):Unit", "kind" : "def"}, {"label" : "persist", "tail" : "(event: A)(handler: (A) => Unit): Unit", "member" : "akka.persistence.PersistentActor.persist", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#persist[A](event:A)(handler:A=>Unit):Unit", "kind" : "def"}, {"label" : "receive", "tail" : "(): Receive", "member" : "akka.persistence.PersistentActor.receive", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#receive:PersistentActor.this.Receive", "kind" : "def"}, {"label" : "unstashAll", "tail" : "(): Unit", "member" : "akka.persistence.Eventsourced.unstashAll", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#unstashAll():Unit", "kind" : "def"}, {"label" : "stash", "tail" : "(): Unit", "member" : "akka.persistence.Eventsourced.stash", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#stash():Unit", "kind" : "def"}, {"label" : "recoveryFinished", "tail" : "(): Boolean", "member" : "akka.persistence.Eventsourced.recoveryFinished", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#recoveryFinished:Boolean", "kind" : "def"}, {"label" : "recoveryRunning", "tail" : "(): Boolean", "member" : "akka.persistence.Eventsourced.recoveryRunning", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#recoveryRunning:Boolean", "kind" : "def"}, {"label" : "deleteMessages", "tail" : "(toSequenceNr: Long): Unit", "member" : "akka.persistence.Eventsourced.deleteMessages", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#deleteMessages(toSequenceNr:Long):Unit", "kind" : "def"}, {"label" : "unhandled", "tail" : "(message: Any): Unit", "member" : "akka.persistence.Eventsourced.unhandled", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#unhandled(message:Any):Unit", "kind" : "def"}, {"label" : "aroundPostStop", "tail" : "(): Unit", "member" : "akka.persistence.Eventsourced.aroundPostStop", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#aroundPostStop():Unit", "kind" : "def"}, {"label" : "aroundPostRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.persistence.Eventsourced.aroundPostRestart", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#aroundPostRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "aroundPreRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.persistence.Eventsourced.aroundPreRestart", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#aroundPreRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "aroundPreStart", "tail" : "(): Unit", "member" : "akka.persistence.Eventsourced.aroundPreStart", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#aroundPreStart():Unit", "kind" : "def"}, {"label" : "aroundReceive", "tail" : "(receive: Receive, message: Any): Unit", "member" : "akka.persistence.Eventsourced.aroundReceive", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#aroundReceive(receive:Eventsourced.this.Receive,message:Any):Unit", "kind" : "def"}, {"label" : "onPersistRejected", "tail" : "(cause: Throwable, event: Any, seqNr: Long): Unit", "member" : "akka.persistence.Eventsourced.onPersistRejected", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#onPersistRejected(cause:Throwable,event:Any,seqNr:Long):Unit", "kind" : "def"}, {"label" : "onPersistFailure", "tail" : "(cause: Throwable, event: Any, seqNr: Long): Unit", "member" : "akka.persistence.Eventsourced.onPersistFailure", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#onPersistFailure(cause:Throwable,event:Any,seqNr:Long):Unit", "kind" : "def"}, {"label" : "onRecoveryFailure", "tail" : "(cause: Throwable, event: Option[Any]): Unit", "member" : "akka.persistence.Eventsourced.onRecoveryFailure", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#onRecoveryFailure(cause:Throwable,event:Option[Any]):Unit", "kind" : "def"}, {"label" : "snapshotSequenceNr", "tail" : "(): Long", "member" : "akka.persistence.Eventsourced.snapshotSequenceNr", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#snapshotSequenceNr:Long", "kind" : "def"}, {"label" : "lastSequenceNr", "tail" : "(): Long", "member" : "akka.persistence.Eventsourced.lastSequenceNr", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#lastSequenceNr:Long", "kind" : "def"}, {"label" : "snapshotterId", "tail" : "(): String", "member" : "akka.persistence.Eventsourced.snapshotterId", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#snapshotterId:String", "kind" : "def"}, {"label" : "recovery", "tail" : "(): Recovery", "member" : "akka.persistence.PersistenceRecovery.recovery", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#recovery:akka.persistence.Recovery", "kind" : "def"}, {"label" : "internalStashOverflowStrategy", "tail" : "(): StashOverflowStrategy", "member" : "akka.persistence.PersistenceStash.internalStashOverflowStrategy", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#internalStashOverflowStrategy:akka.persistence.StashOverflowStrategy", "kind" : "def"}, {"label" : "preRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.UnrestrictedStash.preRestart", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#preRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "deleteSnapshots", "tail" : "(criteria: SnapshotSelectionCriteria): Unit", "member" : "akka.persistence.Snapshotter.deleteSnapshots", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#deleteSnapshots(criteria:akka.persistence.SnapshotSelectionCriteria):Unit", "kind" : "def"}, {"label" : "deleteSnapshot", "tail" : "(sequenceNr: Long): Unit", "member" : "akka.persistence.Snapshotter.deleteSnapshot", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#deleteSnapshot(sequenceNr:Long):Unit", "kind" : "def"}, {"label" : "saveSnapshot", "tail" : "(snapshot: Any): Unit", "member" : "akka.persistence.Snapshotter.saveSnapshot", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#saveSnapshot(snapshot:Any):Unit", "kind" : "def"}, {"label" : "loadSnapshot", "tail" : "(persistenceId: String, criteria: SnapshotSelectionCriteria, toSequenceNr: Long): Unit", "member" : "akka.persistence.Snapshotter.loadSnapshot", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#loadSnapshot(persistenceId:String,criteria:akka.persistence.SnapshotSelectionCriteria,toSequenceNr:Long):Unit", "kind" : "def"}, {"label" : "postRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.postRestart", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#postRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.preStart", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#preStart():Unit", "kind" : "def"}, {"label" : "supervisorStrategy", "tail" : "(): SupervisorStrategy", "member" : "akka.actor.Actor.supervisorStrategy", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#supervisorStrategy:akka.actor.SupervisorStrategy", "kind" : "def"}, {"label" : "sender", "tail" : "(): ActorRef", "member" : "akka.actor.Actor.sender", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#sender():akka.actor.ActorRef", "kind" : "final def"}, {"label" : "self", "tail" : ": ActorRef", "member" : "akka.actor.Actor.self", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#self:akka.actor.ActorRef", "kind" : "implicit final val"}, {"label" : "context", "tail" : ": ActorContext", "member" : "akka.actor.Actor.context", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#context:akka.actor.ActorContext", "kind" : "implicit val"}, {"label" : "Receive", "tail" : "", "member" : "akka.actor.Actor.Receive", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#Receive=akka.actor.Actor.Receive", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "SnapshotUpdateConflictException", "tail" : "", "member" : "lerna.akka.entityreplication.raft.snapshot.sync.SnapshotSyncManager.SnapshotUpdateConflictException", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#SnapshotUpdateConflictExceptionextendsRuntimeExceptionwithSnapshotSyncManager.SyncFailureswithProductwithSerializable", "kind" : "final case class"}, {"label" : "SaveSnapshotFailureException", "tail" : "", "member" : "lerna.akka.entityreplication.raft.snapshot.sync.SnapshotSyncManager.SaveSnapshotFailureException", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#SaveSnapshotFailureExceptionextendsRuntimeExceptionwithSnapshotSyncManager.SyncFailureswithProductwithSerializable", "kind" : "final case class"}, {"label" : "SnapshotNotFoundException", "tail" : "", "member" : "lerna.akka.entityreplication.raft.snapshot.sync.SnapshotSyncManager.SnapshotNotFoundException", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#SnapshotNotFoundExceptionextendsRuntimeExceptionwithSnapshotSyncManager.SyncFailureswithProductwithSerializable", "kind" : "final case class"}, {"label" : "SynchronizationAbortException", "tail" : "", "member" : "lerna.akka.entityreplication.raft.snapshot.sync.SnapshotSyncManager.SynchronizationAbortException", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#SynchronizationAbortExceptionextendsRuntimeExceptionwithSnapshotSyncManager.SyncFailureswithProductwithSerializable", "kind" : "final case class"}, {"label" : "SyncFailures", "tail" : "", "member" : "lerna.akka.entityreplication.raft.snapshot.sync.SnapshotSyncManager.SyncFailures", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#SyncFailuresextendsAnyRef", "kind" : "sealed trait"}, {"label" : "SyncIncomplete", "tail" : "", "member" : "lerna.akka.entityreplication.raft.snapshot.sync.SnapshotSyncManager.SyncIncomplete", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#SyncIncompleteextendsSnapshotSyncManager.SyncStatuswithProductwithSerializable", "kind" : "final case class"}, {"label" : "SyncCompleteAll", "tail" : "", "member" : "lerna.akka.entityreplication.raft.snapshot.sync.SnapshotSyncManager.SyncCompleteAll", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#SyncCompleteAllextendsSnapshotSyncManager.SyncStatuswithProductwithSerializable", "kind" : "final case class"}, {"label" : "SyncStatus", "tail" : "", "member" : "lerna.akka.entityreplication.raft.snapshot.sync.SnapshotSyncManager.SyncStatus", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#SyncStatusextendsAnyRef", "kind" : "sealed trait"}, {"label" : "CompactionEnvelope", "tail" : "", "member" : "lerna.akka.entityreplication.raft.snapshot.sync.SnapshotSyncManager.CompactionEnvelope", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#CompactionEnvelopeextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "SyncProgress", "tail" : "", "member" : "lerna.akka.entityreplication.raft.snapshot.sync.SnapshotSyncManager.SyncProgress", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#SyncProgressextendsSnapshotSyncManager.StatewithClusterReplicationSerializablewithProductwithSerializable", "kind" : "final case class"}, {"label" : "State", "tail" : "", "member" : "lerna.akka.entityreplication.raft.snapshot.sync.SnapshotSyncManager.State", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#StateextendsAnyRef", "kind" : "sealed trait"}, {"label" : "SyncCompleted", "tail" : "", "member" : "lerna.akka.entityreplication.raft.snapshot.sync.SnapshotSyncManager.SyncCompleted", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#SyncCompletedextendsSnapshotSyncManager.EventwithClusterReplicationSerializablewithProductwithSerializable", "kind" : "final case class"}, {"label" : "Event", "tail" : "", "member" : "lerna.akka.entityreplication.raft.snapshot.sync.SnapshotSyncManager.Event", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#EventextendsAnyRef", "kind" : "sealed trait"}, {"label" : "SyncSnapshotFailed", "tail" : "", "member" : "lerna.akka.entityreplication.raft.snapshot.sync.SnapshotSyncManager.SyncSnapshotFailed", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#SyncSnapshotFailedextendsSnapshotSyncManager.ResponsewithProductwithSerializable", "kind" : "final case class"}, {"label" : "SyncSnapshotAlreadySucceeded", "tail" : "", "member" : "lerna.akka.entityreplication.raft.snapshot.sync.SnapshotSyncManager.SyncSnapshotAlreadySucceeded", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#SyncSnapshotAlreadySucceededextendsSnapshotSyncManager.ResponsewithProductwithSerializable", "kind" : "final case class"}, {"label" : "SyncSnapshotSucceeded", "tail" : "", "member" : "lerna.akka.entityreplication.raft.snapshot.sync.SnapshotSyncManager.SyncSnapshotSucceeded", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#SyncSnapshotSucceededextendsSnapshotSyncManager.ResponsewithProductwithSerializable", "kind" : "final case class"}, {"label" : "Response", "tail" : "", "member" : "lerna.akka.entityreplication.raft.snapshot.sync.SnapshotSyncManager.Response", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#ResponseextendsAnyRef", "kind" : "sealed trait"}, {"label" : "SyncSnapshot", "tail" : "", "member" : "lerna.akka.entityreplication.raft.snapshot.sync.SnapshotSyncManager.SyncSnapshot", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#SyncSnapshotextendsSnapshotSyncManager.CommandwithProductwithSerializable", "kind" : "final case class"}, {"label" : "Command", "tail" : "", "member" : "lerna.akka.entityreplication.raft.snapshot.sync.SnapshotSyncManager.Command", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#CommandextendsAnyRef", "kind" : "sealed trait"}, {"label" : "props", "tail" : "(typeName: TypeName, srcMemberIndex: MemberIndex, dstMemberIndex: MemberIndex, dstShardSnapshotStore: ActorRef, shardId: NormalizedShardId, raftSettings: RaftSettings): Props", "member" : "lerna.akka.entityreplication.raft.snapshot.sync.SnapshotSyncManager.props", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#props(typeName:lerna.akka.entityreplication.model.TypeName,srcMemberIndex:lerna.akka.entityreplication.raft.routing.MemberIndex,dstMemberIndex:lerna.akka.entityreplication.raft.routing.MemberIndex,dstShardSnapshotStore:akka.actor.ActorRef,shardId:lerna.akka.entityreplication.model.NormalizedShardId,raftSettings:lerna.akka.entityreplication.raft.RaftSettings):akka.actor.Props", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lerna\/akka\/entityreplication\/raft\/snapshot\/sync\/SnapshotSyncManager.html", "kind" : "object"}], "lerna.akka.entityreplication.raft.model.exception" : [{"name" : "lerna.akka.entityreplication.raft.model.exception.SeqIndexOutOfBoundsException", "shortDescription" : "", "members_case class" : [{"member" : "lerna.akka.entityreplication.raft.model.exception.SeqIndexOutOfBoundsException#<init>", "error" : "unsupported entity"}, {"label" : "offset", "tail" : ": LogEntryIndex", "member" : "lerna.akka.entityreplication.raft.model.exception.SeqIndexOutOfBoundsException.offset", "link" : "lerna\/akka\/entityreplication\/raft\/model\/exception\/SeqIndexOutOfBoundsException.html#offset:lerna.akka.entityreplication.raft.model.LogEntryIndex", "kind" : "val"}, {"label" : "self", "tail" : ": LogEntryIndex", "member" : "lerna.akka.entityreplication.raft.model.exception.SeqIndexOutOfBoundsException.self", "link" : "lerna\/akka\/entityreplication\/raft\/model\/exception\/SeqIndexOutOfBoundsException.html#self:lerna.akka.entityreplication.raft.model.LogEntryIndex", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lerna\/akka\/entityreplication\/raft\/model\/exception\/SeqIndexOutOfBoundsException.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "lerna\/akka\/entityreplication\/raft\/model\/exception\/SeqIndexOutOfBoundsException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "lerna\/akka\/entityreplication\/raft\/model\/exception\/SeqIndexOutOfBoundsException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "lerna\/akka\/entityreplication\/raft\/model\/exception\/SeqIndexOutOfBoundsException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "lerna\/akka\/entityreplication\/raft\/model\/exception\/SeqIndexOutOfBoundsException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "lerna\/akka\/entityreplication\/raft\/model\/exception\/SeqIndexOutOfBoundsException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "lerna\/akka\/entityreplication\/raft\/model\/exception\/SeqIndexOutOfBoundsException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "lerna\/akka\/entityreplication\/raft\/model\/exception\/SeqIndexOutOfBoundsException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "lerna\/akka\/entityreplication\/raft\/model\/exception\/SeqIndexOutOfBoundsException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "lerna\/akka\/entityreplication\/raft\/model\/exception\/SeqIndexOutOfBoundsException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "lerna\/akka\/entityreplication\/raft\/model\/exception\/SeqIndexOutOfBoundsException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "lerna\/akka\/entityreplication\/raft\/model\/exception\/SeqIndexOutOfBoundsException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "lerna\/akka\/entityreplication\/raft\/model\/exception\/SeqIndexOutOfBoundsException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "lerna\/akka\/entityreplication\/raft\/model\/exception\/SeqIndexOutOfBoundsException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/model\/exception\/SeqIndexOutOfBoundsException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/model\/exception\/SeqIndexOutOfBoundsException.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/model\/exception\/SeqIndexOutOfBoundsException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/model\/exception\/SeqIndexOutOfBoundsException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/model\/exception\/SeqIndexOutOfBoundsException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/model\/exception\/SeqIndexOutOfBoundsException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/model\/exception\/SeqIndexOutOfBoundsException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/exception\/SeqIndexOutOfBoundsException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/exception\/SeqIndexOutOfBoundsException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/exception\/SeqIndexOutOfBoundsException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/model\/exception\/SeqIndexOutOfBoundsException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/model\/exception\/SeqIndexOutOfBoundsException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/model\/exception\/SeqIndexOutOfBoundsException.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/model\/exception\/SeqIndexOutOfBoundsException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/exception\/SeqIndexOutOfBoundsException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/exception\/SeqIndexOutOfBoundsException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lerna\/akka\/entityreplication\/raft\/model\/exception\/SeqIndexOutOfBoundsException.html", "kind" : "case class"}], "lerna.akka.entityreplication.raft" : [{"name" : "lerna.akka.entityreplication.raft.Candidate", "trait" : "lerna\/akka\/entityreplication\/raft\/Candidate.html", "kind" : "trait", "members_trait" : [{"label" : "candidateBehavior", "tail" : "(): RaftActor.Receive", "member" : "lerna.akka.entityreplication.raft.Candidate.candidateBehavior", "link" : "lerna\/akka\/entityreplication\/raft\/Candidate.html#candidateBehavior:Candidate.this.Receive", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/Candidate.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/Candidate.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/Candidate.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/Candidate.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/Candidate.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/Candidate.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/Candidate.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/Candidate.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/Candidate.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/Candidate.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/Candidate.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/Candidate.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/Candidate.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/Candidate.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/Candidate.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/Candidate.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/Candidate.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/Candidate.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/Candidate.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "lerna.akka.entityreplication.raft.CandidateData", "trait" : "lerna\/akka\/entityreplication\/raft\/CandidateData.html", "kind" : "trait", "members_trait" : [{"label" : "gotAcceptionMajorityOf", "tail" : "(numberOfMembers: Int): Boolean", "member" : "lerna.akka.entityreplication.raft.CandidateData.gotAcceptionMajorityOf", "link" : "lerna\/akka\/entityreplication\/raft\/CandidateData.html#gotAcceptionMajorityOf(numberOfMembers:Int):Boolean", "kind" : "def"}, {"label" : "acceptedBy", "tail" : "(follower: MemberIndex): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.CandidateData.acceptedBy", "link" : "lerna\/akka\/entityreplication\/raft\/CandidateData.html#acceptedBy(follower:lerna.akka.entityreplication.raft.routing.MemberIndex):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "initializeCandidateData", "tail" : "(): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.CandidateData.initializeCandidateData", "link" : "lerna\/akka\/entityreplication\/raft\/CandidateData.html#initializeCandidateData():lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/CandidateData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/CandidateData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/CandidateData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/CandidateData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/CandidateData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/CandidateData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/CandidateData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/CandidateData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/CandidateData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/CandidateData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/CandidateData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/CandidateData.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/CandidateData.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/CandidateData.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/CandidateData.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/CandidateData.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/CandidateData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/CandidateData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/CandidateData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "updateCandidateVolatileState", "tail" : "(acceptedMembers: Set[MemberIndex]): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.CandidateData.updateCandidateVolatileState", "link" : "lerna\/akka\/entityreplication\/raft\/CandidateData.html#updateCandidateVolatileState(acceptedMembers:Set[lerna.akka.entityreplication.raft.routing.MemberIndex]):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "abstract def"}, {"label" : "acceptedMembers", "tail" : "(): Set[MemberIndex]", "member" : "lerna.akka.entityreplication.raft.CandidateData.acceptedMembers", "link" : "lerna\/akka\/entityreplication\/raft\/CandidateData.html#acceptedMembers:Set[lerna.akka.entityreplication.raft.routing.MemberIndex]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "lerna.akka.entityreplication.raft.Follower", "trait" : "lerna\/akka\/entityreplication\/raft\/Follower.html", "kind" : "trait", "members_trait" : [{"label" : "followerBehavior", "tail" : "(): RaftActor.Receive", "member" : "lerna.akka.entityreplication.raft.Follower.followerBehavior", "link" : "lerna\/akka\/entityreplication\/raft\/Follower.html#followerBehavior:Follower.this.Receive", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/Follower.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/Follower.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/Follower.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/Follower.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/Follower.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/Follower.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/Follower.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/Follower.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/Follower.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/Follower.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/Follower.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/Follower.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/Follower.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/Follower.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/Follower.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/Follower.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/Follower.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/Follower.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/Follower.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "lerna.akka.entityreplication.raft.FollowerData", "trait" : "lerna\/akka\/entityreplication\/raft\/FollowerData.html", "kind" : "trait", "members_trait" : [{"label" : "followLeaderCommit", "tail" : "(leaderCommit: LogEntryIndex): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.FollowerData.followLeaderCommit", "link" : "lerna\/akka\/entityreplication\/raft\/FollowerData.html#followLeaderCommit(leaderCommit:lerna.akka.entityreplication.raft.model.LogEntryIndex):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "detectLeaderMember", "tail" : "(leaderMember: MemberIndex): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.FollowerData.detectLeaderMember", "link" : "lerna\/akka\/entityreplication\/raft\/FollowerData.html#detectLeaderMember(leaderMember:lerna.akka.entityreplication.raft.routing.MemberIndex):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "appendEntries", "tail" : "(logEntries: Seq[LogEntry], prevLogIndex: LogEntryIndex): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.FollowerData.appendEntries", "link" : "lerna\/akka\/entityreplication\/raft\/FollowerData.html#appendEntries(logEntries:Seq[lerna.akka.entityreplication.raft.model.LogEntry],prevLogIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "vote", "tail" : "(candidate: MemberIndex, term: Term): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.FollowerData.vote", "link" : "lerna\/akka\/entityreplication\/raft\/FollowerData.html#vote(candidate:lerna.akka.entityreplication.raft.routing.MemberIndex,term:lerna.akka.entityreplication.raft.model.Term):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "syncTerm", "tail" : "(term: Term): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.FollowerData.syncTerm", "link" : "lerna\/akka\/entityreplication\/raft\/FollowerData.html#syncTerm(term:lerna.akka.entityreplication.raft.model.Term):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "initializeFollowerData", "tail" : "(): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.FollowerData.initializeFollowerData", "link" : "lerna\/akka\/entityreplication\/raft\/FollowerData.html#initializeFollowerData():lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/FollowerData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/FollowerData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/FollowerData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/FollowerData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/FollowerData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/FollowerData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/FollowerData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/FollowerData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/FollowerData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/FollowerData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/FollowerData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/FollowerData.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/FollowerData.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/FollowerData.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/FollowerData.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/FollowerData.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/FollowerData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/FollowerData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/FollowerData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "updateFollowerVolatileState", "tail" : "(leaderMember: Option[MemberIndex]): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.FollowerData.updateFollowerVolatileState", "link" : "lerna\/akka\/entityreplication\/raft\/FollowerData.html#updateFollowerVolatileState(leaderMember:Option[lerna.akka.entityreplication.raft.routing.MemberIndex]):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "abstract def"}, {"label" : "leaderMember", "tail" : "(): Option[MemberIndex]", "member" : "lerna.akka.entityreplication.raft.FollowerData.leaderMember", "link" : "lerna\/akka\/entityreplication\/raft\/FollowerData.html#leaderMember:Option[lerna.akka.entityreplication.raft.routing.MemberIndex]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "lerna.akka.entityreplication.raft.Leader", "trait" : "lerna\/akka\/entityreplication\/raft\/Leader.html", "kind" : "trait", "members_trait" : [{"label" : "leaderBehavior", "tail" : "(): RaftActor.Receive", "member" : "lerna.akka.entityreplication.raft.Leader.leaderBehavior", "link" : "lerna\/akka\/entityreplication\/raft\/Leader.html#leaderBehavior:Leader.this.Receive", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/Leader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/Leader.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/Leader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/Leader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/Leader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/Leader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/Leader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/Leader.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/Leader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/Leader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/Leader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/Leader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/Leader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/Leader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/Leader.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/Leader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/Leader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/Leader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/Leader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "lerna.akka.entityreplication.raft.LeaderData", "trait" : "lerna\/akka\/entityreplication\/raft\/LeaderData.html", "kind" : "trait", "members_trait" : [{"label" : "handleCommittedLogEntriesAndClients", "tail" : "(handler: (Seq[(LogEntry, Option[ClientContext])]) => Unit): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.LeaderData.handleCommittedLogEntriesAndClients", "link" : "lerna\/akka\/entityreplication\/raft\/LeaderData.html#handleCommittedLogEntriesAndClients(handler:Seq[(lerna.akka.entityreplication.raft.model.LogEntry,Option[lerna.akka.entityreplication.raft.model.ClientContext])]=>Unit):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "currentTermIsCommitted", "tail" : "(): Boolean", "member" : "lerna.akka.entityreplication.raft.LeaderData.currentTermIsCommitted", "link" : "lerna\/akka\/entityreplication\/raft\/LeaderData.html#currentTermIsCommitted:Boolean", "kind" : "def"}, {"label" : "commit", "tail" : "(logEntryIndex: LogEntryIndex): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.LeaderData.commit", "link" : "lerna\/akka\/entityreplication\/raft\/LeaderData.html#commit(logEntryIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "findReplicatedLastLogIndex", "tail" : "(numberOfAllMembers: Int, maxIndex: LogEntryIndex): LogEntryIndex", "member" : "lerna.akka.entityreplication.raft.LeaderData.findReplicatedLastLogIndex", "link" : "lerna\/akka\/entityreplication\/raft\/LeaderData.html#findReplicatedLastLogIndex(numberOfAllMembers:Int,maxIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex):lerna.akka.entityreplication.raft.model.LogEntryIndex", "kind" : "def"}, {"label" : "markSyncLogFailed", "tail" : "(follower: MemberIndex): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.LeaderData.markSyncLogFailed", "link" : "lerna\/akka\/entityreplication\/raft\/LeaderData.html#markSyncLogFailed(follower:lerna.akka.entityreplication.raft.routing.MemberIndex):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "syncLastLogIndex", "tail" : "(follower: MemberIndex, lastLogIndex: LogEntryIndex): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.LeaderData.syncLastLogIndex", "link" : "lerna\/akka\/entityreplication\/raft\/LeaderData.html#syncLastLogIndex(follower:lerna.akka.entityreplication.raft.routing.MemberIndex,lastLogIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "nextIndexFor", "tail" : "(follower: MemberIndex): LogEntryIndex", "member" : "lerna.akka.entityreplication.raft.LeaderData.nextIndexFor", "link" : "lerna\/akka\/entityreplication\/raft\/LeaderData.html#nextIndexFor(follower:lerna.akka.entityreplication.raft.routing.MemberIndex):lerna.akka.entityreplication.raft.model.LogEntryIndex", "kind" : "def"}, {"label" : "registerClient", "tail" : "(client: ClientContext, logEntryIndex: LogEntryIndex): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.LeaderData.registerClient", "link" : "lerna\/akka\/entityreplication\/raft\/LeaderData.html#registerClient(client:lerna.akka.entityreplication.raft.model.ClientContext,logEntryIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "appendEvent", "tail" : "(event: EntityEvent): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.LeaderData.appendEvent", "link" : "lerna\/akka\/entityreplication\/raft\/LeaderData.html#appendEvent(event:lerna.akka.entityreplication.raft.model.EntityEvent):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "initializeLeaderData", "tail" : "(): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.LeaderData.initializeLeaderData", "link" : "lerna\/akka\/entityreplication\/raft\/LeaderData.html#initializeLeaderData():lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/LeaderData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/LeaderData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/LeaderData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/LeaderData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/LeaderData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/LeaderData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/LeaderData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/LeaderData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/LeaderData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/LeaderData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/LeaderData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/LeaderData.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/LeaderData.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/LeaderData.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/LeaderData.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/LeaderData.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/LeaderData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/LeaderData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/LeaderData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "updateLeaderVolatileState", "tail" : "(nextIndex: Option[NextIndex], matchIndex: MatchIndex, clients: Map[LogEntryIndex, ClientContext]): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.LeaderData.updateLeaderVolatileState", "link" : "lerna\/akka\/entityreplication\/raft\/LeaderData.html#updateLeaderVolatileState(nextIndex:Option[lerna.akka.entityreplication.raft.model.NextIndex],matchIndex:lerna.akka.entityreplication.raft.model.MatchIndex,clients:Map[lerna.akka.entityreplication.raft.model.LogEntryIndex,lerna.akka.entityreplication.raft.model.ClientContext]):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "abstract def"}, {"label" : "clients", "tail" : "(): Map[LogEntryIndex, ClientContext]", "member" : "lerna.akka.entityreplication.raft.LeaderData.clients", "link" : "lerna\/akka\/entityreplication\/raft\/LeaderData.html#clients:Map[lerna.akka.entityreplication.raft.model.LogEntryIndex,lerna.akka.entityreplication.raft.model.ClientContext]", "kind" : "abstract def"}, {"label" : "matchIndex", "tail" : "(): MatchIndex", "member" : "lerna.akka.entityreplication.raft.LeaderData.matchIndex", "link" : "lerna\/akka\/entityreplication\/raft\/LeaderData.html#matchIndex:lerna.akka.entityreplication.raft.model.MatchIndex", "kind" : "abstract def"}, {"label" : "nextIndex", "tail" : "(): Option[NextIndex]", "member" : "lerna.akka.entityreplication.raft.LeaderData.nextIndex", "link" : "lerna\/akka\/entityreplication\/raft\/LeaderData.html#nextIndex:Option[lerna.akka.entityreplication.raft.model.NextIndex]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "lerna.akka.entityreplication.raft.PersistentStateData", "object" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData$.html", "members_object" : [{"label" : "PersistentState", "tail" : "", "member" : "lerna.akka.entityreplication.raft.PersistentStateData.PersistentState", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData$.html#PersistentStateextendsClusterReplicationSerializablewithProductwithSerializable", "kind" : "final case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData.html", "kind" : "object", "members_trait" : [{"label" : "persistentState", "tail" : "(): PersistentState", "member" : "lerna.akka.entityreplication.raft.PersistentStateData.persistentState", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData.html#persistentState:lerna.akka.entityreplication.raft.PersistentStateData.PersistentState", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "updatePersistentState", "tail" : "(currentTerm: Term, votedFor: Option[MemberIndex], replicatedLog: ReplicatedLog, lastSnapshotStatus: SnapshotStatus): T", "member" : "lerna.akka.entityreplication.raft.PersistentStateData.updatePersistentState", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData.html#updatePersistentState(currentTerm:lerna.akka.entityreplication.raft.model.Term,votedFor:Option[lerna.akka.entityreplication.raft.routing.MemberIndex],replicatedLog:lerna.akka.entityreplication.raft.model.ReplicatedLog,lastSnapshotStatus:lerna.akka.entityreplication.raft.model.SnapshotStatus):T", "kind" : "abstract def"}, {"label" : "lastSnapshotStatus", "tail" : "(): SnapshotStatus", "member" : "lerna.akka.entityreplication.raft.PersistentStateData.lastSnapshotStatus", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData.html#lastSnapshotStatus:lerna.akka.entityreplication.raft.model.SnapshotStatus", "kind" : "abstract def"}, {"label" : "replicatedLog", "tail" : "(): ReplicatedLog", "member" : "lerna.akka.entityreplication.raft.PersistentStateData.replicatedLog", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData.html#replicatedLog:lerna.akka.entityreplication.raft.model.ReplicatedLog", "kind" : "abstract def"}, {"label" : "votedFor", "tail" : "(): Option[MemberIndex]", "member" : "lerna.akka.entityreplication.raft.PersistentStateData.votedFor", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData.html#votedFor:Option[lerna.akka.entityreplication.raft.routing.MemberIndex]", "kind" : "abstract def"}, {"label" : "currentTerm", "tail" : "(): Term", "member" : "lerna.akka.entityreplication.raft.PersistentStateData.currentTerm", "link" : "lerna\/akka\/entityreplication\/raft\/PersistentStateData.html#currentTerm:lerna.akka.entityreplication.raft.model.Term", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "lerna.akka.entityreplication.raft.RaftActor", "shortDescription" : "", "object" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html", "members_class" : [{"label" : "postStop", "tail" : "(): Unit", "member" : "lerna.akka.entityreplication.raft.RaftActor.postStop", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#postStop():Unit", "kind" : "def"}, {"label" : "startSyncSnapshot", "tail" : "(installSnapshot: InstallSnapshot): Unit", "member" : "lerna.akka.entityreplication.raft.RaftActor.startSyncSnapshot", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#startSyncSnapshot(installSnapshot:lerna.akka.entityreplication.raft.protocol.RaftCommands.InstallSnapshot):Unit", "kind" : "def"}, {"label" : "receiveSyncSnapshotResponse", "tail" : "(response: Response): Unit", "member" : "lerna.akka.entityreplication.raft.RaftActor.receiveSyncSnapshotResponse", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#receiveSyncSnapshotResponse(response:lerna.akka.entityreplication.raft.snapshot.sync.SnapshotSyncManager.Response):Unit", "kind" : "def"}, {"label" : "receiveInstallSnapshot", "tail" : "(request: InstallSnapshot): Unit", "member" : "lerna.akka.entityreplication.raft.RaftActor.receiveInstallSnapshot", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#receiveInstallSnapshot(request:lerna.akka.entityreplication.raft.protocol.RaftCommands.InstallSnapshot):Unit", "kind" : "def"}, {"label" : "requestTakeSnapshots", "tail" : "(logEntryIndex: LogEntryIndex, entityIds: Set[NormalizedEntityId]): Unit", "member" : "lerna.akka.entityreplication.raft.RaftActor.requestTakeSnapshots", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#requestTakeSnapshots(logEntryIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex,entityIds:Set[lerna.akka.entityreplication.model.NormalizedEntityId]):Unit", "kind" : "def"}, {"label" : "handleSnapshotTick", "tail" : "(): Unit", "member" : "lerna.akka.entityreplication.raft.RaftActor.handleSnapshotTick", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#handleSnapshotTick():Unit", "kind" : "def"}, {"label" : "applyToReplicationActor", "tail" : "(logEntry: LogEntry): Unit", "member" : "lerna.akka.entityreplication.raft.RaftActor.applyToReplicationActor", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#applyToReplicationActor(logEntry:lerna.akka.entityreplication.raft.model.LogEntry):Unit", "kind" : "def"}, {"label" : "broadcast", "tail" : "(message: Any): Unit", "member" : "lerna.akka.entityreplication.raft.RaftActor.broadcast", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#broadcast(message:Any):Unit", "kind" : "def"}, {"label" : "resetSnapshotTickTimer", "tail" : "(): Unit", "member" : "lerna.akka.entityreplication.raft.RaftActor.resetSnapshotTickTimer", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#resetSnapshotTickTimer():Unit", "kind" : "def"}, {"label" : "cancelHeartbeatTimeoutTimer", "tail" : "(): Unit", "member" : "lerna.akka.entityreplication.raft.RaftActor.cancelHeartbeatTimeoutTimer", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#cancelHeartbeatTimeoutTimer():Unit", "kind" : "def"}, {"label" : "resetHeartbeatTimeoutTimer", "tail" : "(): Unit", "member" : "lerna.akka.entityreplication.raft.RaftActor.resetHeartbeatTimeoutTimer", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#resetHeartbeatTimeoutTimer():Unit", "kind" : "def"}, {"label" : "cancelElectionTimeoutTimer", "tail" : "(): Unit", "member" : "lerna.akka.entityreplication.raft.RaftActor.cancelElectionTimeoutTimer", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#cancelElectionTimeoutTimer():Unit", "kind" : "def"}, {"label" : "resetElectionTimeoutTimer", "tail" : "(): Unit", "member" : "lerna.akka.entityreplication.raft.RaftActor.resetElectionTimeoutTimer", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#resetElectionTimeoutTimer():Unit", "kind" : "def"}, {"label" : "receiveSaveSnapshotResponse", "tail" : "(response: SaveSnapshotResponse): Unit", "member" : "lerna.akka.entityreplication.raft.RaftActor.receiveSaveSnapshotResponse", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#receiveSaveSnapshotResponse(response:lerna.akka.entityreplication.raft.snapshot.SnapshotProtocol.SaveSnapshotResponse):Unit", "kind" : "def"}, {"label" : "receiveEntitySnapshotResponse", "tail" : "(response: Snapshot): Unit", "member" : "lerna.akka.entityreplication.raft.RaftActor.receiveEntitySnapshotResponse", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#receiveEntitySnapshotResponse(response:lerna.akka.entityreplication.ReplicationActor.Snapshot):Unit", "kind" : "def"}, {"label" : "suspendEntity", "tail" : "(entityId: NormalizedEntityId, stopMessage: Any): Unit", "member" : "lerna.akka.entityreplication.raft.RaftActor.suspendEntity", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#suspendEntity(entityId:lerna.akka.entityreplication.model.NormalizedEntityId,stopMessage:Any):Unit", "kind" : "def"}, {"label" : "recoveringBehavior", "tail" : "(): Receive", "member" : "lerna.akka.entityreplication.raft.RaftActor.recoveringBehavior", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#recoveringBehavior:RaftActor.this.Receive", "kind" : "def"}, {"label" : "onTransition", "tail" : ": TransitionHandler", "member" : "lerna.akka.entityreplication.raft.RaftActor.onTransition", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#onTransition:RaftActor.this.TransitionHandler", "kind" : "val"}, {"label" : "onRecoveryCompleted", "tail" : "(): Unit", "member" : "lerna.akka.entityreplication.raft.RaftActor.onRecoveryCompleted", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#onRecoveryCompleted():Unit", "kind" : "def"}, {"label" : "stateBehaviors", "tail" : ": StateBehaviors", "member" : "lerna.akka.entityreplication.raft.RaftActor.stateBehaviors", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#stateBehaviors:RaftActor.this.StateBehaviors", "kind" : "val"}, {"label" : "updateState", "tail" : "(domainEvent: DomainEvent): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.RaftActor.updateState", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#updateState(domainEvent:lerna.akka.entityreplication.raft.RaftActor.DomainEvent):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "numberOfMembers", "tail" : ": Int", "member" : "lerna.akka.entityreplication.raft.RaftActor.numberOfMembers", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#numberOfMembers:Int", "kind" : "val"}, {"label" : "snapshotPluginConfig", "tail" : "(): Config", "member" : "lerna.akka.entityreplication.raft.RaftActor.snapshotPluginConfig", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#snapshotPluginConfig:com.typesafe.config.Config", "kind" : "def"}, {"label" : "snapshotPluginId", "tail" : "(): String", "member" : "lerna.akka.entityreplication.raft.RaftActor.snapshotPluginId", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#snapshotPluginId:String", "kind" : "def"}, {"label" : "journalPluginConfig", "tail" : "(): Config", "member" : "lerna.akka.entityreplication.raft.RaftActor.journalPluginConfig", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#journalPluginConfig:com.typesafe.config.Config", "kind" : "def"}, {"label" : "journalPluginId", "tail" : "(): String", "member" : "lerna.akka.entityreplication.raft.RaftActor.journalPluginId", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#journalPluginId:String", "kind" : "def"}, {"label" : "persistenceId", "tail" : ": String", "member" : "lerna.akka.entityreplication.raft.RaftActor.persistenceId", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#persistenceId:String", "kind" : "val"}, {"label" : "replicationActor", "tail" : "(entityId: NormalizedEntityId): ActorRef", "member" : "lerna.akka.entityreplication.raft.RaftActor.replicationActor", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#replicationActor(entityId:lerna.akka.entityreplication.model.NormalizedEntityId):akka.actor.ActorRef", "kind" : "def"}, {"label" : "receiveFetchSnapshotResponse", "tail" : "(response: FetchSnapshotResponse): Unit", "member" : "lerna.akka.entityreplication.raft.RaftActor.receiveFetchSnapshotResponse", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#receiveFetchSnapshotResponse(response:lerna.akka.entityreplication.raft.snapshot.SnapshotProtocol.FetchSnapshotResponse):Unit", "kind" : "def"}, {"label" : "recoveryEntity", "tail" : "(entityId: NormalizedEntityId): Unit", "member" : "lerna.akka.entityreplication.raft.RaftActor.recoveryEntity", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#recoveryEntity(entityId:lerna.akka.entityreplication.model.NormalizedEntityId):Unit", "kind" : "def"}, {"label" : "createEntityIfNotExists", "tail" : "(entityId: NormalizedEntityId): Unit", "member" : "lerna.akka.entityreplication.raft.RaftActor.createEntityIfNotExists", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#createEntityIfNotExists(entityId:lerna.akka.entityreplication.model.NormalizedEntityId):Unit", "kind" : "def"}, {"label" : "otherMemberIndexes", "tail" : "(): Set[MemberIndex]", "member" : "lerna.akka.entityreplication.raft.RaftActor.otherMemberIndexes", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#otherMemberIndexes:Set[lerna.akka.entityreplication.raft.routing.MemberIndex]", "kind" : "def"}, {"label" : "selfMemberIndex", "tail" : "(): MemberIndex", "member" : "lerna.akka.entityreplication.raft.RaftActor.selfMemberIndex", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#selfMemberIndex:lerna.akka.entityreplication.raft.routing.MemberIndex", "kind" : "def"}, {"label" : "region", "tail" : "(): ActorRef", "member" : "lerna.akka.entityreplication.raft.RaftActor.region", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#region:akka.actor.ActorRef", "kind" : "def"}, {"label" : "shardId", "tail" : "(): NormalizedShardId", "member" : "lerna.akka.entityreplication.raft.RaftActor.shardId", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#shardId:lerna.akka.entityreplication.model.NormalizedShardId", "kind" : "def"}, {"member" : "lerna.akka.entityreplication.raft.RaftActor#<init>", "error" : "unsupported entity"}, {"label" : "settings", "tail" : ": RaftSettings", "member" : "lerna.akka.entityreplication.raft.RaftActor.settings", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#settings:lerna.akka.entityreplication.raft.RaftSettings", "kind" : "val"}, {"label" : "extractEntityId", "tail" : ": PartialFunction[Msg, (NormalizedEntityId, Msg)]", "member" : "lerna.akka.entityreplication.raft.RaftActor.extractEntityId", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#extractEntityId:PartialFunction[lerna.akka.entityreplication.ReplicationRegion.Msg,(lerna.akka.entityreplication.model.NormalizedEntityId,lerna.akka.entityreplication.ReplicationRegion.Msg)]", "kind" : "val"}, {"label" : "leaderBehavior", "tail" : "(): Receive", "member" : "lerna.akka.entityreplication.raft.Leader.leaderBehavior", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#leaderBehavior:Leader.this.Receive", "kind" : "def"}, {"label" : "candidateBehavior", "tail" : "(): Receive", "member" : "lerna.akka.entityreplication.raft.Candidate.candidateBehavior", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#candidateBehavior:Candidate.this.Receive", "kind" : "def"}, {"label" : "followerBehavior", "tail" : "(): Receive", "member" : "lerna.akka.entityreplication.raft.Follower.followerBehavior", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#followerBehavior:Follower.this.Receive", "kind" : "def"}, {"label" : "->", "tail" : ": RaftActorBase.->.type", "member" : "lerna.akka.entityreplication.raft.RaftActorBase.->", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#->:lerna.akka.entityreplication.raft.RaftActorBase.->.type", "kind" : "val"}, {"label" : "become", "tail" : "(state: State): Unit", "member" : "lerna.akka.entityreplication.raft.RaftActorBase.become", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#become(state:lerna.akka.entityreplication.raft.RaftActor.State):Unit", "kind" : "def"}, {"label" : "applyDomainEvent", "tail" : "(domainEvent: T)(f: (T) => Unit): Unit", "member" : "lerna.akka.entityreplication.raft.RaftActorBase.applyDomainEvent", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#applyDomainEvent[T<:lerna.akka.entityreplication.raft.RaftActor.DomainEvent](domainEvent:T)(f:T=>Unit):Unit", "kind" : "def"}, {"label" : "receiveCommand", "tail" : "(): Receive", "member" : "lerna.akka.entityreplication.raft.RaftActorBase.receiveCommand", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#receiveCommand:RaftActorBase.this.Receive", "kind" : "final def"}, {"label" : "receiveRecover", "tail" : "(): Receive", "member" : "lerna.akka.entityreplication.raft.RaftActorBase.receiveRecover", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#receiveRecover:RaftActorBase.this.Receive", "kind" : "final def"}, {"label" : "currentData", "tail" : "(): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.RaftActorBase.currentData", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#currentData:lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "currentState", "tail" : "(): State", "member" : "lerna.akka.entityreplication.raft.RaftActorBase.currentState", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#currentState:lerna.akka.entityreplication.raft.RaftActor.State", "kind" : "def"}, {"label" : "StateBehaviors", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftActorBase.StateBehaviors", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#StateBehaviors=lerna.akka.entityreplication.raft.RaftActor.State=>RaftActorBase.this.Receive", "kind" : "type"}, {"label" : "TransitionHandler", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftActorBase.TransitionHandler", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#TransitionHandler=PartialFunction[(lerna.akka.entityreplication.raft.RaftActor.State,lerna.akka.entityreplication.raft.RaftActor.State),Unit]", "kind" : "type"}, {"label" : "log", "tail" : "(): LoggingAdapter", "member" : "akka.actor.ActorLogging.log", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#log:akka.event.LoggingAdapter", "kind" : "def"}, {"label" : "defer", "tail" : "(event: A)(handler: (A) => Unit): Unit", "member" : "akka.persistence.PersistentActor.defer", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#defer[A](event:A)(handler:A=>Unit):Unit", "kind" : "def"}, {"label" : "deferAsync", "tail" : "(event: A)(handler: (A) => Unit): Unit", "member" : "akka.persistence.PersistentActor.deferAsync", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#deferAsync[A](event:A)(handler:A=>Unit):Unit", "kind" : "def"}, {"label" : "persistAllAsync", "tail" : "(events: Seq[A])(handler: (A) => Unit): Unit", "member" : "akka.persistence.PersistentActor.persistAllAsync", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#persistAllAsync[A](events:Seq[A])(handler:A=>Unit):Unit", "kind" : "def"}, {"label" : "persistAsync", "tail" : "(event: A)(handler: (A) => Unit): Unit", "member" : "akka.persistence.PersistentActor.persistAsync", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#persistAsync[A](event:A)(handler:A=>Unit):Unit", "kind" : "def"}, {"label" : "persistAll", "tail" : "(events: Seq[A])(handler: (A) => Unit): Unit", "member" : "akka.persistence.PersistentActor.persistAll", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#persistAll[A](events:Seq[A])(handler:A=>Unit):Unit", "kind" : "def"}, {"label" : "persist", "tail" : "(event: A)(handler: (A) => Unit): Unit", "member" : "akka.persistence.PersistentActor.persist", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#persist[A](event:A)(handler:A=>Unit):Unit", "kind" : "def"}, {"label" : "receive", "tail" : "(): Receive", "member" : "akka.persistence.PersistentActor.receive", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#receive:PersistentActor.this.Receive", "kind" : "def"}, {"label" : "unstashAll", "tail" : "(): Unit", "member" : "akka.persistence.Eventsourced.unstashAll", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#unstashAll():Unit", "kind" : "def"}, {"label" : "stash", "tail" : "(): Unit", "member" : "akka.persistence.Eventsourced.stash", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#stash():Unit", "kind" : "def"}, {"label" : "recoveryFinished", "tail" : "(): Boolean", "member" : "akka.persistence.Eventsourced.recoveryFinished", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#recoveryFinished:Boolean", "kind" : "def"}, {"label" : "recoveryRunning", "tail" : "(): Boolean", "member" : "akka.persistence.Eventsourced.recoveryRunning", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#recoveryRunning:Boolean", "kind" : "def"}, {"label" : "deleteMessages", "tail" : "(toSequenceNr: Long): Unit", "member" : "akka.persistence.Eventsourced.deleteMessages", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#deleteMessages(toSequenceNr:Long):Unit", "kind" : "def"}, {"label" : "unhandled", "tail" : "(message: Any): Unit", "member" : "akka.persistence.Eventsourced.unhandled", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#unhandled(message:Any):Unit", "kind" : "def"}, {"label" : "aroundPostStop", "tail" : "(): Unit", "member" : "akka.persistence.Eventsourced.aroundPostStop", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#aroundPostStop():Unit", "kind" : "def"}, {"label" : "aroundPostRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.persistence.Eventsourced.aroundPostRestart", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#aroundPostRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "aroundPreRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.persistence.Eventsourced.aroundPreRestart", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#aroundPreRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "aroundPreStart", "tail" : "(): Unit", "member" : "akka.persistence.Eventsourced.aroundPreStart", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#aroundPreStart():Unit", "kind" : "def"}, {"label" : "aroundReceive", "tail" : "(receive: Receive, message: Any): Unit", "member" : "akka.persistence.Eventsourced.aroundReceive", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#aroundReceive(receive:Eventsourced.this.Receive,message:Any):Unit", "kind" : "def"}, {"label" : "onPersistRejected", "tail" : "(cause: Throwable, event: Any, seqNr: Long): Unit", "member" : "akka.persistence.Eventsourced.onPersistRejected", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#onPersistRejected(cause:Throwable,event:Any,seqNr:Long):Unit", "kind" : "def"}, {"label" : "onPersistFailure", "tail" : "(cause: Throwable, event: Any, seqNr: Long): Unit", "member" : "akka.persistence.Eventsourced.onPersistFailure", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#onPersistFailure(cause:Throwable,event:Any,seqNr:Long):Unit", "kind" : "def"}, {"label" : "onRecoveryFailure", "tail" : "(cause: Throwable, event: Option[Any]): Unit", "member" : "akka.persistence.Eventsourced.onRecoveryFailure", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#onRecoveryFailure(cause:Throwable,event:Option[Any]):Unit", "kind" : "def"}, {"label" : "snapshotSequenceNr", "tail" : "(): Long", "member" : "akka.persistence.Eventsourced.snapshotSequenceNr", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#snapshotSequenceNr:Long", "kind" : "def"}, {"label" : "lastSequenceNr", "tail" : "(): Long", "member" : "akka.persistence.Eventsourced.lastSequenceNr", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#lastSequenceNr:Long", "kind" : "def"}, {"label" : "snapshotterId", "tail" : "(): String", "member" : "akka.persistence.Eventsourced.snapshotterId", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#snapshotterId:String", "kind" : "def"}, {"label" : "recovery", "tail" : "(): Recovery", "member" : "akka.persistence.PersistenceRecovery.recovery", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#recovery:akka.persistence.Recovery", "kind" : "def"}, {"label" : "internalStashOverflowStrategy", "tail" : "(): StashOverflowStrategy", "member" : "akka.persistence.PersistenceStash.internalStashOverflowStrategy", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#internalStashOverflowStrategy:akka.persistence.StashOverflowStrategy", "kind" : "def"}, {"label" : "preRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.UnrestrictedStash.preRestart", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#preRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "deleteSnapshots", "tail" : "(criteria: SnapshotSelectionCriteria): Unit", "member" : "akka.persistence.Snapshotter.deleteSnapshots", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#deleteSnapshots(criteria:akka.persistence.SnapshotSelectionCriteria):Unit", "kind" : "def"}, {"label" : "deleteSnapshot", "tail" : "(sequenceNr: Long): Unit", "member" : "akka.persistence.Snapshotter.deleteSnapshot", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#deleteSnapshot(sequenceNr:Long):Unit", "kind" : "def"}, {"label" : "saveSnapshot", "tail" : "(snapshot: Any): Unit", "member" : "akka.persistence.Snapshotter.saveSnapshot", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#saveSnapshot(snapshot:Any):Unit", "kind" : "def"}, {"label" : "loadSnapshot", "tail" : "(persistenceId: String, criteria: SnapshotSelectionCriteria, toSequenceNr: Long): Unit", "member" : "akka.persistence.Snapshotter.loadSnapshot", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#loadSnapshot(persistenceId:String,criteria:akka.persistence.SnapshotSelectionCriteria,toSequenceNr:Long):Unit", "kind" : "def"}, {"label" : "postRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.postRestart", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#postRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.preStart", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#preStart():Unit", "kind" : "def"}, {"label" : "supervisorStrategy", "tail" : "(): SupervisorStrategy", "member" : "akka.actor.Actor.supervisorStrategy", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#supervisorStrategy:akka.actor.SupervisorStrategy", "kind" : "def"}, {"label" : "sender", "tail" : "(): ActorRef", "member" : "akka.actor.Actor.sender", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#sender():akka.actor.ActorRef", "kind" : "final def"}, {"label" : "self", "tail" : ": ActorRef", "member" : "akka.actor.Actor.self", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#self:akka.actor.ActorRef", "kind" : "implicit final val"}, {"label" : "context", "tail" : ": ActorContext", "member" : "akka.actor.Actor.context", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#context:akka.actor.ActorContext", "kind" : "implicit val"}, {"label" : "Receive", "tail" : "", "member" : "akka.actor.Actor.Receive", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#Receive=akka.actor.Actor.Receive", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "NonPersistEventLike", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftActor.NonPersistEventLike", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#NonPersistEventLikeextendsRaftActor.NonPersistEvent", "kind" : "trait"}, {"label" : "EntitySnapshotSaved", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftActor.EntitySnapshotSaved", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#EntitySnapshotSavedextendsRaftActor.NonPersistEventwithProductwithSerializable", "kind" : "final case class"}, {"label" : "SnapshottingStarted", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftActor.SnapshottingStarted", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#SnapshottingStartedextendsRaftActor.NonPersistEventwithProductwithSerializable", "kind" : "final case class"}, {"label" : "Committed", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftActor.Committed", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#CommittedextendsRaftActor.NonPersistEventwithProductwithSerializable", "kind" : "final case class"}, {"label" : "FollowedLeaderCommit", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftActor.FollowedLeaderCommit", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#FollowedLeaderCommitextendsRaftActor.NonPersistEventwithProductwithSerializable", "kind" : "final case class"}, {"label" : "DeniedAppendEntries", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftActor.DeniedAppendEntries", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#DeniedAppendEntriesextendsRaftActor.NonPersistEventwithProductwithSerializable", "kind" : "final case class"}, {"label" : "SucceededAppendEntries", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftActor.SucceededAppendEntries", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#SucceededAppendEntriesextendsRaftActor.NonPersistEventwithProductwithSerializable", "kind" : "final case class"}, {"label" : "AcceptedRequestVote", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftActor.AcceptedRequestVote", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#AcceptedRequestVoteextendsRaftActor.NonPersistEventwithProductwithSerializable", "kind" : "final case class"}, {"label" : "StartedReplication", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftActor.StartedReplication", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#StartedReplicationextendsRaftActor.NonPersistEventwithProductwithSerializable", "kind" : "final case class"}, {"label" : "DetectedLeaderMember", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftActor.DetectedLeaderMember", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#DetectedLeaderMemberextendsRaftActor.NonPersistEventwithProductwithSerializable", "kind" : "final case class"}, {"label" : "BecameLeader", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftActor.BecameLeader", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#BecameLeaderextendsRaftActor.NonPersistEventwithProductwithSerializable", "kind" : "final case class"}, {"label" : "BecameCandidate", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftActor.BecameCandidate", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#BecameCandidateextendsRaftActor.NonPersistEventwithProductwithSerializable", "kind" : "final case class"}, {"label" : "BecameFollower", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftActor.BecameFollower", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#BecameFollowerextendsRaftActor.NonPersistEventwithProductwithSerializable", "kind" : "final case class"}, {"label" : "NonPersistEvent", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftActor.NonPersistEvent", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#NonPersistEventextendsRaftActor.DomainEvent", "kind" : "sealed trait"}, {"label" : "SnapshotSyncCompleted", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftActor.SnapshotSyncCompleted", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#SnapshotSyncCompletedextendsRaftActor.PersistEventwithClusterReplicationSerializablewithProductwithSerializable", "kind" : "final case class"}, {"label" : "CompactionCompleted", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftActor.CompactionCompleted", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#CompactionCompletedextendsRaftActor.PersistEventwithClusterReplicationSerializablewithProductwithSerializable", "kind" : "final case class"}, {"label" : "AppendedEvent", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftActor.AppendedEvent", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#AppendedEventextendsRaftActor.PersistEventwithClusterReplicationSerializablewithProductwithSerializable", "kind" : "final case class"}, {"label" : "AppendedEntries", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftActor.AppendedEntries", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#AppendedEntriesextendsRaftActor.PersistEventwithClusterReplicationSerializablewithProductwithSerializable", "kind" : "final case class"}, {"label" : "DetectedNewTerm", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftActor.DetectedNewTerm", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#DetectedNewTermextendsRaftActor.PersistEventwithClusterReplicationSerializablewithProductwithSerializable", "kind" : "final case class"}, {"label" : "Voted", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftActor.Voted", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#VotedextendsRaftActor.PersistEventwithClusterReplicationSerializablewithProductwithSerializable", "kind" : "final case class"}, {"label" : "BegunNewTerm", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftActor.BegunNewTerm", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#BegunNewTermextendsRaftActor.PersistEventwithClusterReplicationSerializablewithProductwithSerializable", "kind" : "final case class"}, {"label" : "PersistEvent", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftActor.PersistEvent", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#PersistEventextendsRaftActor.DomainEvent", "kind" : "sealed trait"}, {"label" : "DomainEvent", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftActor.DomainEvent", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#DomainEventextendsAnyRef", "kind" : "sealed trait"}, {"label" : "SnapshotTick", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftActor.SnapshotTick", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#SnapshotTick", "kind" : "case object"}, {"label" : "HeartbeatTimeout", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftActor.HeartbeatTimeout", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#HeartbeatTimeout", "kind" : "case object"}, {"label" : "ElectionTimeout", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftActor.ElectionTimeout", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#ElectionTimeout", "kind" : "case object"}, {"label" : "TimerEvent", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftActor.TimerEvent", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#TimerEventextendsAnyRef", "kind" : "sealed trait"}, {"label" : "Leader", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftActor.Leader", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#Leader", "kind" : "case object"}, {"label" : "Candidate", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftActor.Candidate", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#Candidate", "kind" : "case object"}, {"label" : "Follower", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftActor.Follower", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#Follower", "kind" : "case object"}, {"label" : "Recovering", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftActor.Recovering", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#Recovering", "kind" : "case object"}, {"label" : "State", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftActor.State", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#StateextendsAnyRef", "kind" : "sealed trait"}, {"label" : "props", "tail" : "(typeName: TypeName, extractEntityId: PartialFunction[Msg, (NormalizedEntityId, Msg)], replicationActorProps: Props, region: ActorRef, shardSnapshotStoreProps: Props, selfMemberIndex: MemberIndex, otherMemberIndexes: Set[MemberIndex], settings: RaftSettings, maybeCommitLogStore: Option[CommitLogStore]): Props", "member" : "lerna.akka.entityreplication.raft.RaftActor.props", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#props(typeName:lerna.akka.entityreplication.model.TypeName,extractEntityId:PartialFunction[lerna.akka.entityreplication.ReplicationRegion.Msg,(lerna.akka.entityreplication.model.NormalizedEntityId,lerna.akka.entityreplication.ReplicationRegion.Msg)],replicationActorProps:akka.actor.Props,region:akka.actor.ActorRef,shardSnapshotStoreProps:akka.actor.Props,selfMemberIndex:lerna.akka.entityreplication.raft.routing.MemberIndex,otherMemberIndexes:Set[lerna.akka.entityreplication.raft.routing.MemberIndex],settings:lerna.akka.entityreplication.raft.RaftSettings,maybeCommitLogStore:Option[lerna.akka.entityreplication.raft.eventhandler.CommitLogStore]):akka.actor.Props", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lerna\/akka\/entityreplication\/raft\/RaftActor.html", "kind" : "object"}, {"name" : "lerna.akka.entityreplication.raft.RaftActorBase", "object" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase$.html", "members_object" : [{"label" : "->", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftActorBase.->", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase$.html#->", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html", "kind" : "object", "members_trait" : [{"label" : "->", "tail" : ": RaftActorBase.->.type", "member" : "lerna.akka.entityreplication.raft.RaftActorBase.->", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#->:lerna.akka.entityreplication.raft.RaftActorBase.->.type", "kind" : "val"}, {"label" : "become", "tail" : "(state: State): Unit", "member" : "lerna.akka.entityreplication.raft.RaftActorBase.become", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#become(state:lerna.akka.entityreplication.raft.RaftActor.State):Unit", "kind" : "def"}, {"label" : "applyDomainEvent", "tail" : "(domainEvent: T)(f: (T) => Unit): Unit", "member" : "lerna.akka.entityreplication.raft.RaftActorBase.applyDomainEvent", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#applyDomainEvent[T<:lerna.akka.entityreplication.raft.RaftActor.DomainEvent](domainEvent:T)(f:T=>Unit):Unit", "kind" : "def"}, {"label" : "receiveCommand", "tail" : "(): Receive", "member" : "lerna.akka.entityreplication.raft.RaftActorBase.receiveCommand", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#receiveCommand:RaftActorBase.this.Receive", "kind" : "final def"}, {"label" : "receiveRecover", "tail" : "(): Receive", "member" : "lerna.akka.entityreplication.raft.RaftActorBase.receiveRecover", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#receiveRecover:RaftActorBase.this.Receive", "kind" : "final def"}, {"label" : "currentData", "tail" : "(): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.RaftActorBase.currentData", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#currentData:lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "currentState", "tail" : "(): State", "member" : "lerna.akka.entityreplication.raft.RaftActorBase.currentState", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#currentState:lerna.akka.entityreplication.raft.RaftActor.State", "kind" : "def"}, {"label" : "StateBehaviors", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftActorBase.StateBehaviors", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#StateBehaviors=lerna.akka.entityreplication.raft.RaftActor.State=>RaftActorBase.this.Receive", "kind" : "type"}, {"label" : "TransitionHandler", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftActorBase.TransitionHandler", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#TransitionHandler=PartialFunction[(lerna.akka.entityreplication.raft.RaftActor.State,lerna.akka.entityreplication.raft.RaftActor.State),Unit]", "kind" : "type"}, {"label" : "log", "tail" : "(): LoggingAdapter", "member" : "akka.actor.ActorLogging.log", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#log:akka.event.LoggingAdapter", "kind" : "def"}, {"label" : "defer", "tail" : "(event: A)(handler: (A) => Unit): Unit", "member" : "akka.persistence.PersistentActor.defer", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#defer[A](event:A)(handler:A=>Unit):Unit", "kind" : "def"}, {"label" : "deferAsync", "tail" : "(event: A)(handler: (A) => Unit): Unit", "member" : "akka.persistence.PersistentActor.deferAsync", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#deferAsync[A](event:A)(handler:A=>Unit):Unit", "kind" : "def"}, {"label" : "persistAllAsync", "tail" : "(events: Seq[A])(handler: (A) => Unit): Unit", "member" : "akka.persistence.PersistentActor.persistAllAsync", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#persistAllAsync[A](events:Seq[A])(handler:A=>Unit):Unit", "kind" : "def"}, {"label" : "persistAsync", "tail" : "(event: A)(handler: (A) => Unit): Unit", "member" : "akka.persistence.PersistentActor.persistAsync", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#persistAsync[A](event:A)(handler:A=>Unit):Unit", "kind" : "def"}, {"label" : "persistAll", "tail" : "(events: Seq[A])(handler: (A) => Unit): Unit", "member" : "akka.persistence.PersistentActor.persistAll", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#persistAll[A](events:Seq[A])(handler:A=>Unit):Unit", "kind" : "def"}, {"label" : "persist", "tail" : "(event: A)(handler: (A) => Unit): Unit", "member" : "akka.persistence.PersistentActor.persist", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#persist[A](event:A)(handler:A=>Unit):Unit", "kind" : "def"}, {"label" : "receive", "tail" : "(): Receive", "member" : "akka.persistence.PersistentActor.receive", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#receive:PersistentActor.this.Receive", "kind" : "def"}, {"label" : "unstashAll", "tail" : "(): Unit", "member" : "akka.persistence.Eventsourced.unstashAll", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#unstashAll():Unit", "kind" : "def"}, {"label" : "stash", "tail" : "(): Unit", "member" : "akka.persistence.Eventsourced.stash", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#stash():Unit", "kind" : "def"}, {"label" : "recoveryFinished", "tail" : "(): Boolean", "member" : "akka.persistence.Eventsourced.recoveryFinished", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#recoveryFinished:Boolean", "kind" : "def"}, {"label" : "recoveryRunning", "tail" : "(): Boolean", "member" : "akka.persistence.Eventsourced.recoveryRunning", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#recoveryRunning:Boolean", "kind" : "def"}, {"label" : "deleteMessages", "tail" : "(toSequenceNr: Long): Unit", "member" : "akka.persistence.Eventsourced.deleteMessages", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#deleteMessages(toSequenceNr:Long):Unit", "kind" : "def"}, {"label" : "unhandled", "tail" : "(message: Any): Unit", "member" : "akka.persistence.Eventsourced.unhandled", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#unhandled(message:Any):Unit", "kind" : "def"}, {"label" : "aroundPostStop", "tail" : "(): Unit", "member" : "akka.persistence.Eventsourced.aroundPostStop", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#aroundPostStop():Unit", "kind" : "def"}, {"label" : "aroundPostRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.persistence.Eventsourced.aroundPostRestart", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#aroundPostRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "aroundPreRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.persistence.Eventsourced.aroundPreRestart", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#aroundPreRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "aroundPreStart", "tail" : "(): Unit", "member" : "akka.persistence.Eventsourced.aroundPreStart", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#aroundPreStart():Unit", "kind" : "def"}, {"label" : "aroundReceive", "tail" : "(receive: Receive, message: Any): Unit", "member" : "akka.persistence.Eventsourced.aroundReceive", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#aroundReceive(receive:Eventsourced.this.Receive,message:Any):Unit", "kind" : "def"}, {"label" : "onPersistRejected", "tail" : "(cause: Throwable, event: Any, seqNr: Long): Unit", "member" : "akka.persistence.Eventsourced.onPersistRejected", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#onPersistRejected(cause:Throwable,event:Any,seqNr:Long):Unit", "kind" : "def"}, {"label" : "onPersistFailure", "tail" : "(cause: Throwable, event: Any, seqNr: Long): Unit", "member" : "akka.persistence.Eventsourced.onPersistFailure", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#onPersistFailure(cause:Throwable,event:Any,seqNr:Long):Unit", "kind" : "def"}, {"label" : "onRecoveryFailure", "tail" : "(cause: Throwable, event: Option[Any]): Unit", "member" : "akka.persistence.Eventsourced.onRecoveryFailure", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#onRecoveryFailure(cause:Throwable,event:Option[Any]):Unit", "kind" : "def"}, {"label" : "snapshotSequenceNr", "tail" : "(): Long", "member" : "akka.persistence.Eventsourced.snapshotSequenceNr", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#snapshotSequenceNr:Long", "kind" : "def"}, {"label" : "lastSequenceNr", "tail" : "(): Long", "member" : "akka.persistence.Eventsourced.lastSequenceNr", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#lastSequenceNr:Long", "kind" : "def"}, {"label" : "snapshotterId", "tail" : "(): String", "member" : "akka.persistence.Eventsourced.snapshotterId", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#snapshotterId:String", "kind" : "def"}, {"label" : "recovery", "tail" : "(): Recovery", "member" : "akka.persistence.PersistenceRecovery.recovery", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#recovery:akka.persistence.Recovery", "kind" : "def"}, {"label" : "snapshotPluginId", "tail" : "(): String", "member" : "akka.persistence.PersistenceIdentity.snapshotPluginId", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#snapshotPluginId:String", "kind" : "def"}, {"label" : "journalPluginId", "tail" : "(): String", "member" : "akka.persistence.PersistenceIdentity.journalPluginId", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#journalPluginId:String", "kind" : "def"}, {"label" : "internalStashOverflowStrategy", "tail" : "(): StashOverflowStrategy", "member" : "akka.persistence.PersistenceStash.internalStashOverflowStrategy", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#internalStashOverflowStrategy:akka.persistence.StashOverflowStrategy", "kind" : "def"}, {"label" : "postStop", "tail" : "(): Unit", "member" : "akka.actor.UnrestrictedStash.postStop", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#postStop():Unit", "kind" : "def"}, {"label" : "preRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.UnrestrictedStash.preRestart", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#preRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "deleteSnapshots", "tail" : "(criteria: SnapshotSelectionCriteria): Unit", "member" : "akka.persistence.Snapshotter.deleteSnapshots", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#deleteSnapshots(criteria:akka.persistence.SnapshotSelectionCriteria):Unit", "kind" : "def"}, {"label" : "deleteSnapshot", "tail" : "(sequenceNr: Long): Unit", "member" : "akka.persistence.Snapshotter.deleteSnapshot", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#deleteSnapshot(sequenceNr:Long):Unit", "kind" : "def"}, {"label" : "saveSnapshot", "tail" : "(snapshot: Any): Unit", "member" : "akka.persistence.Snapshotter.saveSnapshot", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#saveSnapshot(snapshot:Any):Unit", "kind" : "def"}, {"label" : "loadSnapshot", "tail" : "(persistenceId: String, criteria: SnapshotSelectionCriteria, toSequenceNr: Long): Unit", "member" : "akka.persistence.Snapshotter.loadSnapshot", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#loadSnapshot(persistenceId:String,criteria:akka.persistence.SnapshotSelectionCriteria,toSequenceNr:Long):Unit", "kind" : "def"}, {"label" : "postRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.postRestart", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#postRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.preStart", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#preStart():Unit", "kind" : "def"}, {"label" : "supervisorStrategy", "tail" : "(): SupervisorStrategy", "member" : "akka.actor.Actor.supervisorStrategy", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#supervisorStrategy:akka.actor.SupervisorStrategy", "kind" : "def"}, {"label" : "sender", "tail" : "(): ActorRef", "member" : "akka.actor.Actor.sender", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#sender():akka.actor.ActorRef", "kind" : "final def"}, {"label" : "self", "tail" : ": ActorRef", "member" : "akka.actor.Actor.self", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#self:akka.actor.ActorRef", "kind" : "implicit final val"}, {"label" : "context", "tail" : ": ActorContext", "member" : "akka.actor.Actor.context", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#context:akka.actor.ActorContext", "kind" : "implicit val"}, {"label" : "Receive", "tail" : "", "member" : "akka.actor.Actor.Receive", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#Receive=akka.actor.Actor.Receive", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "onRecoveryCompleted", "tail" : "(): Unit", "member" : "lerna.akka.entityreplication.raft.RaftActorBase.onRecoveryCompleted", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#onRecoveryCompleted():Unit", "kind" : "abstract def"}, {"label" : "onTransition", "tail" : ": TransitionHandler", "member" : "lerna.akka.entityreplication.raft.RaftActorBase.onTransition", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#onTransition:RaftActorBase.this.TransitionHandler", "kind" : "abstract val"}, {"label" : "stateBehaviors", "tail" : ": StateBehaviors", "member" : "lerna.akka.entityreplication.raft.RaftActorBase.stateBehaviors", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#stateBehaviors:RaftActorBase.this.StateBehaviors", "kind" : "abstract val"}, {"label" : "updateState", "tail" : "(domainEvent: DomainEvent): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.RaftActorBase.updateState", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#updateState(domainEvent:lerna.akka.entityreplication.raft.RaftActor.DomainEvent):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "abstract def"}, {"label" : "settings", "tail" : "(): RaftSettings", "member" : "lerna.akka.entityreplication.raft.RaftActorBase.settings", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#settings:lerna.akka.entityreplication.raft.RaftSettings", "kind" : "abstract def"}, {"label" : "persistenceId", "tail" : "(): String", "member" : "akka.persistence.PersistenceIdentity.persistenceId", "link" : "lerna\/akka\/entityreplication\/raft\/RaftActorBase.html#persistenceId:String", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "lerna.akka.entityreplication.raft.RaftMemberData", "object" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData$.html", "members_object" : [{"label" : "apply", "tail" : "(currentTerm: Term, votedFor: Option[MemberIndex], replicatedLog: ReplicatedLog, commitIndex: LogEntryIndex, lastApplied: LogEntryIndex, leaderMember: Option[MemberIndex], acceptedMembers: Set[MemberIndex], nextIndex: Option[NextIndex], matchIndex: MatchIndex, clients: Map[LogEntryIndex, ClientContext], snapshottingProgress: SnapshottingProgress, lastSnapshotStatus: SnapshotStatus): RaftMemberDataImpl", "member" : "lerna.akka.entityreplication.raft.RaftMemberData.apply", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData$.html#apply(currentTerm:lerna.akka.entityreplication.raft.model.Term,votedFor:Option[lerna.akka.entityreplication.raft.routing.MemberIndex],replicatedLog:lerna.akka.entityreplication.raft.model.ReplicatedLog,commitIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex,lastApplied:lerna.akka.entityreplication.raft.model.LogEntryIndex,leaderMember:Option[lerna.akka.entityreplication.raft.routing.MemberIndex],acceptedMembers:Set[lerna.akka.entityreplication.raft.routing.MemberIndex],nextIndex:Option[lerna.akka.entityreplication.raft.model.NextIndex],matchIndex:lerna.akka.entityreplication.raft.model.MatchIndex,clients:Map[lerna.akka.entityreplication.raft.model.LogEntryIndex,lerna.akka.entityreplication.raft.model.ClientContext],snapshottingProgress:lerna.akka.entityreplication.raft.model.SnapshottingProgress,lastSnapshotStatus:lerna.akka.entityreplication.raft.model.SnapshotStatus):lerna.akka.entityreplication.raft.RaftMemberDataImpl", "kind" : "def"}, {"label" : "apply", "tail" : "(persistentState: PersistentState): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.RaftMemberData.apply", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData$.html#apply(persistentState:lerna.akka.entityreplication.raft.PersistentStateData.PersistentState):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html", "kind" : "object", "members_trait" : [{"label" : "syncSnapshot", "tail" : "(snapshotLastLogTerm: Term, snapshotLastLogIndex: LogEntryIndex): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.RaftMemberData.syncSnapshot", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#syncSnapshot(snapshotLastLogTerm:lerna.akka.entityreplication.raft.model.Term,snapshotLastLogIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "updateLastSnapshotStatus", "tail" : "(snapshotLastTerm: Term, snapshotLastIndex: LogEntryIndex): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.RaftMemberData.updateLastSnapshotStatus", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#updateLastSnapshotStatus(snapshotLastTerm:lerna.akka.entityreplication.raft.model.Term,snapshotLastIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "recordSavedSnapshot", "tail" : "(snapshotMetadata: EntitySnapshotMetadata, preserveLogSize: Int)(onComplete: (SnapshottingProgress) => Unit): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.RaftMemberData.recordSavedSnapshot", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#recordSavedSnapshot(snapshotMetadata:lerna.akka.entityreplication.raft.snapshot.SnapshotProtocol.EntitySnapshotMetadata,preserveLogSize:Int)(onComplete:lerna.akka.entityreplication.raft.model.SnapshottingProgress=>Unit):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "startSnapshotting", "tail" : "(term: Term, logEntryIndex: LogEntryIndex, entityIds: Set[NormalizedEntityId]): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.RaftMemberData.startSnapshotting", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#startSnapshotting(term:lerna.akka.entityreplication.raft.model.Term,logEntryIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex,entityIds:Set[lerna.akka.entityreplication.model.NormalizedEntityId]):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "resolveSnapshotTargets", "tail" : "(): (Term, LogEntryIndex, Set[NormalizedEntityId])", "member" : "lerna.akka.entityreplication.raft.RaftMemberData.resolveSnapshotTargets", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#resolveSnapshotTargets():(lerna.akka.entityreplication.raft.model.Term,lerna.akka.entityreplication.raft.model.LogEntryIndex,Set[lerna.akka.entityreplication.model.NormalizedEntityId])", "kind" : "def"}, {"label" : "hasLogEntriesThatCanBeCompacted", "tail" : "(): Boolean", "member" : "lerna.akka.entityreplication.raft.RaftMemberData.hasLogEntriesThatCanBeCompacted", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#hasLogEntriesThatCanBeCompacted:Boolean", "kind" : "def"}, {"label" : "hasMatchLogEntry", "tail" : "(prevLogIndex: LogEntryIndex, prevLogTerm: Term): Boolean", "member" : "lerna.akka.entityreplication.raft.RaftMemberData.hasMatchLogEntry", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#hasMatchLogEntry(prevLogIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex,prevLogTerm:lerna.akka.entityreplication.raft.model.Term):Boolean", "kind" : "def"}, {"label" : "alreadyVotedOthers", "tail" : "(candidate: MemberIndex): Boolean", "member" : "lerna.akka.entityreplication.raft.RaftMemberData.alreadyVotedOthers", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#alreadyVotedOthers(candidate:lerna.akka.entityreplication.raft.routing.MemberIndex):Boolean", "kind" : "def"}, {"label" : "selectAlreadyAppliedEntries", "tail" : "(entityId: NormalizedEntityId, from: LogEntryIndex): Seq[LogEntry]", "member" : "lerna.akka.entityreplication.raft.RaftMemberData.selectAlreadyAppliedEntries", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#selectAlreadyAppliedEntries(entityId:lerna.akka.entityreplication.model.NormalizedEntityId,from:lerna.akka.entityreplication.raft.model.LogEntryIndex):Seq[lerna.akka.entityreplication.raft.model.LogEntry]", "kind" : "def"}, {"label" : "applyCommittedLogEntries", "tail" : "(handler: (Seq[LogEntry]) => Unit): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.RaftMemberData.applyCommittedLogEntries", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#applyCommittedLogEntries(handler:Seq[lerna.akka.entityreplication.raft.model.LogEntry]=>Unit):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "selectApplicableLogEntries", "tail" : "(): Seq[LogEntry]", "member" : "lerna.akka.entityreplication.raft.RaftMemberData.selectApplicableLogEntries", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#selectApplicableLogEntries:Seq[lerna.akka.entityreplication.raft.model.LogEntry]", "kind" : "def"}, {"label" : "handleCommittedLogEntriesAndClients", "tail" : "(handler: (Seq[(LogEntry, Option[ClientContext])]) => Unit): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.LeaderData.handleCommittedLogEntriesAndClients", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#handleCommittedLogEntriesAndClients(handler:Seq[(lerna.akka.entityreplication.raft.model.LogEntry,Option[lerna.akka.entityreplication.raft.model.ClientContext])]=>Unit):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "currentTermIsCommitted", "tail" : "(): Boolean", "member" : "lerna.akka.entityreplication.raft.LeaderData.currentTermIsCommitted", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#currentTermIsCommitted:Boolean", "kind" : "def"}, {"label" : "commit", "tail" : "(logEntryIndex: LogEntryIndex): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.LeaderData.commit", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#commit(logEntryIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "findReplicatedLastLogIndex", "tail" : "(numberOfAllMembers: Int, maxIndex: LogEntryIndex): LogEntryIndex", "member" : "lerna.akka.entityreplication.raft.LeaderData.findReplicatedLastLogIndex", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#findReplicatedLastLogIndex(numberOfAllMembers:Int,maxIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex):lerna.akka.entityreplication.raft.model.LogEntryIndex", "kind" : "def"}, {"label" : "markSyncLogFailed", "tail" : "(follower: MemberIndex): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.LeaderData.markSyncLogFailed", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#markSyncLogFailed(follower:lerna.akka.entityreplication.raft.routing.MemberIndex):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "syncLastLogIndex", "tail" : "(follower: MemberIndex, lastLogIndex: LogEntryIndex): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.LeaderData.syncLastLogIndex", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#syncLastLogIndex(follower:lerna.akka.entityreplication.raft.routing.MemberIndex,lastLogIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "nextIndexFor", "tail" : "(follower: MemberIndex): LogEntryIndex", "member" : "lerna.akka.entityreplication.raft.LeaderData.nextIndexFor", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#nextIndexFor(follower:lerna.akka.entityreplication.raft.routing.MemberIndex):lerna.akka.entityreplication.raft.model.LogEntryIndex", "kind" : "def"}, {"label" : "registerClient", "tail" : "(client: ClientContext, logEntryIndex: LogEntryIndex): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.LeaderData.registerClient", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#registerClient(client:lerna.akka.entityreplication.raft.model.ClientContext,logEntryIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "appendEvent", "tail" : "(event: EntityEvent): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.LeaderData.appendEvent", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#appendEvent(event:lerna.akka.entityreplication.raft.model.EntityEvent):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "initializeLeaderData", "tail" : "(): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.LeaderData.initializeLeaderData", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#initializeLeaderData():lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "gotAcceptionMajorityOf", "tail" : "(numberOfMembers: Int): Boolean", "member" : "lerna.akka.entityreplication.raft.CandidateData.gotAcceptionMajorityOf", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#gotAcceptionMajorityOf(numberOfMembers:Int):Boolean", "kind" : "def"}, {"label" : "acceptedBy", "tail" : "(follower: MemberIndex): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.CandidateData.acceptedBy", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#acceptedBy(follower:lerna.akka.entityreplication.raft.routing.MemberIndex):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "initializeCandidateData", "tail" : "(): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.CandidateData.initializeCandidateData", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#initializeCandidateData():lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "followLeaderCommit", "tail" : "(leaderCommit: LogEntryIndex): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.FollowerData.followLeaderCommit", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#followLeaderCommit(leaderCommit:lerna.akka.entityreplication.raft.model.LogEntryIndex):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "detectLeaderMember", "tail" : "(leaderMember: MemberIndex): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.FollowerData.detectLeaderMember", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#detectLeaderMember(leaderMember:lerna.akka.entityreplication.raft.routing.MemberIndex):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "appendEntries", "tail" : "(logEntries: Seq[LogEntry], prevLogIndex: LogEntryIndex): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.FollowerData.appendEntries", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#appendEntries(logEntries:Seq[lerna.akka.entityreplication.raft.model.LogEntry],prevLogIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "vote", "tail" : "(candidate: MemberIndex, term: Term): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.FollowerData.vote", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#vote(candidate:lerna.akka.entityreplication.raft.routing.MemberIndex,term:lerna.akka.entityreplication.raft.model.Term):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "syncTerm", "tail" : "(term: Term): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.FollowerData.syncTerm", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#syncTerm(term:lerna.akka.entityreplication.raft.model.Term):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "initializeFollowerData", "tail" : "(): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.FollowerData.initializeFollowerData", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#initializeFollowerData():lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "persistentState", "tail" : "(): PersistentState", "member" : "lerna.akka.entityreplication.raft.PersistentStateData.persistentState", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#persistentState:lerna.akka.entityreplication.raft.PersistentStateData.PersistentState", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "updateLeaderVolatileState", "tail" : "(nextIndex: Option[NextIndex], matchIndex: MatchIndex, clients: Map[LogEntryIndex, ClientContext]): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.LeaderData.updateLeaderVolatileState", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#updateLeaderVolatileState(nextIndex:Option[lerna.akka.entityreplication.raft.model.NextIndex],matchIndex:lerna.akka.entityreplication.raft.model.MatchIndex,clients:Map[lerna.akka.entityreplication.raft.model.LogEntryIndex,lerna.akka.entityreplication.raft.model.ClientContext]):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "abstract def"}, {"label" : "clients", "tail" : "(): Map[LogEntryIndex, ClientContext]", "member" : "lerna.akka.entityreplication.raft.LeaderData.clients", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#clients:Map[lerna.akka.entityreplication.raft.model.LogEntryIndex,lerna.akka.entityreplication.raft.model.ClientContext]", "kind" : "abstract def"}, {"label" : "matchIndex", "tail" : "(): MatchIndex", "member" : "lerna.akka.entityreplication.raft.LeaderData.matchIndex", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#matchIndex:lerna.akka.entityreplication.raft.model.MatchIndex", "kind" : "abstract def"}, {"label" : "nextIndex", "tail" : "(): Option[NextIndex]", "member" : "lerna.akka.entityreplication.raft.LeaderData.nextIndex", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#nextIndex:Option[lerna.akka.entityreplication.raft.model.NextIndex]", "kind" : "abstract def"}, {"label" : "updateCandidateVolatileState", "tail" : "(acceptedMembers: Set[MemberIndex]): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.CandidateData.updateCandidateVolatileState", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#updateCandidateVolatileState(acceptedMembers:Set[lerna.akka.entityreplication.raft.routing.MemberIndex]):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "abstract def"}, {"label" : "acceptedMembers", "tail" : "(): Set[MemberIndex]", "member" : "lerna.akka.entityreplication.raft.CandidateData.acceptedMembers", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#acceptedMembers:Set[lerna.akka.entityreplication.raft.routing.MemberIndex]", "kind" : "abstract def"}, {"label" : "updateFollowerVolatileState", "tail" : "(leaderMember: Option[MemberIndex]): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.FollowerData.updateFollowerVolatileState", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#updateFollowerVolatileState(leaderMember:Option[lerna.akka.entityreplication.raft.routing.MemberIndex]):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "abstract def"}, {"label" : "leaderMember", "tail" : "(): Option[MemberIndex]", "member" : "lerna.akka.entityreplication.raft.FollowerData.leaderMember", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#leaderMember:Option[lerna.akka.entityreplication.raft.routing.MemberIndex]", "kind" : "abstract def"}, {"label" : "updateVolatileState", "tail" : "(commitIndex: LogEntryIndex, lastApplied: LogEntryIndex, snapshottingProgress: SnapshottingProgress): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.VolatileStateData.updateVolatileState", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#updateVolatileState(commitIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex,lastApplied:lerna.akka.entityreplication.raft.model.LogEntryIndex,snapshottingProgress:lerna.akka.entityreplication.raft.model.SnapshottingProgress):T", "kind" : "abstract def"}, {"label" : "snapshottingProgress", "tail" : "(): SnapshottingProgress", "member" : "lerna.akka.entityreplication.raft.VolatileStateData.snapshottingProgress", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#snapshottingProgress:lerna.akka.entityreplication.raft.model.SnapshottingProgress", "kind" : "abstract def"}, {"label" : "lastApplied", "tail" : "(): LogEntryIndex", "member" : "lerna.akka.entityreplication.raft.VolatileStateData.lastApplied", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#lastApplied:lerna.akka.entityreplication.raft.model.LogEntryIndex", "kind" : "abstract def"}, {"label" : "commitIndex", "tail" : "(): LogEntryIndex", "member" : "lerna.akka.entityreplication.raft.VolatileStateData.commitIndex", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#commitIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex", "kind" : "abstract def"}, {"label" : "updatePersistentState", "tail" : "(currentTerm: Term, votedFor: Option[MemberIndex], replicatedLog: ReplicatedLog, lastSnapshotStatus: SnapshotStatus): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.PersistentStateData.updatePersistentState", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#updatePersistentState(currentTerm:lerna.akka.entityreplication.raft.model.Term,votedFor:Option[lerna.akka.entityreplication.raft.routing.MemberIndex],replicatedLog:lerna.akka.entityreplication.raft.model.ReplicatedLog,lastSnapshotStatus:lerna.akka.entityreplication.raft.model.SnapshotStatus):T", "kind" : "abstract def"}, {"label" : "lastSnapshotStatus", "tail" : "(): SnapshotStatus", "member" : "lerna.akka.entityreplication.raft.PersistentStateData.lastSnapshotStatus", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#lastSnapshotStatus:lerna.akka.entityreplication.raft.model.SnapshotStatus", "kind" : "abstract def"}, {"label" : "replicatedLog", "tail" : "(): ReplicatedLog", "member" : "lerna.akka.entityreplication.raft.PersistentStateData.replicatedLog", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#replicatedLog:lerna.akka.entityreplication.raft.model.ReplicatedLog", "kind" : "abstract def"}, {"label" : "votedFor", "tail" : "(): Option[MemberIndex]", "member" : "lerna.akka.entityreplication.raft.PersistentStateData.votedFor", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#votedFor:Option[lerna.akka.entityreplication.raft.routing.MemberIndex]", "kind" : "abstract def"}, {"label" : "currentTerm", "tail" : "(): Term", "member" : "lerna.akka.entityreplication.raft.PersistentStateData.currentTerm", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberData.html#currentTerm:lerna.akka.entityreplication.raft.model.Term", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "lerna.akka.entityreplication.raft.RaftMemberDataImpl", "shortDescription" : "", "members_case class" : [{"label" : "updateLeaderVolatileState", "tail" : "(nextIndex: Option[NextIndex], matchIndex: MatchIndex, clients: Map[LogEntryIndex, ClientContext]): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.RaftMemberDataImpl.updateLeaderVolatileState", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#updateLeaderVolatileState(nextIndex:Option[lerna.akka.entityreplication.raft.model.NextIndex],matchIndex:lerna.akka.entityreplication.raft.model.MatchIndex,clients:Map[lerna.akka.entityreplication.raft.model.LogEntryIndex,lerna.akka.entityreplication.raft.model.ClientContext]):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "updateCandidateVolatileState", "tail" : "(acceptedMembers: Set[MemberIndex]): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.RaftMemberDataImpl.updateCandidateVolatileState", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#updateCandidateVolatileState(acceptedMembers:Set[lerna.akka.entityreplication.raft.routing.MemberIndex]):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "updateFollowerVolatileState", "tail" : "(leaderMember: Option[MemberIndex]): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.RaftMemberDataImpl.updateFollowerVolatileState", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#updateFollowerVolatileState(leaderMember:Option[lerna.akka.entityreplication.raft.routing.MemberIndex]):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "updateVolatileState", "tail" : "(commitIndex: LogEntryIndex, lastApplied: LogEntryIndex, snapshottingProgress: SnapshottingProgress): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.RaftMemberDataImpl.updateVolatileState", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#updateVolatileState(commitIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex,lastApplied:lerna.akka.entityreplication.raft.model.LogEntryIndex,snapshottingProgress:lerna.akka.entityreplication.raft.model.SnapshottingProgress):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "updatePersistentState", "tail" : "(currentTerm: Term, votedFor: Option[MemberIndex], replicatedLog: ReplicatedLog, lastSnapshotStatus: SnapshotStatus): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.RaftMemberDataImpl.updatePersistentState", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#updatePersistentState(currentTerm:lerna.akka.entityreplication.raft.model.Term,votedFor:Option[lerna.akka.entityreplication.raft.routing.MemberIndex],replicatedLog:lerna.akka.entityreplication.raft.model.ReplicatedLog,lastSnapshotStatus:lerna.akka.entityreplication.raft.model.SnapshotStatus):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"member" : "lerna.akka.entityreplication.raft.RaftMemberDataImpl#<init>", "error" : "unsupported entity"}, {"label" : "lastSnapshotStatus", "tail" : ": SnapshotStatus", "member" : "lerna.akka.entityreplication.raft.RaftMemberDataImpl.lastSnapshotStatus", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#lastSnapshotStatus:lerna.akka.entityreplication.raft.model.SnapshotStatus", "kind" : "val"}, {"label" : "snapshottingProgress", "tail" : ": SnapshottingProgress", "member" : "lerna.akka.entityreplication.raft.RaftMemberDataImpl.snapshottingProgress", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#snapshottingProgress:lerna.akka.entityreplication.raft.model.SnapshottingProgress", "kind" : "val"}, {"label" : "clients", "tail" : ": Map[LogEntryIndex, ClientContext]", "member" : "lerna.akka.entityreplication.raft.RaftMemberDataImpl.clients", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#clients:Map[lerna.akka.entityreplication.raft.model.LogEntryIndex,lerna.akka.entityreplication.raft.model.ClientContext]", "kind" : "val"}, {"label" : "matchIndex", "tail" : ": MatchIndex", "member" : "lerna.akka.entityreplication.raft.RaftMemberDataImpl.matchIndex", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#matchIndex:lerna.akka.entityreplication.raft.model.MatchIndex", "kind" : "val"}, {"label" : "nextIndex", "tail" : ": Option[NextIndex]", "member" : "lerna.akka.entityreplication.raft.RaftMemberDataImpl.nextIndex", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#nextIndex:Option[lerna.akka.entityreplication.raft.model.NextIndex]", "kind" : "val"}, {"label" : "acceptedMembers", "tail" : ": Set[MemberIndex]", "member" : "lerna.akka.entityreplication.raft.RaftMemberDataImpl.acceptedMembers", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#acceptedMembers:Set[lerna.akka.entityreplication.raft.routing.MemberIndex]", "kind" : "val"}, {"label" : "leaderMember", "tail" : ": Option[MemberIndex]", "member" : "lerna.akka.entityreplication.raft.RaftMemberDataImpl.leaderMember", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#leaderMember:Option[lerna.akka.entityreplication.raft.routing.MemberIndex]", "kind" : "val"}, {"label" : "lastApplied", "tail" : ": LogEntryIndex", "member" : "lerna.akka.entityreplication.raft.RaftMemberDataImpl.lastApplied", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#lastApplied:lerna.akka.entityreplication.raft.model.LogEntryIndex", "kind" : "val"}, {"label" : "commitIndex", "tail" : ": LogEntryIndex", "member" : "lerna.akka.entityreplication.raft.RaftMemberDataImpl.commitIndex", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#commitIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex", "kind" : "val"}, {"label" : "replicatedLog", "tail" : ": ReplicatedLog", "member" : "lerna.akka.entityreplication.raft.RaftMemberDataImpl.replicatedLog", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#replicatedLog:lerna.akka.entityreplication.raft.model.ReplicatedLog", "kind" : "val"}, {"label" : "votedFor", "tail" : ": Option[MemberIndex]", "member" : "lerna.akka.entityreplication.raft.RaftMemberDataImpl.votedFor", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#votedFor:Option[lerna.akka.entityreplication.raft.routing.MemberIndex]", "kind" : "val"}, {"label" : "currentTerm", "tail" : ": Term", "member" : "lerna.akka.entityreplication.raft.RaftMemberDataImpl.currentTerm", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#currentTerm:lerna.akka.entityreplication.raft.model.Term", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "syncSnapshot", "tail" : "(snapshotLastLogTerm: Term, snapshotLastLogIndex: LogEntryIndex): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.RaftMemberData.syncSnapshot", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#syncSnapshot(snapshotLastLogTerm:lerna.akka.entityreplication.raft.model.Term,snapshotLastLogIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "updateLastSnapshotStatus", "tail" : "(snapshotLastTerm: Term, snapshotLastIndex: LogEntryIndex): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.RaftMemberData.updateLastSnapshotStatus", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#updateLastSnapshotStatus(snapshotLastTerm:lerna.akka.entityreplication.raft.model.Term,snapshotLastIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "recordSavedSnapshot", "tail" : "(snapshotMetadata: EntitySnapshotMetadata, preserveLogSize: Int)(onComplete: (SnapshottingProgress) => Unit): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.RaftMemberData.recordSavedSnapshot", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#recordSavedSnapshot(snapshotMetadata:lerna.akka.entityreplication.raft.snapshot.SnapshotProtocol.EntitySnapshotMetadata,preserveLogSize:Int)(onComplete:lerna.akka.entityreplication.raft.model.SnapshottingProgress=>Unit):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "startSnapshotting", "tail" : "(term: Term, logEntryIndex: LogEntryIndex, entityIds: Set[NormalizedEntityId]): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.RaftMemberData.startSnapshotting", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#startSnapshotting(term:lerna.akka.entityreplication.raft.model.Term,logEntryIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex,entityIds:Set[lerna.akka.entityreplication.model.NormalizedEntityId]):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "resolveSnapshotTargets", "tail" : "(): (Term, LogEntryIndex, Set[NormalizedEntityId])", "member" : "lerna.akka.entityreplication.raft.RaftMemberData.resolveSnapshotTargets", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#resolveSnapshotTargets():(lerna.akka.entityreplication.raft.model.Term,lerna.akka.entityreplication.raft.model.LogEntryIndex,Set[lerna.akka.entityreplication.model.NormalizedEntityId])", "kind" : "def"}, {"label" : "hasLogEntriesThatCanBeCompacted", "tail" : "(): Boolean", "member" : "lerna.akka.entityreplication.raft.RaftMemberData.hasLogEntriesThatCanBeCompacted", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#hasLogEntriesThatCanBeCompacted:Boolean", "kind" : "def"}, {"label" : "hasMatchLogEntry", "tail" : "(prevLogIndex: LogEntryIndex, prevLogTerm: Term): Boolean", "member" : "lerna.akka.entityreplication.raft.RaftMemberData.hasMatchLogEntry", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#hasMatchLogEntry(prevLogIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex,prevLogTerm:lerna.akka.entityreplication.raft.model.Term):Boolean", "kind" : "def"}, {"label" : "alreadyVotedOthers", "tail" : "(candidate: MemberIndex): Boolean", "member" : "lerna.akka.entityreplication.raft.RaftMemberData.alreadyVotedOthers", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#alreadyVotedOthers(candidate:lerna.akka.entityreplication.raft.routing.MemberIndex):Boolean", "kind" : "def"}, {"label" : "selectAlreadyAppliedEntries", "tail" : "(entityId: NormalizedEntityId, from: LogEntryIndex): Seq[LogEntry]", "member" : "lerna.akka.entityreplication.raft.RaftMemberData.selectAlreadyAppliedEntries", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#selectAlreadyAppliedEntries(entityId:lerna.akka.entityreplication.model.NormalizedEntityId,from:lerna.akka.entityreplication.raft.model.LogEntryIndex):Seq[lerna.akka.entityreplication.raft.model.LogEntry]", "kind" : "def"}, {"label" : "applyCommittedLogEntries", "tail" : "(handler: (Seq[LogEntry]) => Unit): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.RaftMemberData.applyCommittedLogEntries", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#applyCommittedLogEntries(handler:Seq[lerna.akka.entityreplication.raft.model.LogEntry]=>Unit):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "selectApplicableLogEntries", "tail" : "(): Seq[LogEntry]", "member" : "lerna.akka.entityreplication.raft.RaftMemberData.selectApplicableLogEntries", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#selectApplicableLogEntries:Seq[lerna.akka.entityreplication.raft.model.LogEntry]", "kind" : "def"}, {"label" : "handleCommittedLogEntriesAndClients", "tail" : "(handler: (Seq[(LogEntry, Option[ClientContext])]) => Unit): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.LeaderData.handleCommittedLogEntriesAndClients", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#handleCommittedLogEntriesAndClients(handler:Seq[(lerna.akka.entityreplication.raft.model.LogEntry,Option[lerna.akka.entityreplication.raft.model.ClientContext])]=>Unit):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "currentTermIsCommitted", "tail" : "(): Boolean", "member" : "lerna.akka.entityreplication.raft.LeaderData.currentTermIsCommitted", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#currentTermIsCommitted:Boolean", "kind" : "def"}, {"label" : "commit", "tail" : "(logEntryIndex: LogEntryIndex): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.LeaderData.commit", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#commit(logEntryIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "findReplicatedLastLogIndex", "tail" : "(numberOfAllMembers: Int, maxIndex: LogEntryIndex): LogEntryIndex", "member" : "lerna.akka.entityreplication.raft.LeaderData.findReplicatedLastLogIndex", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#findReplicatedLastLogIndex(numberOfAllMembers:Int,maxIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex):lerna.akka.entityreplication.raft.model.LogEntryIndex", "kind" : "def"}, {"label" : "markSyncLogFailed", "tail" : "(follower: MemberIndex): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.LeaderData.markSyncLogFailed", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#markSyncLogFailed(follower:lerna.akka.entityreplication.raft.routing.MemberIndex):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "syncLastLogIndex", "tail" : "(follower: MemberIndex, lastLogIndex: LogEntryIndex): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.LeaderData.syncLastLogIndex", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#syncLastLogIndex(follower:lerna.akka.entityreplication.raft.routing.MemberIndex,lastLogIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "nextIndexFor", "tail" : "(follower: MemberIndex): LogEntryIndex", "member" : "lerna.akka.entityreplication.raft.LeaderData.nextIndexFor", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#nextIndexFor(follower:lerna.akka.entityreplication.raft.routing.MemberIndex):lerna.akka.entityreplication.raft.model.LogEntryIndex", "kind" : "def"}, {"label" : "registerClient", "tail" : "(client: ClientContext, logEntryIndex: LogEntryIndex): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.LeaderData.registerClient", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#registerClient(client:lerna.akka.entityreplication.raft.model.ClientContext,logEntryIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "appendEvent", "tail" : "(event: EntityEvent): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.LeaderData.appendEvent", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#appendEvent(event:lerna.akka.entityreplication.raft.model.EntityEvent):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "initializeLeaderData", "tail" : "(): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.LeaderData.initializeLeaderData", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#initializeLeaderData():lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "gotAcceptionMajorityOf", "tail" : "(numberOfMembers: Int): Boolean", "member" : "lerna.akka.entityreplication.raft.CandidateData.gotAcceptionMajorityOf", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#gotAcceptionMajorityOf(numberOfMembers:Int):Boolean", "kind" : "def"}, {"label" : "acceptedBy", "tail" : "(follower: MemberIndex): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.CandidateData.acceptedBy", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#acceptedBy(follower:lerna.akka.entityreplication.raft.routing.MemberIndex):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "initializeCandidateData", "tail" : "(): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.CandidateData.initializeCandidateData", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#initializeCandidateData():lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "followLeaderCommit", "tail" : "(leaderCommit: LogEntryIndex): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.FollowerData.followLeaderCommit", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#followLeaderCommit(leaderCommit:lerna.akka.entityreplication.raft.model.LogEntryIndex):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "detectLeaderMember", "tail" : "(leaderMember: MemberIndex): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.FollowerData.detectLeaderMember", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#detectLeaderMember(leaderMember:lerna.akka.entityreplication.raft.routing.MemberIndex):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "appendEntries", "tail" : "(logEntries: Seq[LogEntry], prevLogIndex: LogEntryIndex): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.FollowerData.appendEntries", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#appendEntries(logEntries:Seq[lerna.akka.entityreplication.raft.model.LogEntry],prevLogIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "vote", "tail" : "(candidate: MemberIndex, term: Term): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.FollowerData.vote", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#vote(candidate:lerna.akka.entityreplication.raft.routing.MemberIndex,term:lerna.akka.entityreplication.raft.model.Term):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "syncTerm", "tail" : "(term: Term): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.FollowerData.syncTerm", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#syncTerm(term:lerna.akka.entityreplication.raft.model.Term):lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "initializeFollowerData", "tail" : "(): RaftMemberData", "member" : "lerna.akka.entityreplication.raft.FollowerData.initializeFollowerData", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#initializeFollowerData():lerna.akka.entityreplication.raft.RaftMemberData", "kind" : "def"}, {"label" : "persistentState", "tail" : "(): PersistentState", "member" : "lerna.akka.entityreplication.raft.PersistentStateData.persistentState", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#persistentState:lerna.akka.entityreplication.raft.PersistentStateData.PersistentState", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lerna\/akka\/entityreplication\/raft\/RaftMemberDataImpl.html", "kind" : "case class"}, {"name" : "lerna.akka.entityreplication.raft.RaftProtocol", "shortDescription" : "", "object" : "lerna\/akka\/entityreplication\/raft\/RaftProtocol$.html", "members_object" : [{"label" : "ReplicationSucceeded", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftProtocol.ReplicationSucceeded", "link" : "lerna\/akka\/entityreplication\/raft\/RaftProtocol$.html#ReplicationSucceededextendsRaftProtocol.ReplicationResponsewithProductwithSerializable", "kind" : "case class"}, {"label" : "ReplicationResponse", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftProtocol.ReplicationResponse", "link" : "lerna\/akka\/entityreplication\/raft\/RaftProtocol$.html#ReplicationResponseextendsAnyRef", "kind" : "sealed trait"}, {"label" : "Replicate", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftProtocol.Replicate", "link" : "lerna\/akka\/entityreplication\/raft\/RaftProtocol$.html#ReplicateextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Replicate", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftProtocol.Replicate", "link" : "lerna\/akka\/entityreplication\/raft\/RaftProtocol$.html#Replicate", "kind" : "object"}, {"label" : "Replica", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftProtocol.Replica", "link" : "lerna\/akka\/entityreplication\/raft\/RaftProtocol$.html#ReplicaextendsProductwithSerializable", "kind" : "case class"}, {"label" : "ForwardedCommand", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftProtocol.ForwardedCommand", "link" : "lerna\/akka\/entityreplication\/raft\/RaftProtocol$.html#ForwardedCommandextendsClusterReplicationSerializablewithProductwithSerializable", "kind" : "case class"}, {"label" : "Command", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftProtocol.Command", "link" : "lerna\/akka\/entityreplication\/raft\/RaftProtocol$.html#CommandextendsClusterReplicationSerializablewithProductwithSerializable", "kind" : "case class"}, {"label" : "RecoveryState", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftProtocol.RecoveryState", "link" : "lerna\/akka\/entityreplication\/raft\/RaftProtocol$.html#RecoveryStateextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "RequestRecovery", "tail" : "", "member" : "lerna.akka.entityreplication.raft.RaftProtocol.RequestRecovery", "link" : "lerna\/akka\/entityreplication\/raft\/RaftProtocol$.html#RequestRecoveryextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/RaftProtocol$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/RaftProtocol$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/RaftProtocol$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/RaftProtocol$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/RaftProtocol$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/RaftProtocol$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/RaftProtocol$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/RaftProtocol$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/RaftProtocol$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/RaftProtocol$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/RaftProtocol$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/RaftProtocol$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/RaftProtocol$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/RaftProtocol$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/RaftProtocol$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/RaftProtocol$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/RaftProtocol$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/RaftProtocol$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/RaftProtocol$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lerna.akka.entityreplication.raft.RaftSettings", "shortDescription" : "", "object" : "lerna\/akka\/entityreplication\/raft\/RaftSettings$.html", "members_class" : [{"label" : "queryPluginId", "tail" : ": String", "member" : "lerna.akka.entityreplication.raft.RaftSettings.queryPluginId", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#queryPluginId:String", "kind" : "val"}, {"label" : "snapshotStorePluginId", "tail" : ": String", "member" : "lerna.akka.entityreplication.raft.RaftSettings.snapshotStorePluginId", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#snapshotStorePluginId:String", "kind" : "val"}, {"label" : "journalPluginAdditionalConfig", "tail" : ": Config", "member" : "lerna.akka.entityreplication.raft.RaftSettings.journalPluginAdditionalConfig", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#journalPluginAdditionalConfig:com.typesafe.config.Config", "kind" : "val"}, {"label" : "journalPluginId", "tail" : ": String", "member" : "lerna.akka.entityreplication.raft.RaftSettings.journalPluginId", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#journalPluginId:String", "kind" : "val"}, {"label" : "clusterShardingConfig", "tail" : ": Config", "member" : "lerna.akka.entityreplication.raft.RaftSettings.clusterShardingConfig", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#clusterShardingConfig:com.typesafe.config.Config", "kind" : "val"}, {"label" : "snapshotSyncPersistenceOperationTimeout", "tail" : ": FiniteDuration", "member" : "lerna.akka.entityreplication.raft.RaftSettings.snapshotSyncPersistenceOperationTimeout", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#snapshotSyncPersistenceOperationTimeout:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "snapshotSyncCopyingParallelism", "tail" : ": Int", "member" : "lerna.akka.entityreplication.raft.RaftSettings.snapshotSyncCopyingParallelism", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#snapshotSyncCopyingParallelism:Int", "kind" : "val"}, {"label" : "randomizedCompactionLogSizeCheckInterval", "tail" : "(): FiniteDuration", "member" : "lerna.akka.entityreplication.raft.RaftSettings.randomizedCompactionLogSizeCheckInterval", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#randomizedCompactionLogSizeCheckInterval():scala.concurrent.duration.FiniteDuration", "kind" : "def"}, {"label" : "compactionLogSizeCheckInterval", "tail" : ": FiniteDuration", "member" : "lerna.akka.entityreplication.raft.RaftSettings.compactionLogSizeCheckInterval", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#compactionLogSizeCheckInterval:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "compactionPreserveLogSize", "tail" : ": Int", "member" : "lerna.akka.entityreplication.raft.RaftSettings.compactionPreserveLogSize", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#compactionPreserveLogSize:Int", "kind" : "val"}, {"label" : "compactionLogSizeThreshold", "tail" : ": Int", "member" : "lerna.akka.entityreplication.raft.RaftSettings.compactionLogSizeThreshold", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#compactionLogSizeThreshold:Int", "kind" : "val"}, {"label" : "compactionSnapshotCacheTimeToLive", "tail" : ": FiniteDuration", "member" : "lerna.akka.entityreplication.raft.RaftSettings.compactionSnapshotCacheTimeToLive", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#compactionSnapshotCacheTimeToLive:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "maxAppendEntriesBatchSize", "tail" : ": Int", "member" : "lerna.akka.entityreplication.raft.RaftSettings.maxAppendEntriesBatchSize", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#maxAppendEntriesBatchSize:Int", "kind" : "val"}, {"label" : "maxAppendEntriesSize", "tail" : ": Int", "member" : "lerna.akka.entityreplication.raft.RaftSettings.maxAppendEntriesSize", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#maxAppendEntriesSize:Int", "kind" : "val"}, {"label" : "quorumSize", "tail" : ": Int", "member" : "lerna.akka.entityreplication.raft.RaftSettings.quorumSize", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#quorumSize:Int", "kind" : "val"}, {"label" : "replicationFactor", "tail" : ": Int", "member" : "lerna.akka.entityreplication.raft.RaftSettings.replicationFactor", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#replicationFactor:Int", "kind" : "val"}, {"label" : "multiRaftRoles", "tail" : ": Set[String]", "member" : "lerna.akka.entityreplication.raft.RaftSettings.multiRaftRoles", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#multiRaftRoles:Set[String]", "kind" : "val"}, {"label" : "electionTimeoutMin", "tail" : ": Duration", "member" : "lerna.akka.entityreplication.raft.RaftSettings.electionTimeoutMin", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#electionTimeoutMin:scala.concurrent.duration.Duration", "kind" : "val"}, {"label" : "randomized", "tail" : "(duration: FiniteDuration): FiniteDuration", "member" : "lerna.akka.entityreplication.raft.RaftSettings.randomized", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#randomized(duration:scala.concurrent.duration.FiniteDuration):scala.concurrent.duration.FiniteDuration", "kind" : "def"}, {"label" : "heartbeatInterval", "tail" : ": FiniteDuration", "member" : "lerna.akka.entityreplication.raft.RaftSettings.heartbeatInterval", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#heartbeatInterval:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "randomizedElectionTimeout", "tail" : "(): FiniteDuration", "member" : "lerna.akka.entityreplication.raft.RaftSettings.randomizedElectionTimeout", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#randomizedElectionTimeout():scala.concurrent.duration.FiniteDuration", "kind" : "def"}, {"label" : "electionTimeout", "tail" : ": FiniteDuration", "member" : "lerna.akka.entityreplication.raft.RaftSettings.electionTimeout", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#electionTimeout:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "config", "tail" : ": Config", "member" : "lerna.akka.entityreplication.raft.RaftSettings.config", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#config:com.typesafe.config.Config", "kind" : "val"}, {"member" : "lerna.akka.entityreplication.raft.RaftSettings#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(root: Config): RaftSettings", "member" : "lerna.akka.entityreplication.raft.RaftSettings.apply", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings$.html#apply(root:com.typesafe.config.Config):lerna.akka.entityreplication.raft.RaftSettings", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/RaftSettings$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lerna\/akka\/entityreplication\/raft\/RaftSettings.html", "kind" : "object"}, {"name" : "lerna.akka.entityreplication.raft.VolatileStateData", "trait" : "lerna\/akka\/entityreplication\/raft\/VolatileStateData.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/VolatileStateData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/VolatileStateData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/VolatileStateData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/VolatileStateData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/VolatileStateData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/VolatileStateData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/VolatileStateData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/VolatileStateData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/VolatileStateData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/VolatileStateData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/VolatileStateData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/VolatileStateData.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/VolatileStateData.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/VolatileStateData.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/VolatileStateData.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/VolatileStateData.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/VolatileStateData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/VolatileStateData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/VolatileStateData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "updateVolatileState", "tail" : "(commitIndex: LogEntryIndex, lastApplied: LogEntryIndex, snapshottingProgress: SnapshottingProgress): T", "member" : "lerna.akka.entityreplication.raft.VolatileStateData.updateVolatileState", "link" : "lerna\/akka\/entityreplication\/raft\/VolatileStateData.html#updateVolatileState(commitIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex,lastApplied:lerna.akka.entityreplication.raft.model.LogEntryIndex,snapshottingProgress:lerna.akka.entityreplication.raft.model.SnapshottingProgress):T", "kind" : "abstract def"}, {"label" : "snapshottingProgress", "tail" : "(): SnapshottingProgress", "member" : "lerna.akka.entityreplication.raft.VolatileStateData.snapshottingProgress", "link" : "lerna\/akka\/entityreplication\/raft\/VolatileStateData.html#snapshottingProgress:lerna.akka.entityreplication.raft.model.SnapshottingProgress", "kind" : "abstract def"}, {"label" : "lastApplied", "tail" : "(): LogEntryIndex", "member" : "lerna.akka.entityreplication.raft.VolatileStateData.lastApplied", "link" : "lerna\/akka\/entityreplication\/raft\/VolatileStateData.html#lastApplied:lerna.akka.entityreplication.raft.model.LogEntryIndex", "kind" : "abstract def"}, {"label" : "commitIndex", "tail" : "(): LogEntryIndex", "member" : "lerna.akka.entityreplication.raft.VolatileStateData.commitIndex", "link" : "lerna\/akka\/entityreplication\/raft\/VolatileStateData.html#commitIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex", "kind" : "abstract def"}], "shortDescription" : ""}], "lerna.akka.entityreplication.testkit" : [{"name" : "lerna.akka.entityreplication.testkit.TestReplicationActor", "shortDescription" : "", "members_class" : [{"label" : "active", "tail" : "(dummyLogEntryIndex: LogEntryIndex): Receive", "member" : "lerna.akka.entityreplication.testkit.TestReplicationActor.active", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActor.html#active(dummyLogEntryIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex):TestReplicationActor.this.Receive", "kind" : "def"}, {"label" : "receive", "tail" : "(): Receive", "member" : "lerna.akka.entityreplication.testkit.TestReplicationActor.receive", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActor.html#receive:TestReplicationActor.this.Receive", "kind" : "def"}, {"member" : "lerna.akka.entityreplication.testkit.TestReplicationActor#<init>", "error" : "unsupported entity"}, {"label" : "unhandled", "tail" : "(message: Any): Unit", "member" : "akka.actor.Actor.unhandled", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActor.html#unhandled(message:Any):Unit", "kind" : "def"}, {"label" : "postRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.postRestart", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActor.html#postRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "preRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.Actor.preRestart", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActor.html#preRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "postStop", "tail" : "(): Unit", "member" : "akka.actor.Actor.postStop", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActor.html#postStop():Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.preStart", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActor.html#preStart():Unit", "kind" : "def"}, {"label" : "supervisorStrategy", "tail" : "(): SupervisorStrategy", "member" : "akka.actor.Actor.supervisorStrategy", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActor.html#supervisorStrategy:akka.actor.SupervisorStrategy", "kind" : "def"}, {"label" : "aroundPostRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.aroundPostRestart", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActor.html#aroundPostRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "aroundPreRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.Actor.aroundPreRestart", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActor.html#aroundPreRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "aroundPostStop", "tail" : "(): Unit", "member" : "akka.actor.Actor.aroundPostStop", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActor.html#aroundPostStop():Unit", "kind" : "def"}, {"label" : "aroundPreStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.aroundPreStart", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActor.html#aroundPreStart():Unit", "kind" : "def"}, {"label" : "aroundReceive", "tail" : "(receive: akka.actor.Actor.Receive, msg: Any): Unit", "member" : "akka.actor.Actor.aroundReceive", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActor.html#aroundReceive(receive:akka.actor.Actor.Receive,msg:Any):Unit", "kind" : "def"}, {"label" : "sender", "tail" : "(): ActorRef", "member" : "akka.actor.Actor.sender", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActor.html#sender():akka.actor.ActorRef", "kind" : "final def"}, {"label" : "self", "tail" : ": ActorRef", "member" : "akka.actor.Actor.self", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActor.html#self:akka.actor.ActorRef", "kind" : "implicit final val"}, {"label" : "context", "tail" : ": ActorContext", "member" : "akka.actor.Actor.context", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActor.html#context:akka.actor.ActorContext", "kind" : "implicit val"}, {"label" : "Receive", "tail" : "", "member" : "akka.actor.Actor.Receive", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActor.html#Receive=akka.actor.Actor.Receive", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActor.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActor.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActor.html", "kind" : "class"}, {"name" : "lerna.akka.entityreplication.testkit.TestReplicationActorProps", "shortDescription" : "The TestReplicationActorProps allows to test ReplicationActor like a normal Actor.", "object" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActorProps$.html", "members_object" : [{"label" : "apply", "tail" : "(replicationActorProps: Props): Props", "member" : "lerna.akka.entityreplication.testkit.TestReplicationActorProps.apply", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActorProps$.html#apply(replicationActorProps:akka.actor.Props):akka.actor.Props", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActorProps$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActorProps$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActorProps$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActorProps$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActorProps$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActorProps$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActorProps$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActorProps$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActorProps$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActorProps$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActorProps$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActorProps$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActorProps$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActorProps$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActorProps$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActorProps$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActorProps$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActorProps$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/testkit\/TestReplicationActorProps$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "lerna.akka.entityreplication.raft.model" : [{"name" : "lerna.akka.entityreplication.raft.model.ClientContext", "shortDescription" : "", "members_case class" : [{"member" : "lerna.akka.entityreplication.raft.model.ClientContext#<init>", "error" : "unsupported entity"}, {"label" : "originSender", "tail" : ": Option[ActorRef]", "member" : "lerna.akka.entityreplication.raft.model.ClientContext.originSender", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ClientContext.html#originSender:Option[akka.actor.ActorRef]", "kind" : "val"}, {"label" : "instanceId", "tail" : ": Option[EntityInstanceId]", "member" : "lerna.akka.entityreplication.raft.model.ClientContext.instanceId", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ClientContext.html#instanceId:Option[lerna.akka.entityreplication.model.EntityInstanceId]", "kind" : "val"}, {"label" : "ref", "tail" : ": ActorRef", "member" : "lerna.akka.entityreplication.raft.model.ClientContext.ref", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ClientContext.html#ref:akka.actor.ActorRef", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ClientContext.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ClientContext.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ClientContext.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ClientContext.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ClientContext.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ClientContext.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ClientContext.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ClientContext.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ClientContext.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ClientContext.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ClientContext.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ClientContext.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ClientContext.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ClientContext.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ClientContext.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ClientContext.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ClientContext.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lerna\/akka\/entityreplication\/raft\/model\/ClientContext.html", "kind" : "case class"}, {"name" : "lerna.akka.entityreplication.raft.model.EntityEvent", "shortDescription" : "", "members_case class" : [{"member" : "lerna.akka.entityreplication.raft.model.EntityEvent#<init>", "error" : "unsupported entity"}, {"label" : "event", "tail" : ": Any", "member" : "lerna.akka.entityreplication.raft.model.EntityEvent.event", "link" : "lerna\/akka\/entityreplication\/raft\/model\/EntityEvent.html#event:Any", "kind" : "val"}, {"label" : "entityId", "tail" : ": Option[NormalizedEntityId]", "member" : "lerna.akka.entityreplication.raft.model.EntityEvent.entityId", "link" : "lerna\/akka\/entityreplication\/raft\/model\/EntityEvent.html#entityId:Option[lerna.akka.entityreplication.model.NormalizedEntityId]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lerna\/akka\/entityreplication\/raft\/model\/EntityEvent.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/model\/EntityEvent.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/model\/EntityEvent.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/model\/EntityEvent.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/model\/EntityEvent.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/model\/EntityEvent.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/model\/EntityEvent.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/model\/EntityEvent.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/EntityEvent.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/EntityEvent.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/EntityEvent.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/model\/EntityEvent.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/model\/EntityEvent.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/model\/EntityEvent.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/model\/EntityEvent.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/EntityEvent.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/EntityEvent.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lerna\/akka\/entityreplication\/raft\/model\/EntityEvent.html", "kind" : "case class"}, {"name" : "lerna.akka.entityreplication.raft.model.LogEntry", "shortDescription" : "", "object" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry$.html", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "lerna.akka.entityreplication.raft.model.LogEntry.toString", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry.html#toString():String", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "lerna.akka.entityreplication.raft.model.LogEntry.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "lerna.akka.entityreplication.raft.model.LogEntry.equals", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(other: Any): Boolean", "member" : "lerna.akka.entityreplication.raft.model.LogEntry.canEqual", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry.html#canEqual(other:Any):Boolean", "kind" : "def"}, {"member" : "lerna.akka.entityreplication.raft.model.LogEntry#<init>", "error" : "unsupported entity"}, {"label" : "term", "tail" : ": Term", "member" : "lerna.akka.entityreplication.raft.model.LogEntry.term", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry.html#term:lerna.akka.entityreplication.raft.model.Term", "kind" : "val"}, {"label" : "event", "tail" : ": EntityEvent", "member" : "lerna.akka.entityreplication.raft.model.LogEntry.event", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry.html#event:lerna.akka.entityreplication.raft.model.EntityEvent", "kind" : "val"}, {"label" : "index", "tail" : ": LogEntryIndex", "member" : "lerna.akka.entityreplication.raft.model.LogEntry.index", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry.html#index:lerna.akka.entityreplication.raft.model.LogEntryIndex", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(index: LogEntryIndex, event: EntityEvent, term: Term): LogEntry", "member" : "lerna.akka.entityreplication.raft.model.LogEntry.apply", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry$.html#apply(index:lerna.akka.entityreplication.raft.model.LogEntryIndex,event:lerna.akka.entityreplication.raft.model.EntityEvent,term:lerna.akka.entityreplication.raft.model.Term):lerna.akka.entityreplication.raft.model.LogEntry", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntry.html", "kind" : "object"}, {"name" : "lerna.akka.entityreplication.raft.model.LogEntryIndex", "shortDescription" : "", "object" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex$.html", "members_object" : [{"label" : "min", "tail" : "(a: LogEntryIndex, b: LogEntryIndex): LogEntryIndex", "member" : "lerna.akka.entityreplication.raft.model.LogEntryIndex.min", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex$.html#min(a:lerna.akka.entityreplication.raft.model.LogEntryIndex,b:lerna.akka.entityreplication.raft.model.LogEntryIndex):lerna.akka.entityreplication.raft.model.LogEntryIndex", "kind" : "def"}, {"label" : "initial", "tail" : "(): LogEntryIndex", "member" : "lerna.akka.entityreplication.raft.model.LogEntryIndex.initial", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex$.html#initial():lerna.akka.entityreplication.raft.model.LogEntryIndex", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "toSeqIndex", "tail" : "(offset: LogEntryIndex): Int", "member" : "lerna.akka.entityreplication.raft.model.LogEntryIndex.toSeqIndex", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex.html#toSeqIndex(offset:lerna.akka.entityreplication.raft.model.LogEntryIndex):Int", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "lerna.akka.entityreplication.raft.model.LogEntryIndex.toString", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex.html#toString():String", "kind" : "def"}, {"label" : "compare", "tail" : "(that: LogEntryIndex): Int", "member" : "lerna.akka.entityreplication.raft.model.LogEntryIndex.compare", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex.html#compare(that:lerna.akka.entityreplication.raft.model.LogEntryIndex):Int", "kind" : "def"}, {"label" : "prev", "tail" : "(): LogEntryIndex", "member" : "lerna.akka.entityreplication.raft.model.LogEntryIndex.prev", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex.html#prev():lerna.akka.entityreplication.raft.model.LogEntryIndex", "kind" : "def"}, {"label" : "plus", "tail" : "(count: Int): LogEntryIndex", "member" : "lerna.akka.entityreplication.raft.model.LogEntryIndex.plus", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex.html#plus(count:Int):lerna.akka.entityreplication.raft.model.LogEntryIndex", "kind" : "def"}, {"label" : "next", "tail" : "(): LogEntryIndex", "member" : "lerna.akka.entityreplication.raft.model.LogEntryIndex.next", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex.html#next():lerna.akka.entityreplication.raft.model.LogEntryIndex", "kind" : "def"}, {"member" : "lerna.akka.entityreplication.raft.model.LogEntryIndex#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "compareTo", "tail" : "(that: LogEntryIndex): Int", "member" : "scala.math.Ordered.compareTo", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex.html#compareTo(that:A):Int", "kind" : "def"}, {"label" : ">=", "tail" : "(that: LogEntryIndex): Boolean", "member" : "scala.math.Ordered.>=", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex.html#>=(that:A):Boolean", "kind" : "def"}, {"label" : "<=", "tail" : "(that: LogEntryIndex): Boolean", "member" : "scala.math.Ordered.<=", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex.html#<=(that:A):Boolean", "kind" : "def"}, {"label" : ">", "tail" : "(that: LogEntryIndex): Boolean", "member" : "scala.math.Ordered.>", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex.html#>(that:A):Boolean", "kind" : "def"}, {"label" : "<", "tail" : "(that: LogEntryIndex): Boolean", "member" : "scala.math.Ordered.<", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex.html#<(that:A):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lerna\/akka\/entityreplication\/raft\/model\/LogEntryIndex.html", "kind" : "object"}, {"name" : "lerna.akka.entityreplication.raft.model.MatchIndex", "shortDescription" : "", "members_case class" : [{"label" : "countMatch", "tail" : "(predicate: (LogEntryIndex) => Boolean): Int", "member" : "lerna.akka.entityreplication.raft.model.MatchIndex.countMatch", "link" : "lerna\/akka\/entityreplication\/raft\/model\/MatchIndex.html#countMatch(predicate:lerna.akka.entityreplication.raft.model.LogEntryIndex=>Boolean):Int", "kind" : "def"}, {"label" : "update", "tail" : "(follower: MemberIndex, index: LogEntryIndex): MatchIndex", "member" : "lerna.akka.entityreplication.raft.model.MatchIndex.update", "link" : "lerna\/akka\/entityreplication\/raft\/model\/MatchIndex.html#update(follower:lerna.akka.entityreplication.raft.routing.MemberIndex,index:lerna.akka.entityreplication.raft.model.LogEntryIndex):lerna.akka.entityreplication.raft.model.MatchIndex", "kind" : "def"}, {"member" : "lerna.akka.entityreplication.raft.model.MatchIndex#<init>", "error" : "unsupported entity"}, {"label" : "indexes", "tail" : ": Map[MemberIndex, LogEntryIndex]", "member" : "lerna.akka.entityreplication.raft.model.MatchIndex.indexes", "link" : "lerna\/akka\/entityreplication\/raft\/model\/MatchIndex.html#indexes:Map[lerna.akka.entityreplication.raft.routing.MemberIndex,lerna.akka.entityreplication.raft.model.LogEntryIndex]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lerna\/akka\/entityreplication\/raft\/model\/MatchIndex.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/model\/MatchIndex.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/model\/MatchIndex.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/model\/MatchIndex.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/model\/MatchIndex.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/model\/MatchIndex.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/model\/MatchIndex.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/model\/MatchIndex.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/MatchIndex.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/MatchIndex.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/MatchIndex.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/model\/MatchIndex.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/model\/MatchIndex.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/model\/MatchIndex.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/model\/MatchIndex.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/MatchIndex.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/MatchIndex.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lerna\/akka\/entityreplication\/raft\/model\/MatchIndex.html", "kind" : "case class"}, {"name" : "lerna.akka.entityreplication.raft.model.NextIndex", "shortDescription" : "", "members_case class" : [{"label" : "update", "tail" : "(followerMemberIndex: MemberIndex, index: LogEntryIndex): NextIndex", "member" : "lerna.akka.entityreplication.raft.model.NextIndex.update", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NextIndex.html#update(followerMemberIndex:lerna.akka.entityreplication.raft.routing.MemberIndex,index:lerna.akka.entityreplication.raft.model.LogEntryIndex):lerna.akka.entityreplication.raft.model.NextIndex", "kind" : "def"}, {"label" : "apply", "tail" : "(followerMemberIndex: MemberIndex): LogEntryIndex", "member" : "lerna.akka.entityreplication.raft.model.NextIndex.apply", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NextIndex.html#apply(followerMemberIndex:lerna.akka.entityreplication.raft.routing.MemberIndex):lerna.akka.entityreplication.raft.model.LogEntryIndex", "kind" : "def"}, {"label" : "initialLogIndex", "tail" : ": LogEntryIndex", "member" : "lerna.akka.entityreplication.raft.model.NextIndex.initialLogIndex", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NextIndex.html#initialLogIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex", "kind" : "val"}, {"member" : "lerna.akka.entityreplication.raft.model.NextIndex#<init>", "error" : "unsupported entity"}, {"label" : "indexes", "tail" : ": Map[MemberIndex, LogEntryIndex]", "member" : "lerna.akka.entityreplication.raft.model.NextIndex.indexes", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NextIndex.html#indexes:Map[lerna.akka.entityreplication.raft.routing.MemberIndex,lerna.akka.entityreplication.raft.model.LogEntryIndex]", "kind" : "val"}, {"label" : "leaderLog", "tail" : ": ReplicatedLog", "member" : "lerna.akka.entityreplication.raft.model.NextIndex.leaderLog", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NextIndex.html#leaderLog:lerna.akka.entityreplication.raft.model.ReplicatedLog", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NextIndex.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NextIndex.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NextIndex.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NextIndex.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NextIndex.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NextIndex.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NextIndex.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NextIndex.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NextIndex.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NextIndex.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NextIndex.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NextIndex.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NextIndex.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NextIndex.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NextIndex.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NextIndex.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NextIndex.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lerna\/akka\/entityreplication\/raft\/model\/NextIndex.html", "kind" : "case class"}, {"name" : "lerna.akka.entityreplication.raft.model.NoOp", "case object" : "lerna\/akka\/entityreplication\/raft\/model\/NoOp$.html", "shortDescription" : "", "members_case object" : [{"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NoOp$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NoOp$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NoOp$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NoOp$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NoOp$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NoOp$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NoOp$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NoOp$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NoOp$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NoOp$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NoOp$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NoOp$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NoOp$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NoOp$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NoOp$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NoOp$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NoOp$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NoOp$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/NoOp$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "lerna.akka.entityreplication.raft.model.RaftMember", "shortDescription" : "", "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "lerna.akka.entityreplication.raft.model.RaftMember.toString", "link" : "lerna\/akka\/entityreplication\/raft\/model\/RaftMember.html#toString():String", "kind" : "def"}, {"member" : "lerna.akka.entityreplication.raft.model.RaftMember#<init>", "error" : "unsupported entity"}, {"label" : "selection", "tail" : ": ActorSelection", "member" : "lerna.akka.entityreplication.raft.model.RaftMember.selection", "link" : "lerna\/akka\/entityreplication\/raft\/model\/RaftMember.html#selection:akka.actor.ActorSelection", "kind" : "val"}, {"label" : "path", "tail" : ": ActorPath", "member" : "lerna.akka.entityreplication.raft.model.RaftMember.path", "link" : "lerna\/akka\/entityreplication\/raft\/model\/RaftMember.html#path:akka.actor.ActorPath", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lerna\/akka\/entityreplication\/raft\/model\/RaftMember.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/model\/RaftMember.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/model\/RaftMember.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/model\/RaftMember.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/model\/RaftMember.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/model\/RaftMember.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/model\/RaftMember.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/model\/RaftMember.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/RaftMember.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/RaftMember.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/RaftMember.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/model\/RaftMember.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/model\/RaftMember.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/model\/RaftMember.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/model\/RaftMember.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/RaftMember.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/RaftMember.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lerna\/akka\/entityreplication\/raft\/model\/RaftMember.html", "kind" : "case class"}, {"name" : "lerna.akka.entityreplication.raft.model.ReplicatedLog", "shortDescription" : "", "object" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog$.html", "members_object" : [{"label" : "apply", "tail" : "(): ReplicatedLog", "member" : "lerna.akka.entityreplication.raft.model.ReplicatedLog.apply", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog$.html#apply():lerna.akka.entityreplication.raft.model.ReplicatedLog", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "reset", "tail" : "(ancestorLastTerm: Term, ancestorLastIndex: LogEntryIndex): ReplicatedLog", "member" : "lerna.akka.entityreplication.raft.model.ReplicatedLog.reset", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog.html#reset(ancestorLastTerm:lerna.akka.entityreplication.raft.model.Term,ancestorLastIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex):lerna.akka.entityreplication.raft.model.ReplicatedLog", "kind" : "def"}, {"label" : "deleteOldEntries", "tail" : "(to: LogEntryIndex, preserveLogSize: Int): ReplicatedLog", "member" : "lerna.akka.entityreplication.raft.model.ReplicatedLog.deleteOldEntries", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog.html#deleteOldEntries(to:lerna.akka.entityreplication.raft.model.LogEntryIndex,preserveLogSize:Int):lerna.akka.entityreplication.raft.model.ReplicatedLog", "kind" : "def"}, {"label" : "merge", "tail" : "(thatEntries: Seq[LogEntry], prevLogIndex: LogEntryIndex): ReplicatedLog", "member" : "lerna.akka.entityreplication.raft.model.ReplicatedLog.merge", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog.html#merge(thatEntries:Seq[lerna.akka.entityreplication.raft.model.LogEntry],prevLogIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex):lerna.akka.entityreplication.raft.model.ReplicatedLog", "kind" : "def"}, {"label" : "termAt", "tail" : "(logEntryIndex: LogEntryIndex): Option[Term]", "member" : "lerna.akka.entityreplication.raft.model.ReplicatedLog.termAt", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog.html#termAt(logEntryIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex):Option[lerna.akka.entityreplication.raft.model.Term]", "kind" : "def"}, {"label" : "lastLogTerm", "tail" : "(): Term", "member" : "lerna.akka.entityreplication.raft.model.ReplicatedLog.lastLogTerm", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog.html#lastLogTerm:lerna.akka.entityreplication.raft.model.Term", "kind" : "def"}, {"label" : "lastLogIndex", "tail" : "(): LogEntryIndex", "member" : "lerna.akka.entityreplication.raft.model.ReplicatedLog.lastLogIndex", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog.html#lastLogIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[LogEntry]", "member" : "lerna.akka.entityreplication.raft.model.ReplicatedLog.lastOption", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog.html#lastOption:Option[lerna.akka.entityreplication.raft.model.LogEntry]", "kind" : "def"}, {"label" : "last", "tail" : "(): LogEntry", "member" : "lerna.akka.entityreplication.raft.model.ReplicatedLog.last", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog.html#last:lerna.akka.entityreplication.raft.model.LogEntry", "kind" : "def"}, {"label" : "lastIndexOption", "tail" : "(): Option[LogEntryIndex]", "member" : "lerna.akka.entityreplication.raft.model.ReplicatedLog.lastIndexOption", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog.html#lastIndexOption:Option[lerna.akka.entityreplication.raft.model.LogEntryIndex]", "kind" : "def"}, {"label" : "headIndexOption", "tail" : "(): Option[LogEntryIndex]", "member" : "lerna.akka.entityreplication.raft.model.ReplicatedLog.headIndexOption", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog.html#headIndexOption:Option[lerna.akka.entityreplication.raft.model.LogEntryIndex]", "kind" : "def"}, {"label" : "append", "tail" : "(event: EntityEvent, term: Term): ReplicatedLog", "member" : "lerna.akka.entityreplication.raft.model.ReplicatedLog.append", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog.html#append(event:lerna.akka.entityreplication.raft.model.EntityEvent,term:lerna.akka.entityreplication.raft.model.Term):lerna.akka.entityreplication.raft.model.ReplicatedLog", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "lerna.akka.entityreplication.raft.model.ReplicatedLog.nonEmpty", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "sliceEntries", "tail" : "(from: LogEntryIndex, to: LogEntryIndex): Seq[LogEntry]", "member" : "lerna.akka.entityreplication.raft.model.ReplicatedLog.sliceEntries", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog.html#sliceEntries(from:lerna.akka.entityreplication.raft.model.LogEntryIndex,to:lerna.akka.entityreplication.raft.model.LogEntryIndex):Seq[lerna.akka.entityreplication.raft.model.LogEntry]", "kind" : "def"}, {"label" : "sliceEntriesFromHead", "tail" : "(to: LogEntryIndex): Seq[LogEntry]", "member" : "lerna.akka.entityreplication.raft.model.ReplicatedLog.sliceEntriesFromHead", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog.html#sliceEntriesFromHead(to:lerna.akka.entityreplication.raft.model.LogEntryIndex):Seq[lerna.akka.entityreplication.raft.model.LogEntry]", "kind" : "def"}, {"label" : "getFrom", "tail" : "(nextIndex: LogEntryIndex, maxEntryCount: Int, maxBatchCount: Int): Seq[Seq[LogEntry]]", "member" : "lerna.akka.entityreplication.raft.model.ReplicatedLog.getFrom", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog.html#getFrom(nextIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex,maxEntryCount:Int,maxBatchCount:Int):Seq[Seq[lerna.akka.entityreplication.raft.model.LogEntry]]", "kind" : "def"}, {"label" : "get", "tail" : "(index: LogEntryIndex): Option[LogEntry]", "member" : "lerna.akka.entityreplication.raft.model.ReplicatedLog.get", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog.html#get(index:lerna.akka.entityreplication.raft.model.LogEntryIndex):Option[lerna.akka.entityreplication.raft.model.LogEntry]", "kind" : "def"}, {"label" : "ancestorLastIndex", "tail" : ": LogEntryIndex", "member" : "lerna.akka.entityreplication.raft.model.ReplicatedLog.ancestorLastIndex", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog.html#ancestorLastIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex", "kind" : "val"}, {"label" : "ancestorLastTerm", "tail" : ": Term", "member" : "lerna.akka.entityreplication.raft.model.ReplicatedLog.ancestorLastTerm", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog.html#ancestorLastTerm:lerna.akka.entityreplication.raft.model.Term", "kind" : "val"}, {"label" : "entries", "tail" : ": Seq[LogEntry]", "member" : "lerna.akka.entityreplication.raft.model.ReplicatedLog.entries", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog.html#entries:Seq[lerna.akka.entityreplication.raft.model.LogEntry]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lerna\/akka\/entityreplication\/raft\/model\/ReplicatedLog.html", "kind" : "object"}, {"name" : "lerna.akka.entityreplication.raft.model.SnapshotStatus", "shortDescription" : "", "object" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus$.html", "members_object" : [{"label" : "empty", "tail" : "(): SnapshotStatus", "member" : "lerna.akka.entityreplication.raft.model.SnapshotStatus.empty", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus$.html#empty:lerna.akka.entityreplication.raft.model.SnapshotStatus", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "lerna.akka.entityreplication.raft.model.SnapshotStatus#<init>", "error" : "unsupported entity"}, {"label" : "snapshotLastLogIndex", "tail" : ": LogEntryIndex", "member" : "lerna.akka.entityreplication.raft.model.SnapshotStatus.snapshotLastLogIndex", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus.html#snapshotLastLogIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex", "kind" : "val"}, {"label" : "snapshotLastTerm", "tail" : ": Term", "member" : "lerna.akka.entityreplication.raft.model.SnapshotStatus.snapshotLastTerm", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus.html#snapshotLastTerm:lerna.akka.entityreplication.raft.model.Term", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshotStatus.html", "kind" : "object"}, {"name" : "lerna.akka.entityreplication.raft.model.SnapshottingProgress", "shortDescription" : "", "object" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress$.html", "members_object" : [{"label" : "empty", "tail" : "(): SnapshottingProgress", "member" : "lerna.akka.entityreplication.raft.model.SnapshottingProgress.empty", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress$.html#empty:lerna.akka.entityreplication.raft.model.SnapshottingProgress", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "recordSnapshottingComplete", "tail" : "(snapshotLastLogIndex: LogEntryIndex, entityId: NormalizedEntityId): SnapshottingProgress", "member" : "lerna.akka.entityreplication.raft.model.SnapshottingProgress.recordSnapshottingComplete", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress.html#recordSnapshottingComplete(snapshotLastLogIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex,entityId:lerna.akka.entityreplication.model.NormalizedEntityId):lerna.akka.entityreplication.raft.model.SnapshottingProgress", "kind" : "def"}, {"label" : "isCompleted", "tail" : "(): Boolean", "member" : "lerna.akka.entityreplication.raft.model.SnapshottingProgress.isCompleted", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress.html#isCompleted:Boolean", "kind" : "def"}, {"label" : "isInProgress", "tail" : "(): Boolean", "member" : "lerna.akka.entityreplication.raft.model.SnapshottingProgress.isInProgress", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress.html#isInProgress:Boolean", "kind" : "def"}, {"member" : "lerna.akka.entityreplication.raft.model.SnapshottingProgress#<init>", "error" : "unsupported entity"}, {"label" : "completedEntities", "tail" : ": Set[NormalizedEntityId]", "member" : "lerna.akka.entityreplication.raft.model.SnapshottingProgress.completedEntities", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress.html#completedEntities:Set[lerna.akka.entityreplication.model.NormalizedEntityId]", "kind" : "val"}, {"label" : "inProgressEntities", "tail" : ": Set[NormalizedEntityId]", "member" : "lerna.akka.entityreplication.raft.model.SnapshottingProgress.inProgressEntities", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress.html#inProgressEntities:Set[lerna.akka.entityreplication.model.NormalizedEntityId]", "kind" : "val"}, {"label" : "snapshotLastLogIndex", "tail" : ": LogEntryIndex", "member" : "lerna.akka.entityreplication.raft.model.SnapshottingProgress.snapshotLastLogIndex", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress.html#snapshotLastLogIndex:lerna.akka.entityreplication.raft.model.LogEntryIndex", "kind" : "val"}, {"label" : "snapshotLastLogTerm", "tail" : ": Term", "member" : "lerna.akka.entityreplication.raft.model.SnapshottingProgress.snapshotLastLogTerm", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress.html#snapshotLastLogTerm:lerna.akka.entityreplication.raft.model.Term", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lerna\/akka\/entityreplication\/raft\/model\/SnapshottingProgress.html", "kind" : "object"}, {"name" : "lerna.akka.entityreplication.raft.model.Term", "shortDescription" : "", "object" : "lerna\/akka\/entityreplication\/raft\/model\/Term$.html", "members_object" : [{"label" : "initial", "tail" : "(): Term", "member" : "lerna.akka.entityreplication.raft.model.Term.initial", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term$.html#initial():lerna.akka.entityreplication.raft.model.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "compare", "tail" : "(that: Term): Int", "member" : "lerna.akka.entityreplication.raft.model.Term.compare", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term.html#compare(that:lerna.akka.entityreplication.raft.model.Term):Int", "kind" : "def"}, {"label" : "isNewerThan", "tail" : "(other: Term): Boolean", "member" : "lerna.akka.entityreplication.raft.model.Term.isNewerThan", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term.html#isNewerThan(other:lerna.akka.entityreplication.raft.model.Term):Boolean", "kind" : "def"}, {"label" : "isOlderThan", "tail" : "(other: Term): Boolean", "member" : "lerna.akka.entityreplication.raft.model.Term.isOlderThan", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term.html#isOlderThan(other:lerna.akka.entityreplication.raft.model.Term):Boolean", "kind" : "def"}, {"label" : "next", "tail" : "(): Term", "member" : "lerna.akka.entityreplication.raft.model.Term.next", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term.html#next():lerna.akka.entityreplication.raft.model.Term", "kind" : "def"}, {"member" : "lerna.akka.entityreplication.raft.model.Term#<init>", "error" : "unsupported entity"}, {"label" : "term", "tail" : ": Long", "member" : "lerna.akka.entityreplication.raft.model.Term.term", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term.html#term:Long", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "compareTo", "tail" : "(that: Term): Int", "member" : "scala.math.Ordered.compareTo", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term.html#compareTo(that:A):Int", "kind" : "def"}, {"label" : ">=", "tail" : "(that: Term): Boolean", "member" : "scala.math.Ordered.>=", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term.html#>=(that:A):Boolean", "kind" : "def"}, {"label" : "<=", "tail" : "(that: Term): Boolean", "member" : "scala.math.Ordered.<=", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term.html#<=(that:A):Boolean", "kind" : "def"}, {"label" : ">", "tail" : "(that: Term): Boolean", "member" : "scala.math.Ordered.>", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term.html#>(that:A):Boolean", "kind" : "def"}, {"label" : "<", "tail" : "(that: Term): Boolean", "member" : "scala.math.Ordered.<", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term.html#<(that:A):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/raft\/model\/Term.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lerna\/akka\/entityreplication\/raft\/model\/Term.html", "kind" : "object"}], "lerna.akka.entityreplication" : [{"name" : "lerna.akka.entityreplication.ClusterReplication", "shortDescription" : "", "object" : "lerna\/akka\/entityreplication\/ClusterReplication$.html", "members_class" : [{"label" : "start", "tail" : "(typeName: String, entityProps: Props, settings: ClusterReplicationSettings, extractEntityId: ExtractEntityId, extractShardId: ExtractShardId): ActorRef", "member" : "lerna.akka.entityreplication.ClusterReplication.start", "link" : "lerna\/akka\/entityreplication\/ClusterReplication.html#start(typeName:String,entityProps:akka.actor.Props,settings:lerna.akka.entityreplication.ClusterReplicationSettings,extractEntityId:lerna.akka.entityreplication.ReplicationRegion.ExtractEntityId,extractShardId:lerna.akka.entityreplication.ReplicationRegion.ExtractShardId):akka.actor.ActorRef", "kind" : "def"}, {"member" : "lerna.akka.entityreplication.ClusterReplication#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/ClusterReplication.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/ClusterReplication.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/ClusterReplication.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/ClusterReplication.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/ClusterReplication.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/ClusterReplication.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/ClusterReplication.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/ClusterReplication.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/ClusterReplication.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/ClusterReplication.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/ClusterReplication.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/ClusterReplication.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/ClusterReplication.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/ClusterReplication.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/ClusterReplication.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/ClusterReplication.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/ClusterReplication.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/ClusterReplication.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/ClusterReplication.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "actorNamePrefix", "tail" : ": String", "member" : "lerna.akka.entityreplication.ClusterReplication.actorNamePrefix", "link" : "lerna\/akka\/entityreplication\/ClusterReplication$.html#actorNamePrefix:String", "kind" : "val"}, {"label" : "apply", "tail" : "(system: ActorSystem): ClusterReplication", "member" : "lerna.akka.entityreplication.ClusterReplication.apply", "link" : "lerna\/akka\/entityreplication\/ClusterReplication$.html#apply(system:akka.actor.ActorSystem):lerna.akka.entityreplication.ClusterReplication", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/ClusterReplication$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/ClusterReplication$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/ClusterReplication$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/ClusterReplication$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/ClusterReplication$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/ClusterReplication$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/ClusterReplication$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/ClusterReplication$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/ClusterReplication$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/ClusterReplication$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/ClusterReplication$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/ClusterReplication$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/ClusterReplication$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/ClusterReplication$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/ClusterReplication$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/ClusterReplication$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/ClusterReplication$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/ClusterReplication$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/ClusterReplication$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lerna\/akka\/entityreplication\/ClusterReplication.html", "kind" : "object"}, {"name" : "lerna.akka.entityreplication.ClusterReplicationSerializable", "trait" : "lerna\/akka\/entityreplication\/ClusterReplicationSerializable.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSerializable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSerializable.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSerializable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSerializable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSerializable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSerializable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSerializable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSerializable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSerializable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSerializable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSerializable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSerializable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSerializable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSerializable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSerializable.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSerializable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSerializable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSerializable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSerializable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "lerna.akka.entityreplication.ClusterReplicationSettings", "shortDescription" : "", "object" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings$.html", "members_class" : [{"label" : "selfMemberIndex", "tail" : ": MemberIndex", "member" : "lerna.akka.entityreplication.ClusterReplicationSettings.selfMemberIndex", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings.html#selfMemberIndex:lerna.akka.entityreplication.raft.routing.MemberIndex", "kind" : "val"}, {"label" : "allMemberIndexes", "tail" : ": Set[MemberIndex]", "member" : "lerna.akka.entityreplication.ClusterReplicationSettings.allMemberIndexes", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings.html#allMemberIndexes:Set[lerna.akka.entityreplication.raft.routing.MemberIndex]", "kind" : "val"}, {"label" : "raftSettings", "tail" : ": RaftSettings", "member" : "lerna.akka.entityreplication.ClusterReplicationSettings.raftSettings", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings.html#raftSettings:lerna.akka.entityreplication.raft.RaftSettings", "kind" : "val"}, {"label" : "recoveryEntityTimeout", "tail" : ": FiniteDuration", "member" : "lerna.akka.entityreplication.ClusterReplicationSettings.recoveryEntityTimeout", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings.html#recoveryEntityTimeout:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "config", "tail" : ": Config", "member" : "lerna.akka.entityreplication.ClusterReplicationSettings.config", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings.html#config:com.typesafe.config.Config", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(system: ActorSystem): ClusterReplicationSettings", "member" : "lerna.akka.entityreplication.ClusterReplicationSettings.apply", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings$.html#apply(system:akka.actor.ActorSystem):lerna.akka.entityreplication.ClusterReplicationSettings", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lerna\/akka\/entityreplication\/ClusterReplicationSettings.html", "kind" : "object"}, {"name" : "lerna.akka.entityreplication.ReplicationActor", "object" : "lerna\/akka\/entityreplication\/ReplicationActor$.html", "members_object" : [{"label" : "EntityRecoveryTimeoutException", "tail" : "", "member" : "lerna.akka.entityreplication.ReplicationActor.EntityRecoveryTimeoutException", "link" : "lerna\/akka\/entityreplication\/ReplicationActor$.html#EntityRecoveryTimeoutExceptionextendsRuntimeExceptionwithProductwithSerializable", "kind" : "final case class"}, {"label" : "Snapshot", "tail" : "", "member" : "lerna.akka.entityreplication.ReplicationActor.Snapshot", "link" : "lerna\/akka\/entityreplication\/ReplicationActor$.html#SnapshotextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "TakeSnapshot", "tail" : "", "member" : "lerna.akka.entityreplication.ReplicationActor.TakeSnapshot", "link" : "lerna\/akka\/entityreplication\/ReplicationActor$.html#TakeSnapshotextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/ReplicationActor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/ReplicationActor$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/ReplicationActor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/ReplicationActor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/ReplicationActor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/ReplicationActor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/ReplicationActor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/ReplicationActor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/ReplicationActor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/ReplicationActor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/ReplicationActor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/ReplicationActor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/ReplicationActor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/ReplicationActor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/ReplicationActor$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/ReplicationActor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/ReplicationActor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/ReplicationActor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/ReplicationActor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "lerna\/akka\/entityreplication\/ReplicationActor.html", "kind" : "object", "members_trait" : [{"label" : "ensureConsistency", "tail" : "(handler: => Unit): Unit", "member" : "lerna.akka.entityreplication.ReplicationActor.ensureConsistency", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#ensureConsistency(handler:=>Unit):Unit", "kind" : "def"}, {"label" : "replicate", "tail" : "(event: A)(handler: (A) => Unit): Unit", "member" : "lerna.akka.entityreplication.ReplicationActor.replicate", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#replicate[A](event:A)(handler:A=>Unit):Unit", "kind" : "def"}, {"label" : "aroundReceive", "tail" : "(receive: Receive, msg: Any): Unit", "member" : "lerna.akka.entityreplication.ReplicationActor.aroundReceive", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#aroundReceive(receive:ReplicationActor.this.Receive,msg:Any):Unit", "kind" : "def"}, {"label" : "aroundPreRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "lerna.akka.entityreplication.ReplicationActor.aroundPreRestart", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#aroundPreRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "aroundPreStart", "tail" : "(): Unit", "member" : "lerna.akka.entityreplication.ReplicationActor.aroundPreStart", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#aroundPreStart():Unit", "kind" : "def"}, {"label" : "receive", "tail" : "(): Receive", "member" : "lerna.akka.entityreplication.ReplicationActor.receive", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#receive:ReplicationActor.this.Receive", "kind" : "def"}, {"label" : "createStash", "tail" : "()(ctx: ActorContext, ref: ActorRef): StashSupport", "member" : "akka.lerna.StashFactory.createStash", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#createStash()(implicitctx:akka.actor.ActorContext,implicitref:akka.actor.ActorRef):akka.actor.StashSupport", "kind" : "final def"}, {"label" : "postStop", "tail" : "(): Unit", "member" : "akka.actor.UnrestrictedStash.postStop", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#postStop():Unit", "kind" : "def"}, {"label" : "preRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.UnrestrictedStash.preRestart", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#preRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "unstashAll", "tail" : "(): Unit", "member" : "akka.actor.StashSupport.unstashAll", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#unstashAll():Unit", "kind" : "def"}, {"label" : "stash", "tail" : "(): Unit", "member" : "akka.actor.StashSupport.stash", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#stash():Unit", "kind" : "def"}, {"label" : "unhandled", "tail" : "(message: Any): Unit", "member" : "akka.actor.Actor.unhandled", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#unhandled(message:Any):Unit", "kind" : "def"}, {"label" : "postRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.postRestart", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#postRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.preStart", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#preStart():Unit", "kind" : "def"}, {"label" : "supervisorStrategy", "tail" : "(): SupervisorStrategy", "member" : "akka.actor.Actor.supervisorStrategy", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#supervisorStrategy:akka.actor.SupervisorStrategy", "kind" : "def"}, {"label" : "aroundPostRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.aroundPostRestart", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#aroundPostRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "aroundPostStop", "tail" : "(): Unit", "member" : "akka.actor.Actor.aroundPostStop", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#aroundPostStop():Unit", "kind" : "def"}, {"label" : "sender", "tail" : "(): ActorRef", "member" : "akka.actor.Actor.sender", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#sender():akka.actor.ActorRef", "kind" : "final def"}, {"label" : "self", "tail" : ": ActorRef", "member" : "akka.actor.Actor.self", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#self:akka.actor.ActorRef", "kind" : "implicit final val"}, {"label" : "context", "tail" : ": ActorContext", "member" : "akka.actor.Actor.context", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#context:akka.actor.ActorContext", "kind" : "implicit val"}, {"label" : "Receive", "tail" : "", "member" : "akka.actor.Actor.Receive", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#Receive=akka.actor.Actor.Receive", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "currentState", "tail" : "(): StateData", "member" : "lerna.akka.entityreplication.ReplicationActor.currentState", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#currentState:StateData", "kind" : "abstract def"}, {"label" : "receiveCommand", "tail" : "(): Receive", "member" : "lerna.akka.entityreplication.ReplicationActor.receiveCommand", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#receiveCommand:ReplicationActor.this.Receive", "kind" : "abstract def"}, {"label" : "receiveReplica", "tail" : "(): Receive", "member" : "lerna.akka.entityreplication.ReplicationActor.receiveReplica", "link" : "lerna\/akka\/entityreplication\/ReplicationActor.html#receiveReplica:ReplicationActor.this.Receive", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "lerna.akka.entityreplication.ReplicationRegion", "shortDescription" : "", "object" : "lerna\/akka\/entityreplication\/ReplicationRegion$.html", "members_class" : [{"label" : "extractNormalizedEntityId", "tail" : "(): PartialFunction[Msg, (NormalizedEntityId, Msg)]", "member" : "lerna.akka.entityreplication.ReplicationRegion.extractNormalizedEntityId", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#extractNormalizedEntityId:PartialFunction[lerna.akka.entityreplication.ReplicationRegion.Msg,(lerna.akka.entityreplication.model.NormalizedEntityId,lerna.akka.entityreplication.ReplicationRegion.Msg)]", "kind" : "def"}, {"label" : "createRaftActorProps", "tail" : "(): Props", "member" : "lerna.akka.entityreplication.ReplicationRegion.createRaftActorProps", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#createRaftActorProps():akka.actor.Props", "kind" : "def"}, {"label" : "deliverMessage", "tail" : "(message: Any): Unit", "member" : "lerna.akka.entityreplication.ReplicationRegion.deliverMessage", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#deliverMessage(message:Any):Unit", "kind" : "def"}, {"label" : "handleRoutingCommand", "tail" : "(command: RoutingCommand): Unit", "member" : "lerna.akka.entityreplication.ReplicationRegion.handleRoutingCommand", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#handleRoutingCommand(command:lerna.akka.entityreplication.ReplicationRegion.RoutingCommand):Unit", "kind" : "def"}, {"label" : "handleClusterDomainEvent", "tail" : "(event: ClusterDomainEvent): Unit", "member" : "lerna.akka.entityreplication.ReplicationRegion.handleClusterDomainEvent", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#handleClusterDomainEvent(event:akka.cluster.ClusterEvent.ClusterDomainEvent):Unit", "kind" : "def"}, {"label" : "handleClusterState", "tail" : "(snapshot: CurrentClusterState): Unit", "member" : "lerna.akka.entityreplication.ReplicationRegion.handleClusterState", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#handleClusterState(snapshot:akka.cluster.ClusterEvent.CurrentClusterState):Unit", "kind" : "def"}, {"label" : "open", "tail" : "(): Receive", "member" : "lerna.akka.entityreplication.ReplicationRegion.open", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#open:ReplicationRegion.this.Receive", "kind" : "def"}, {"label" : "initializing", "tail" : "(): Receive", "member" : "lerna.akka.entityreplication.ReplicationRegion.initializing", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#initializing:ReplicationRegion.this.Receive", "kind" : "def"}, {"label" : "receive", "tail" : "(): Receive", "member" : "lerna.akka.entityreplication.ReplicationRegion.receive", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#receive:ReplicationRegion.this.Receive", "kind" : "def"}, {"label" : "postStop", "tail" : "(): Unit", "member" : "lerna.akka.entityreplication.ReplicationRegion.postStop", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#postStop():Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "lerna.akka.entityreplication.ReplicationRegion.preStart", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#preStart():Unit", "kind" : "def"}, {"label" : "otherMemberIndexes", "tail" : ": Set[MemberIndex]", "member" : "lerna.akka.entityreplication.ReplicationRegion.otherMemberIndexes", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#otherMemberIndexes:Set[lerna.akka.entityreplication.raft.routing.MemberIndex]", "kind" : "val"}, {"label" : "selfMemberIndex", "tail" : ": MemberIndex", "member" : "lerna.akka.entityreplication.ReplicationRegion.selfMemberIndex", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#selfMemberIndex:lerna.akka.entityreplication.raft.routing.MemberIndex", "kind" : "val"}, {"label" : "supervisorStrategy", "tail" : ": SupervisorStrategy", "member" : "lerna.akka.entityreplication.ReplicationRegion.supervisorStrategy", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#supervisorStrategy:akka.actor.SupervisorStrategy", "kind" : "val"}, {"member" : "lerna.akka.entityreplication.ReplicationRegion#<init>", "error" : "unsupported entity"}, {"label" : "preRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.UnrestrictedStash.preRestart", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#preRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "unstashAll", "tail" : "(): Unit", "member" : "akka.actor.StashSupport.unstashAll", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#unstashAll():Unit", "kind" : "def"}, {"label" : "stash", "tail" : "(): Unit", "member" : "akka.actor.StashSupport.stash", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#stash():Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): LoggingAdapter", "member" : "akka.actor.ActorLogging.log", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#log:akka.event.LoggingAdapter", "kind" : "def"}, {"label" : "unhandled", "tail" : "(message: Any): Unit", "member" : "akka.actor.Actor.unhandled", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#unhandled(message:Any):Unit", "kind" : "def"}, {"label" : "postRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.postRestart", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#postRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "aroundPostRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.aroundPostRestart", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#aroundPostRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "aroundPreRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.Actor.aroundPreRestart", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#aroundPreRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "aroundPostStop", "tail" : "(): Unit", "member" : "akka.actor.Actor.aroundPostStop", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#aroundPostStop():Unit", "kind" : "def"}, {"label" : "aroundPreStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.aroundPreStart", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#aroundPreStart():Unit", "kind" : "def"}, {"label" : "aroundReceive", "tail" : "(receive: akka.actor.Actor.Receive, msg: Any): Unit", "member" : "akka.actor.Actor.aroundReceive", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#aroundReceive(receive:akka.actor.Actor.Receive,msg:Any):Unit", "kind" : "def"}, {"label" : "sender", "tail" : "(): ActorRef", "member" : "akka.actor.Actor.sender", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#sender():akka.actor.ActorRef", "kind" : "final def"}, {"label" : "self", "tail" : ": ActorRef", "member" : "akka.actor.Actor.self", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#self:akka.actor.ActorRef", "kind" : "implicit final val"}, {"label" : "context", "tail" : ": ActorContext", "member" : "akka.actor.Actor.context", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#context:akka.actor.ActorContext", "kind" : "implicit val"}, {"label" : "Receive", "tail" : "", "member" : "akka.actor.Actor.Receive", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#Receive=akka.actor.Actor.Receive", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "Routed", "tail" : "", "member" : "lerna.akka.entityreplication.ReplicationRegion.Routed", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion$.html#RoutedextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "DeliverSomewhere", "tail" : "", "member" : "lerna.akka.entityreplication.ReplicationRegion.DeliverSomewhere", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion$.html#DeliverSomewhereextendsReplicationRegion.RoutingCommandwithProductwithSerializable", "kind" : "final case class"}, {"label" : "DeliverTo", "tail" : "", "member" : "lerna.akka.entityreplication.ReplicationRegion.DeliverTo", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion$.html#DeliverToextendsReplicationRegion.RoutingCommandwithProductwithSerializable", "kind" : "final case class"}, {"label" : "BroadcastWithoutSelf", "tail" : "", "member" : "lerna.akka.entityreplication.ReplicationRegion.BroadcastWithoutSelf", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion$.html#BroadcastWithoutSelfextendsReplicationRegion.RoutingCommandwithProductwithSerializable", "kind" : "final case class"}, {"label" : "Broadcast", "tail" : "", "member" : "lerna.akka.entityreplication.ReplicationRegion.Broadcast", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion$.html#BroadcastextendsReplicationRegion.RoutingCommandwithProductwithSerializable", "kind" : "final case class"}, {"label" : "RoutingCommand", "tail" : "", "member" : "lerna.akka.entityreplication.ReplicationRegion.RoutingCommand", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion$.html#RoutingCommandextendsAnyRef", "kind" : "sealed trait"}, {"label" : "Passivate", "tail" : "", "member" : "lerna.akka.entityreplication.ReplicationRegion.Passivate", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion$.html#PassivateextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "CreateShard", "tail" : "", "member" : "lerna.akka.entityreplication.ReplicationRegion.CreateShard", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion$.html#CreateShardextendsShardRequestwithProductwithSerializable", "kind" : "case class"}, {"label" : "props", "tail" : "(typeName: String, entityProps: Props, settings: ClusterReplicationSettings, extractEntityId: ExtractEntityId, extractShardId: ExtractShardId, maybeCommitLogStore: Option[CommitLogStore]): Props", "member" : "lerna.akka.entityreplication.ReplicationRegion.props", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion$.html#props(typeName:String,entityProps:akka.actor.Props,settings:lerna.akka.entityreplication.ClusterReplicationSettings,extractEntityId:lerna.akka.entityreplication.ReplicationRegion.ExtractEntityId,extractShardId:lerna.akka.entityreplication.ReplicationRegion.ExtractShardId,maybeCommitLogStore:Option[lerna.akka.entityreplication.raft.eventhandler.CommitLogStore]):akka.actor.Props", "kind" : "def"}, {"label" : "ExtractShardId", "tail" : "", "member" : "lerna.akka.entityreplication.ReplicationRegion.ExtractShardId", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion$.html#ExtractShardId=PartialFunction[lerna.akka.entityreplication.ReplicationRegion.Msg,lerna.akka.entityreplication.ReplicationRegion.ShardId]", "kind" : "type"}, {"label" : "ExtractEntityId", "tail" : "", "member" : "lerna.akka.entityreplication.ReplicationRegion.ExtractEntityId", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion$.html#ExtractEntityId=PartialFunction[lerna.akka.entityreplication.ReplicationRegion.Msg,(lerna.akka.entityreplication.ReplicationRegion.EntityId,lerna.akka.entityreplication.ReplicationRegion.Msg)]", "kind" : "type"}, {"label" : "Msg", "tail" : "", "member" : "lerna.akka.entityreplication.ReplicationRegion.Msg", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion$.html#Msg=Any", "kind" : "type"}, {"label" : "ShardId", "tail" : "", "member" : "lerna.akka.entityreplication.ReplicationRegion.ShardId", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion$.html#ShardId=String", "kind" : "type"}, {"label" : "EntityId", "tail" : "", "member" : "lerna.akka.entityreplication.ReplicationRegion.EntityId", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion$.html#EntityId=String", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lerna\/akka\/entityreplication\/ReplicationRegion$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lerna\/akka\/entityreplication\/ReplicationRegion.html", "kind" : "object"}]};